{"version":3,"file":"sampled-value-control-element-editor.js","sourceRoot":"","sources":["../../../../src/editors/publisher/sampled-value-control-element-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  css,\n  customElement,\n  html,\n  LitElement,\n  property,\n  TemplateResult,\n} from 'lit-element';\nimport { translate } from 'lit-translate';\n\nimport '@material/mwc-formfield';\nimport '@material/mwc-checkbox';\n\nimport '../../wizard-checkbox.js';\nimport '../../wizard-select.js';\nimport '../../wizard-textfield.js';\n\nimport { identity } from '../../foundation.js';\nimport { maxLength, patterns } from '../../wizards/foundation/limits.js';\nimport { typeNullable, typePattern } from '../../wizards/foundation/p-types.js';\nimport { ifDefined } from 'lit-html/directives/if-defined.js';\n\n@customElement('sampled-value-control-element-editor')\nexport class SampledValueControlElementEditor extends LitElement {\n  /** The document being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false })\n  doc!: XMLDocument;\n  /** The element being edited as provided to plugins by [[`OpenSCD`]]. */\n  @property({ attribute: false })\n  element!: Element;\n  @property({ attribute: false })\n  get sMV(): Element | null {\n    const cbName = this.element.getAttribute('name');\n    const iedName = this.element.closest('IED')?.getAttribute('name');\n    const apName = this.element.closest('AccessPoint')?.getAttribute('name');\n    const ldInst = this.element.closest('LDevice')?.getAttribute('inst');\n\n    return this.element.ownerDocument.querySelector(\n      `:root > Communication > SubNetwork > ` +\n        `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"] > ` +\n        `SMV[ldInst=\"${ldInst}\"][cbName=\"${cbName}\"]`\n    );\n  }\n\n  private renderSmvContent(): TemplateResult {\n    const sMV = this.sMV;\n    if (!sMV)\n      return html` <h3>\n        <div>${translate('publisher.smv.commsetting')}</div>\n        <div class=\"headersubtitle\">\n          ${translate('publisher.smv.noconnectionap')}\n        </div>\n      </h3>`;\n\n    const hasInstType = Array.from(sMV.querySelectorAll('Address > P')).some(\n      pType => pType.getAttribute('xsi:type')\n    );\n\n    const attributes: Record<string, string | null> = {};\n\n    ['MAC-Address', 'APPID', 'VLAN-ID', 'VLAN-PRIORITY'].forEach(key => {\n      if (!attributes[key])\n        attributes[key] =\n          sMV\n            .querySelector(`Address > P[type=\"${key}\"]`)\n            ?.textContent?.trim() ?? null;\n    });\n\n    return html` <h3>${translate('publisher.smv.commsetting')}</h3>\n      <mwc-formfield\n        label=\"${translate('connectedap.wizard.addschemainsttype')}\"\n        ><mwc-checkbox\n          id=\"instType\"\n          ?checked=\"${hasInstType}\"\n          disabled\n        ></mwc-checkbox></mwc-formfield\n      >${Object.entries(attributes).map(\n        ([key, value]) =>\n          html`<wizard-textfield\n            label=\"${key}\"\n            ?nullable=${typeNullable[key]}\n            .maybeValue=${value}\n            pattern=\"${ifDefined(typePattern[key])}\"\n            required\n            disabled\n          ></wizard-textfield>`\n      )}`;\n  }\n\n  private renderSmvOptsContent(): TemplateResult {\n    const [refreshTime, sampleRate, dataSet, security, synchSourceId] = [\n      'refreshTime',\n      'sampleRate',\n      'dataSet',\n      'security',\n      'synchSourceId',\n    ].map(\n      attr => this.element.querySelector('SmvOpts')?.getAttribute(attr) ?? null\n    );\n\n    return html`<h3>${translate('publisher.smv.smvopts')}</h3>\n      ${Object.entries({\n        refreshTime,\n        sampleRate,\n        dataSet,\n        security,\n        synchSourceId,\n      }).map(\n        ([key, value]) =>\n          html`<wizard-checkbox\n            label=\"${key}\"\n            .maybeValue=${value}\n            nullable\n            helper=\"${translate(`scl.${key}`)}\"\n            disabled\n          ></wizard-checkbox>`\n      )}`;\n  }\n\n  private renderOtherElements(): TemplateResult {\n    return html`<div class=\"content\">\n      ${this.renderSmvOptsContent()}${this.renderSmvContent()}\n    </div>`;\n  }\n\n  private renderSmvControlContent(): TemplateResult {\n    const [\n      name,\n      desc,\n      multicast,\n      smvID,\n      smpMod,\n      smpRate,\n      nofASDU,\n      securityEnabled,\n    ] = [\n      'name',\n      'desc',\n      'multicast',\n      'smvID',\n      'smpMod',\n      'smpRate',\n      'nofASDU',\n      'securityEnabled',\n    ].map(attr => this.element?.getAttribute(attr));\n\n    return html`<div class=\"content\">\n      <wizard-textfield\n        label=\"name\"\n        .maybeValue=${name}\n        helper=\"${translate('scl.name')}\"\n        required\n        validationMessage=\"${translate('textfield.required')}\"\n        pattern=\"${patterns.asciName}\"\n        maxLength=\"${maxLength.cbName}\"\n        dialogInitialFocus\n        disabled\n      ></wizard-textfield>\n      <wizard-textfield\n        label=\"desc\"\n        .maybeValue=${desc}\n        nullable\n        helper=\"${translate('scl.desc')}\"\n        disabled\n      ></wizard-textfield>\n      ${multicast === 'true'\n        ? html``\n        : html`<wizard-checkbox\n            label=\"multicast\"\n            .maybeValue=${multicast}\n            helper=\"${translate('scl.multicast')}\"\n            disabled\n          ></wizard-checkbox>`}\n      <wizard-textfield\n        label=\"smvID\"\n        .maybeValue=${smvID}\n        helper=\"${translate('scl.id')}\"\n        required\n        validationMessage=\"${translate('textfield.nonempty')}\"\n        disabled\n      ></wizard-textfield>\n      <wizard-select\n        label=\"smpMod\"\n        .maybeValue=${smpMod}\n        nullable\n        required\n        helper=\"${translate('scl.smpMod')}\"\n        disabled\n        >${['SmpPerPeriod', 'SmpPerSec', 'SecPerSmp'].map(\n          option =>\n            html`<mwc-list-item value=\"${option}\">${option}</mwc-list-item>`\n        )}</wizard-select\n      >\n      <wizard-textfield\n        label=\"smpRate\"\n        .maybeValue=${smpRate}\n        helper=\"${translate('scl.smpRate')}\"\n        required\n        type=\"number\"\n        min=\"0\"\n        disabled\n      ></wizard-textfield>\n      <wizard-textfield\n        label=\"nofASDU\"\n        .maybeValue=${nofASDU}\n        helper=\"${translate('scl.nofASDU')}\"\n        required\n        type=\"number\"\n        min=\"0\"\n        disabled\n      ></wizard-textfield>\n      <wizard-select\n        label=\"securityEnabled\"\n        .maybeValue=${securityEnabled}\n        nullable\n        required\n        helper=\"${translate('scl.securityEnable')}\"\n        disabled\n        >${['None', 'Signature', 'SignatureAndEncryption'].map(\n          type => html`<mwc-list-item value=\"${type}\">${type}</mwc-list-item>`\n        )}</wizard-select\n      >\n    </div>`;\n  }\n\n  render(): TemplateResult {\n    return html`<h2 style=\"display: flex;\">\n        <div style=\"flex:auto\">\n          <div>SampledValueControl</div>\n          <div class=\"headersubtitle\">${identity(this.element)}</div>\n        </div>\n      </h2>\n      <div class=\"parentcontent\">\n        ${this.renderSmvControlContent()}${this.renderOtherElements()}\n      </div>`;\n  }\n\n  static styles = css`\n    .parentcontent {\n      display: grid;\n      grid-gap: 12px;\n      box-sizing: border-box;\n      grid-template-columns: repeat(auto-fit, minmax(316px, auto));\n    }\n\n    .content {\n      border-left: thick solid var(--mdc-theme-on-primary);\n    }\n\n    .content > * {\n      display: block;\n      margin: 4px 8px 16px;\n    }\n\n    h2,\n    h3 {\n      color: var(--mdc-theme-on-surface);\n      font-family: 'Roboto', sans-serif;\n      font-weight: 300;\n      margin: 4px 8px 16px;\n      padding-left: 0.3em;\n    }\n\n    .headersubtitle {\n      font-size: 16px;\n      font-weight: 200;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n\n    *[iconTrailing='search'] {\n      --mdc-shape-small: 28px;\n    }\n\n    @media (max-width: 950px) {\n      .content {\n        border-left: 0px solid var(--mdc-theme-on-primary);\n      }\n    }\n  `;\n}\n"]}