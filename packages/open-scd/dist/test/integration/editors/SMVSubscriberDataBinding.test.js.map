{"version":3,"file":"SMVSubscriberDataBinding.test.js","sourceRoot":"","sources":["../../../../test/integration/editors/SMVSubscriberDataBinding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { initializeNsdoc } from '../../../src/foundation/nsdoc.js';\n\nimport SMVSubscriberDataBinding from '../../../src/editors/SMVSubscriberDataBinding.js';\n\nimport {\n  getExtrefDataBindingList,\n  getFCDABindingList,\n  getSelectedSubItemValue,\n  selectFCDAItem,\n} from './test-support.js';\n\nimport { MockOpenSCD } from '../../mock-open-scd.js';\nimport '../../mock-open-scd.js';\n\nimport { TemplateResult, html as litHTML } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\ncustomElements.define(\n  'smv-subscriber-data-binding-plugin',\n  SMVSubscriberDataBinding\n);\n@customElement('smv-mock-open-scd')\nclass SMVMockOpenSCD extends MockOpenSCD {\n  @query('smv-subscriber-data-binding-plugin')\n  plugin!: SMVSubscriberDataBinding;\n\n  renderHosting(): TemplateResult {\n    return litHTML`<smv-subscriber-data-binding-plugin\n      .doc=${this.doc}\n      .editCount=${this.editCount}\n      .nsdoc=${this.nsdoc}\n    ></smv-subscriber-data-binding-plugin>`;\n  }\n}\n\ndescribe('SMV Subscribe Data Binding Plugin', async () => {\n  let element: SMVSubscriberDataBinding;\n  let parent: SMVMockOpenSCD;\n  let doc: XMLDocument;\n\n  const nsdoc = await initializeNsdoc();\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/editors/DataBindingSMV2007B4.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<smv-mock-open-scd .doc=${doc} .nsdoc=${nsdoc}></smv-mock-open-scd>`\n    );\n    await parent.updateComplete;\n    element = parent.plugin;\n  });\n\n  it('when subscribing an available ExtRef then the lists are changed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefDataBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>fullSmv',\n      'SMV_Publisher>>CurrentTransformer>fullSmvsDataSet>CurrentTransformer/L2 TCTR 1.AmpSv q (MX)'\n    );\n    await element.updateComplete;\n    await parent.updateComplete;\n    await extRefListElement.requestUpdate();\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      1\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('1');\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(7);\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"SMV_Subscriber1\"] LDevice[inst=\"Overcurrent\"] > LN0[lnClass=\"LLN0\"] > Inputs > ExtRef[iedName=\"SMV_Publisher\"]'\n      ).length\n    ).to.be.equal(0);\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber1>>Overcurrent\"]'\n      )\n    )).click();\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      2\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('2');\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(6);\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"SMV_Subscriber1\"] LDevice[inst=\"Overcurrent\"] > LN0[lnClass=\"LLN0\"] > Inputs > ExtRef[iedName=\"SMV_Publisher\"]'\n      ).length\n    ).to.be.equal(1);\n  });\n\n  it('when unsubscribing a subscribed ExtRef then the lists are changed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefDataBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>fullSmv',\n      'SMV_Publisher>>CurrentTransformer>fullSmvsDataSet>CurrentTransformer/L3 TCTR 1.AmpSv instMag.i (MX)'\n    );\n    await element.updateComplete;\n    await parent.updateComplete;\n    await extRefListElement.requestUpdate();\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      2\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('2');\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(6);\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"SMV_Subscriber1\"] LDevice[inst=\"Overvoltage\"] > LN0[lnClass=\"LLN0\"] > Inputs > ExtRef[iedName=\"SMV_Publisher\"]'\n      ).length\n    ).to.be.equal(3);\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber1>>Overvoltage\"]'\n      )\n    )).click();\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      1\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('1');\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(7);\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"SMV_Subscriber1\"] LDevice[inst=\"Overvoltage\"] > LN0[lnClass=\"LLN0\"] > Inputs > ExtRef[iedName=\"SMV_Publisher\"]'\n      ).length\n    ).to.be.equal(2);\n  });\n\n  it('when unsubscribing all subscribed ExtRef then the inputs element is also removed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefDataBindingList(element);\n\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"SMV_Subscriber1\"] LDevice[inst=\"Overvoltage\"] > LN0[lnClass=\"LLN0\"] > Inputs'\n      ).length\n    ).to.be.equal(1);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>fullSmv',\n      'SMV_Publisher>>CurrentTransformer>fullSmvsDataSet>CurrentTransformer/L2 TCTR 1.AmpSv q (MX)'\n    );\n    await element.requestUpdate();\n    await extRefListElement.requestUpdate();\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber1>>Overvoltage\"]'\n      )\n    )).click();\n    await element.requestUpdate();\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>fullSmv',\n      'SMV_Publisher>>CurrentTransformer>fullSmvsDataSet>CurrentTransformer/L3 TCTR 1.AmpSv instMag.i (MX)'\n    );\n    await element.requestUpdate();\n    await extRefListElement.requestUpdate();\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber1>>Overvoltage\"]'\n      )\n    )).click();\n    await element.requestUpdate();\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>fullSmv',\n      'SMV_Publisher>>CurrentTransformer>fullSmvsDataSet>CurrentTransformer/L3 TCTR 1.AmpSv q (MX)'\n    );\n    await element.requestUpdate();\n    await extRefListElement.requestUpdate();\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber1>>Overvoltage\"]'\n      )\n    )).click();\n    await element.requestUpdate();\n\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"SMV_Subscriber1\"] LDevice[inst=\"Overvoltage\"] > LN0[lnClass=\"LLN0\"] > Inputs'\n      ).length\n    ).to.be.equal(0);\n  });\n});\n"]}