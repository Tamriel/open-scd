{"version":3,"file":"SMVSubscriberLaterBinding.test.js","sourceRoot":"","sources":["../../../../test/integration/editors/SMVSubscriberLaterBinding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport SMVSubscribeLaterBindingPlugin from '../../../src/editors/SMVSubscriberLaterBinding.js';\nimport {\n  getExtrefLaterBindingList,\n  getFCDABindingList,\n  getSelectedSubItemValue,\n  selectFCDAItem,\n} from './test-support.js';\nimport { ExtRefLaterBindingList } from '../../../src/editors/subscription/later-binding/ext-ref-later-binding-list.js';\n\nimport { MockOpenSCD } from '../../mock-open-scd.js';\nimport '../../mock-open-scd.js';\n\nimport { TemplateResult, html as litHTML } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\ncustomElements.define(\n  'smv-subscribe-later-binding-plugin',\n  SMVSubscribeLaterBindingPlugin\n);\n@customElement('smv-mock-open-scd')\nclass SMVMockOpenSCD extends MockOpenSCD {\n  @query('smv-subscribe-later-binding-plugin')\n  plugin!: SMVSubscribeLaterBindingPlugin;\n\n  renderHosting(): TemplateResult {\n    return litHTML`<smv-subscribe-later-binding-plugin\n      .doc=${this.doc}\n      .editCount=${this.editCount}\n      .nsdoc=${this.nsdoc}\n    ></smv-subscribe-later-binding-plugin>`;\n  }\n}\n\ndescribe('SMV Subscribe Later Binding plugin', () => {\n  let element: SMVSubscribeLaterBindingPlugin;\n  let parent: SMVMockOpenSCD;\n  let doc: XMLDocument;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/editors/LaterBindingSMV2007B4.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<smv-mock-open-scd .doc=${doc}></smv-mock-open-scd>`\n    );\n    await parent.updateComplete;\n    element = parent.plugin;\n    await element.updateComplete;\n  });\n\n  it('when selecting an FCDA element with subscriptions it looks like the latest snapshot', async () => {\n    doc = await fetch('/test/testfiles/editors/LaterBindingSMV-LSVS.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<smv-mock-open-scd .doc=\"${doc}\"></smv-mock-open-scd>`\n    );\n    await parent.updateComplete;\n    element = parent.plugin;\n    await element.updateComplete;\n\n    const fcdaListElement = getFCDABindingList(element);\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>currrentOnly',\n      'SMV_Publisher>>CurrentTransformer>currrentOnlysDataSet>CurrentTransformer/L1 TCTR 1.AmpSv instMag.i (MX)'\n    );\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    const extRefListElement = <ExtRefLaterBindingList>(\n      element.shadowRoot?.querySelector('extref-later-binding-list')\n    );\n    await extRefListElement.requestUpdate();\n\n    await expect(extRefListElement).shadowDom.to.equalSnapshot();\n  });\n\n  it('when subscribing an available ExtRef then the lists are changed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefLaterBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>currentOnly',\n      'SMV_Publisher>>CurrentTransformer>currentOnlysDataSet>CurrentTransformer/L2 TCTR 1.AmpSv instMag.i (MX)'\n    );\n    await element.updateComplete;\n    await parent.updateComplete;\n    await extRefListElement.requestUpdate();\n\n    expect(\n      extRefListElement['getSubscribedExtRefElements']().length\n    ).to.be.equal(0);\n    expect(getSelectedSubItemValue(fcdaListElement)).to.be.null;\n    expect(\n      extRefListElement['getAvailableExtRefElements']().length\n    ).to.be.equal(9);\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber>>Overvoltage> PTRC 1>AmpSv;TCTR2/AmpSv/instMag.i[0]\"]'\n      )\n    )).click();\n\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    expect(\n      extRefListElement['getSubscribedExtRefElements']().length\n    ).to.be.equal(1);\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('1');\n    expect(\n      extRefListElement['getAvailableExtRefElements']().length\n    ).to.be.equal(8);\n  });\n\n  it('when subscribing an available ExtRef then a supervision instance is created', async () => {\n    doc = await fetch('/test/testfiles/editors/LaterBindingSMV-LSVS.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<smv-mock-open-scd .doc=${doc}></smv-mock-open-scd>`\n    );\n    await parent.updateComplete;\n    element = parent.plugin;\n    await element.updateComplete;\n\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefLaterBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>fullSmv',\n      'SMV_Publisher>>CurrentTransformer>fullSmvsDataSet>CurrentTransformer/L2 TCTR 2.AmpSv instMag.i (MX)'\n    );\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber>>Overvoltage> PTRC 1>AmpSv;TCTR1/AmpSv/instMag.i[0]\"]'\n      )\n    )).click();\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    const supervisionInstance = element.doc.querySelector(\n      'IED[name=\"SMV_Subscriber\"] LN[lnClass=\"LSVS\"][inst=\"3\"]'\n    );\n    expect(supervisionInstance).to.exist;\n    expect(\n      supervisionInstance?.previousElementSibling?.getAttribute('lnClass')\n    ).to.equal('LSVS');\n    expect(\n      supervisionInstance?.previousElementSibling?.getAttribute('inst')\n    ).to.equal('2');\n  });\n\n  it('when unsubscribing a subscribed ExtRef then the lists are changed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefLaterBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'SMV_Publisher>>CurrentTransformer>currentOnly',\n      'SMV_Publisher>>CurrentTransformer>currentOnlysDataSet>CurrentTransformer/L1 TCTR 1.AmpSv q (MX)'\n    );\n    await element.requestUpdate();\n    await extRefListElement.requestUpdate();\n\n    expect(\n      extRefListElement['getSubscribedExtRefElements']().length\n    ).to.be.equal(3);\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('3');\n    expect(\n      extRefListElement['getAvailableExtRefElements']().length\n    ).to.be.equal(9);\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"SMV_Subscriber>>Overvoltage> PTRC 1>AmpSv;TCTR1/AmpSv/q[0]\"]'\n      )\n    )).click();\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    expect(\n      extRefListElement['getSubscribedExtRefElements']().length\n    ).to.be.equal(2);\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('2');\n    expect(\n      extRefListElement['getAvailableExtRefElements']().length\n    ).to.be.equal(10);\n  });\n});\n"]}