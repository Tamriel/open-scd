{"version":3,"file":"GooseSubscriberDataBinding.test.js","sourceRoot":"","sources":["../../../../test/integration/editors/GooseSubscriberDataBinding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { initializeNsdoc } from '../../../src/foundation/nsdoc.js';\n\nimport GooseSubscriberDataBinding from '../../../src/editors/GooseSubscriberDataBinding.js';\nimport '../../mock-open-scd.js';\nimport {\n  getExtrefDataBindingList,\n  getFCDABindingList,\n  getSelectedSubItemValue,\n  selectFCDAItem,\n} from './test-support.js';\nimport { MockOpenSCD } from '../../mock-open-scd.js';\n\nimport { TemplateResult, html as litHTML } from 'lit';\nimport { customElement, query } from 'lit/decorators.js';\n\ncustomElements.define(\n  'goose-subscriber-data-binding-plugin',\n  GooseSubscriberDataBinding\n);\n\n@customElement('goose-mock-open-scd')\nclass GooseMockOpenSCD extends MockOpenSCD {\n  @query('goose-subscriber-data-binding-plugin')\n  plugin!: GooseSubscriberDataBinding;\n\n  renderHosting(): TemplateResult {\n    return litHTML`<goose-subscriber-data-binding-plugin\n      .doc=${this.doc}\n      .editCount=${this.editCount}\n      .nsdoc=${this.nsdoc}\n    ></goose-subscriber-data-binding-plugin>`;\n  }\n}\n\ndescribe('GOOSE Subscribe Data Binding Plugin', async () => {\n  let element: GooseSubscriberDataBinding;\n  let parent: GooseMockOpenSCD;\n  let doc: XMLDocument;\n\n  const nsdoc = await initializeNsdoc();\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/editors/DataBindingGOOSE2007B4.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<goose-mock-open-scd\n        .doc=${doc}\n        .nsdoc=${nsdoc}\n      ></goose-mock-open-scd>`\n    );\n    element = parent.plugin;\n    await parent.updateComplete;\n    await element.updateComplete;\n  });\n\n  it('when subscribing an available ExtRef then the lists are changed and first ExtRef is added to the LN', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefDataBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE1',\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE1sDataSet>QB1_Disconnector/ CSWI 1.Pos q (ST)'\n    );\n    await parent.requestUpdate();\n\n    await parent.updateComplete;\n    await element.updateComplete;\n    await extRefListElement.updateComplete;\n    await fcdaListElement.updateComplete;\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      0\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.be.null;\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(8);\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"GOOSE_Subscriber2\"] LN[lnClass=\"XSWI\"][inst=\"1\"] > Inputs > ExtRef[iedName=\"GOOSE_Publisher\"]'\n      ).length\n    ).to.be.equal(0);\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"GOOSE_Subscriber2>>Earth_Switch> XSWI 1\"]'\n      )\n    )).click();\n    await new Promise(resolve => setTimeout(resolve, 250));\n\n    await parent.requestUpdate();\n    await parent.updateComplete;\n    await element.updateComplete;\n    await extRefListElement.updateComplete;\n    await fcdaListElement.updateComplete;\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      1\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.exist.and.have.text(\n      '1'\n    );\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(7);\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"GOOSE_Subscriber2\"] LN[lnClass=\"XSWI\"][inst=\"1\"] > Inputs > ExtRef[iedName=\"GOOSE_Publisher\"]'\n      ).length\n    ).to.be.equal(1);\n  });\n\n  it('when unsubscribing a subscribed ExtRef then the lists are changed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefDataBindingList(element);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE2',\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE2sDataSet>QB2_Disconnector/ CSWI 1.Pos q (ST)'\n    );\n    await element.updateComplete;\n    await extRefListElement.updateComplete;\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      1\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.have.text('1');\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(7);\n\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"GOOSE_Subscriber2\"] LN0[lnClass=\"LLN0\"] > Inputs > ExtRef[iedName=\"GOOSE_Publisher\"]'\n      ).length\n    ).to.be.equal(2);\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"GOOSE_Subscriber2>>Earth_Switch\"]'\n      )\n    )).click();\n    await element.updateComplete;\n    await parent.updateComplete;\n\n    expect(extRefListElement['getSubscribedLNElements']().length).to.be.equal(\n      0\n    );\n    expect(getSelectedSubItemValue(fcdaListElement)).to.be.null;\n    expect(extRefListElement['getAvailableLNElements']().length).to.be.equal(8);\n\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"GOOSE_Subscriber2\"] LN0[lnClass=\"LLN0\"] > Inputs > ExtRef[iedName=\"GOOSE_Publisher\"]'\n      ).length\n    ).to.be.equal(1);\n  });\n\n  it('when unsubscribing all subscribed ExtRef then the inputs element is also removed', async () => {\n    const fcdaListElement = getFCDABindingList(element);\n    const extRefListElement = getExtrefDataBindingList(element);\n\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"GOOSE_Subscriber2\"] LN0[lnClass=\"LLN0\"] > Inputs'\n      ).length\n    ).to.be.equal(1);\n\n    selectFCDAItem(\n      fcdaListElement,\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE2',\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE2sDataSet>QB2_Disconnector/ CSWI 1.Pos q (ST)'\n    );\n    await element.updateComplete;\n    await extRefListElement.updateComplete;\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"GOOSE_Subscriber2>>Earth_Switch\"]'\n      )\n    )).click();\n    await element.updateComplete;\n\n    selectFCDAItem(\n      fcdaListElement,\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE2',\n      'GOOSE_Publisher>>QB2_Disconnector>GOOSE2sDataSet>QB2_Disconnector/ CSWI 1.Pos stVal (ST)'\n    );\n    await element.updateComplete;\n    await extRefListElement.updateComplete;\n\n    (<HTMLElement>(\n      extRefListElement.shadowRoot!.querySelector(\n        'mwc-list-item[value=\"GOOSE_Subscriber2>>Earth_Switch\"]'\n      )\n    )).click();\n    await element.updateComplete;\n\n    expect(\n      element.doc.querySelectorAll(\n        'IED[name=\"GOOSE_Subscriber2\"] LN0[lnClass=\"LLN0\"] > Inputs'\n      ).length\n    ).to.be.equal(0);\n  });\n});\n"]}