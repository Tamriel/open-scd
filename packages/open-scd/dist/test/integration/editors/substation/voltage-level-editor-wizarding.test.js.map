{"version":3,"file":"voltage-level-editor-wizarding.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/voltage-level-editor-wizarding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\nimport fc from 'fast-check';\n\nimport '../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../src/addons/Wizards.js';\n\nimport '../../../../src/editors/substation/voltage-level-editor.js';\nimport { regexString, regExp, inverseRegExp } from '../../../foundation.js';\nimport { patterns } from '../../../../src/foundation.js';\n\ndescribe('voltage-level-editor wizarding integration', () => {\n  let doc: XMLDocument;\n  let parent: Wizards;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/valid2007B4.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    parent = await fixture(\n      html`<oscd-wizards .host=${document}\n        ><voltage-level-editor\n          .element=${doc.querySelector('VoltageLevel')}\n        ></voltage-level-editor\n      ></oscd-wizards>`\n    );\n\n    (<HTMLElement>(\n      parent\n        ?.querySelector('voltage-level-editor')\n        ?.shadowRoot?.querySelector('mwc-icon-button[icon=\"edit\"]')\n    )).click();\n    await parent.updateComplete;\n  });\n  it('looks like the latest snapshot', async () => {\n    await expect(parent.wizardUI.dialog).to.equalSnapshot({\n      ignoreAttributes: [\n        { tags: ['wizard-textfield'], attributes: ['pattern'] },\n      ],\n    });\n  });\n  //work around, because the escapes get removed in snapshot\n  it('should have correct pattern', async () => {\n    expect(\n      parent.wizardUI.dialog!.querySelectorAll('wizard-textfield[pattern]')\n        .length\n    ).to.equal(2);\n    expect(\n      parent.wizardUI\n        .dialog!.querySelectorAll('wizard-textfield[pattern]')![0]\n        .getAttribute('pattern')\n    ).to.equal(patterns.unsigned);\n    expect(\n      parent.wizardUI\n        .dialog!.querySelectorAll('wizard-textfield[pattern]')![1]\n        .getAttribute('pattern')\n    ).to.equal(patterns.decimal);\n  });\n  describe('the first input element', () => {\n    it('edits the attribute name', async () => {\n      expect(parent.wizardUI.inputs[0].label).to.equal('name');\n    });\n    it('edits only for valid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(regexString(regExp.tName, 1), async name => {\n          parent.wizardUI.inputs[0].value = name;\n          await parent.updateComplete;\n          expect(parent.wizardUI.inputs[0].checkValidity()).to.be.true;\n        })\n      );\n    });\n  });\n  describe('the second input element', () => {\n    it('edits the attribute desc', async () => {\n      expect(parent.wizardUI.inputs[1].label).to.equal('desc');\n    });\n    it('edits only for valid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(regexString(regExp.desc), async desc => {\n          parent.wizardUI.inputs[1].value = desc;\n          await parent.updateComplete;\n          expect(parent.wizardUI.inputs[1].checkValidity()).to.be.true;\n        })\n      );\n    });\n  });\n  describe('the third input element', () => {\n    it('edits the attribute nomFreq', async () => {\n      expect(parent.wizardUI.inputs[2].label).to.equal('nomFreq');\n    });\n    it('edits only for valid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(regexString(regExp.unsigned, 1), async nomFreq => {\n          parent.wizardUI.inputs[2].value = nomFreq;\n          await parent.updateComplete;\n          expect(parent.wizardUI.inputs[2].checkValidity()).to.be.true;\n        })\n      );\n    });\n    it('requires a nonnegative value', async () => {\n      parent.wizardUI.inputs[2].value = '';\n      await parent.updateComplete;\n      expect(parent.wizardUI.inputs[2].checkValidity()).to.be.false;\n      parent.wizardUI.inputs[2].value = '-50.';\n      await parent.updateComplete;\n      expect(parent.wizardUI.inputs[2].checkValidity()).to.be.false;\n      parent.wizardUI.inputs[2].value = '+50.';\n      await parent.updateComplete;\n      expect(parent.wizardUI.inputs[2].checkValidity()).to.be.true;\n    });\n    it('rejects action for invalid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(\n          regexString(inverseRegExp.unsigned, 1),\n          async nomFreq => {\n            parent.wizardUI.inputs[2].value = nomFreq;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[2].checkValidity()).to.be.false;\n          }\n        )\n      );\n    });\n  });\n  describe('the fourth input element', () => {\n    it('edits the attribute ', async () => {\n      expect(parent.wizardUI.inputs[3].label).to.equal('numPhases');\n    });\n    it('edits only for valid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(fc.integer(1, 255), async numPhases => {\n          parent.wizardUI.inputs[3].value = String(numPhases);\n          await parent.updateComplete;\n          expect(parent.wizardUI.inputs[3].checkValidity()).to.be.true;\n        })\n      );\n    });\n    it('is of the type unsingedByte', async () => {\n      parent.wizardUI.inputs[3].value = '0';\n      await parent.updateComplete;\n      expect(parent.wizardUI.inputs[3].checkValidity()).to.be.false;\n      parent.wizardUI.inputs[3].value = '256';\n      await parent.updateComplete;\n      expect(parent.wizardUI.inputs[3].checkValidity()).to.be.false;\n      parent.wizardUI.inputs[3].value = '-65';\n      await parent.updateComplete;\n      expect(parent.wizardUI.inputs[3].checkValidity()).to.be.false;\n    });\n    it('rejects edition for invalid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(\n          regexString(inverseRegExp.integer, 1),\n          async nomFreq => {\n            parent.wizardUI.inputs[3].value = nomFreq;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[3].checkValidity()).to.be.false;\n          }\n        )\n      );\n    });\n  });\n  describe('the fifth input element', () => {\n    it('edits the attribute ', async () => {\n      expect(parent.wizardUI.inputs[4].label).to.equal('Voltage');\n    });\n    it('edits only for valid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(regexString(regExp.decimal), async nomFreq => {\n          parent.wizardUI.inputs[4].value = nomFreq;\n          await parent.updateComplete;\n          expect(parent.wizardUI.inputs[4].checkValidity()).to.be.true;\n        })\n      );\n    });\n    it('rejects edition for invalid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(\n          regexString(inverseRegExp.decimal, 1),\n          async voltage => {\n            parent.wizardUI.inputs[4].value = voltage;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[4].checkValidity()).to.be.false;\n          }\n        )\n      );\n    });\n  });\n});\n"]}