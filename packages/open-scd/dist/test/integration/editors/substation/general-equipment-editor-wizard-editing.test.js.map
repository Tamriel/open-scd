{"version":3,"file":"general-equipment-editor-wizard-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/general-equipment-editor-wizard-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport '../../../../src/editors/substation/general-equipment-editor.js';\nimport { GeneralEquipmentEditor } from '../../../../src/editors/substation/general-equipment-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport { MenuBase } from '@material/mwc-menu/mwc-menu-base.js';\n\nconst openAndCancelMenu: (\n  parent: MockWizardEditor,\n  element: GeneralEquipmentEditor\n) => Promise<void> = (\n  parent: MockWizardEditor,\n  element: GeneralEquipmentEditor\n): Promise<void> =>\n  new Promise(async resolve => {\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    element?.shadowRoot\n      ?.querySelector<MenuBase>(\"mwc-icon-button[icon='playlist_add']\")!\n      .click();\n    const lnodMenuItem: ListItemBase =\n      element?.shadowRoot?.querySelector<ListItemBase>(\n        `mwc-list-item[value='LNode']`\n      )!;\n    lnodMenuItem.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.exist;\n\n    const secondaryAction: HTMLElement = <HTMLElement>(\n      parent.wizardUI.dialog?.querySelector(\n        'mwc-button[slot=\"secondaryAction\"][dialogaction=\"close\"]'\n      )\n    );\n\n    secondaryAction.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    return resolve();\n  });\n\ndescribe('general-equipment-editor wizarding editing integration', () => {\n  let doc: XMLDocument;\n  let parent: MockWizardEditor;\n  let element: GeneralEquipmentEditor | null;\n\n  describe('edit wizard', () => {\n    let nameField: WizardTextField;\n    let descField: WizardTextField;\n    let typeField: WizardTextField;\n    let secondaryAction: HTMLElement;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch(\n        '/test/testfiles/editors/substation/generalequipment.scd'\n      )\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><general-equipment-editor\n              .element=${doc.querySelector('GeneralEquipment')}\n            ></general-equipment-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('general-equipment-editor');\n      await (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-fab[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      descField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"desc\"]')\n      );\n      typeField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"type\"]')\n      );\n      secondaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"secondaryAction\"]'\n        )\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n    it('closes on secondary action', async () => {\n      secondaryAction.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      expect(parent.wizardUI.dialog).to.not.exist;\n    });\n    it('does not change name attribute if not unique within parent element', async () => {\n      const oldName = nameField.value;\n      nameField.value = 'genSub2';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('GeneralEquipment')?.getAttribute('name')\n      ).to.equal(oldName);\n    });\n    it('changes name attribute on primary action', async () => {\n      parent.wizardUI.inputs[0].value = 'newName';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('GeneralEquipment')?.getAttribute('name')\n      ).to.equal('newName');\n    });\n    it('changes type attribute on primary action', async () => {\n      parent.wizardUI.inputs[2].value = 'newAXN';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('GeneralEquipment')?.getAttribute('type')\n      ).to.equal('newAXN');\n    });\n    it('changes desc attribute on primary action', async () => {\n      descField.value = 'newDesc';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('GeneralEquipment')?.getAttribute('desc')\n      ).to.equal('newDesc');\n    });\n    it('deletes desc attribute if wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      descField.nullSwitch!.click();\n      await parent.updateComplete;\n      await primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('GeneralEquipment')?.getAttribute('desc')).to.be\n        .null;\n    });\n\n    describe('has a delete icon button that', () => {\n      let deleteButton: HTMLElement;\n\n      beforeEach(async () => {\n        deleteButton = <HTMLElement>(\n          element?.shadowRoot?.querySelector('mwc-fab[icon=\"delete\"]')\n        );\n        await parent.updateComplete;\n      });\n\n      it('removes the attached GeneralEquipment element from the document', async () => {\n        expect(\n          doc.querySelector(\n            'Substation[name=\"AA1\"] > GeneralEquipment[name=\"genSub\"]'\n          )\n        ).to.exist;\n\n        await deleteButton.click();\n\n        expect(\n          doc.querySelector(\n            'Substation[name=\"AA1\"] > GeneralEquipment[name=\"genSub\"]'\n          )\n        ).to.not.exist;\n      });\n    });\n  });\n\n  describe('Open add wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: GeneralEquipmentEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch(\n        '/test/testfiles/editors/substation/generalequipment.scd'\n      )\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><general-equipment-editor\n              .element=${doc.querySelector('GeneralEquipment')}\n              ?showfunctions=${true}\n            ></general-equipment-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('general-equipment-editor');\n\n      await parent.updateComplete;\n    });\n\n    it('Should open the same wizard for the second time', async () => {\n      await openAndCancelMenu(parent, element!);\n      await openAndCancelMenu(parent, element!);\n    });\n  });\n});\n"]}