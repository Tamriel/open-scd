{"version":3,"file":"voltage-level-editor-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/voltage-level-editor-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport '../../../../src/editors/substation/voltage-level-editor.js';\nimport { VoltageLevelEditor } from '../../../../src/editors/substation/voltage-level-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base.js';\nimport { MenuBase } from '@material/mwc-menu/mwc-menu-base.js';\n\nconst openAndCancelMenu: (\n  parent: MockWizardEditor,\n  element: VoltageLevelEditor\n) => Promise<void> = (\n  parent: MockWizardEditor,\n  element: VoltageLevelEditor\n): Promise<void> =>\n  new Promise(async resolve => {\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    element?.shadowRoot\n      ?.querySelector<MenuBase>(\"mwc-icon-button[icon='playlist_add']\")!\n      .click();\n    const powerTransformerMenuItem: ListItemBase =\n      element?.shadowRoot?.querySelector<ListItemBase>(\n        `mwc-list-item[value='PowerTransformer']`\n      )!;\n\n    console.log(powerTransformerMenuItem);\n    powerTransformerMenuItem.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.exist;\n\n    const secondaryAction: HTMLElement = <HTMLElement>(\n      parent.wizardUI.dialog?.querySelector(\n        'mwc-button[slot=\"secondaryAction\"]'\n      )\n    );\n\n    secondaryAction.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    return resolve();\n  });\n\ndescribe('voltage-level-editor wizarding editing integration', () => {\n  describe('edit wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n\n    let nameField: WizardTextField;\n    let descField: WizardTextField;\n    let nomFreqField: WizardTextField;\n    let numPhasesField: WizardTextField;\n    let voltageField: WizardTextField;\n    let secondaryAction: HTMLElement;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('voltage-level-editor');\n      await (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      descField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"desc\"]')\n      );\n      nomFreqField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"nomFreq\"]'\n        )\n      );\n      numPhasesField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"numPhases\"]'\n        )\n      );\n      voltageField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"Voltage\"]'\n        )\n      );\n      secondaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"secondaryAction\"]'\n        )\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n    it('closes on secondary action', async () => {\n      secondaryAction.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      expect(parent.wizardUI.dialog).to.not.exist;\n    });\n    it('does not change name attribute if not unique within parent element', async () => {\n      const oldName = nameField.value;\n      nameField.value = 'J1';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('name')).to.equal(\n        oldName\n      );\n    });\n    it('changes name attribute on primary action', async () => {\n      nameField.value = 'newName';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('name')).to.equal(\n        'newName'\n      );\n    });\n    it('changes desc attribute on primary action', async () => {\n      descField.value = 'newDesc';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('desc')).to.equal(\n        'newDesc'\n      );\n    });\n    it('deletes desc attribute if wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      descField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('desc')).to.be\n        .null;\n    });\n    it('changes nomFreq attribute on primary action', async () => {\n      nomFreqField.value = '30';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('VoltageLevel')?.getAttribute('nomFreq')\n      ).to.equal('30');\n    });\n    it('deletes nomFreq attribute if wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      nomFreqField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('nomFreq')).to.be\n        .null;\n    });\n    it('changes numPhases attribute on primary action', async () => {\n      numPhasesField.value = '3';\n      await parent.updateComplete;\n      primaryAction.click();\n      expect(\n        doc.querySelector('VoltageLevel')?.getAttribute('numPhases')\n      ).to.equal('3');\n    });\n    it('deletes numPhases attribute if wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      numPhasesField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('numPhases')).to.be\n        .null;\n    });\n    it('changes Voltage value on primary action', async () => {\n      voltageField.value = '20.0';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('Voltage')?.innerHTML).to.equal('20.0');\n    });\n    it('changes Voltage multiplier on primary action', async () => {\n      voltageField.multiplier = 'M';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('Voltage')?.getAttribute('multiplier')).to.equal(\n        'M'\n      );\n      expect(doc.querySelector('Voltage')?.getAttribute('unit')).to.equal('V');\n    });\n    it('deletes voltage element if voltage wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      voltageField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.querySelector('Voltage')).to.be\n        .null;\n    });\n  });\n\n  describe('Open add wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel[name=\"E1\"]')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('voltage-level-editor');\n\n      await parent.updateComplete;\n    });\n\n    it('Should open the same wizard for the second time', async () => {\n      await openAndCancelMenu(parent, element!);\n      await openAndCancelMenu(parent, element!);\n    });\n  });\n\n  describe('open add bay wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n\n    let nameField: WizardTextField;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel[name=\"E1\"]')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('voltage-level-editor');\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-list-item[value=\"Bay\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n    it('does not add bay if name attribute is not unique', async () => {\n      nameField.value = 'COUPLING_BAY';\n      await new Promise(resolve => setTimeout(resolve, 100)); // update takes some time\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelectorAll('VoltageLevel[name=\"E1\"] > Bay').length\n      ).to.equal(2);\n    });\n    it('does add bay if name attribute is unique', async () => {\n      nameField.value = 'SecondBay';\n      await new Promise(resolve => setTimeout(resolve, 100)); // update takes some time\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('VoltageLevel[name=\"E1\"] > Bay[name=\"SecondBay\"]')\n      ).to.exist;\n    });\n  });\n  describe('open lnode wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel[name=\"E1\"]')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('voltage-level-editor');\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector(\n          'mwc-icon-button[icon=\"account_tree\"]'\n        )\n      )).click();\n      await parent.updateComplete;\n    });\n    it('opens lnode wizard ', async () => {\n      expect(parent.wizardUI).to.exist;\n    });\n    it('has two wizard pages', async () => {\n      expect(parent.wizardUI.dialogs.length).to.equal(2);\n    });\n  });\n  describe('move action', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n    let element2: VoltageLevelEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            >${Array.from(doc?.querySelectorAll('VoltageLevel') ?? []).map(\n              vLevel =>\n                html`<voltage-level-editor\n                  .element=${vLevel}\n                ></voltage-level-editor>`\n            )}\n            ></mock-wizard-editor\n          >`\n        )\n      );\n      element = parent.querySelector('voltage-level-editor:nth-child(1)');\n      element2 = parent.querySelector('voltage-level-editor:nth-child(2)');\n    });\n    it('moves VoltageLevel within Substation', async () => {\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('name')).to.equal(\n        'E1'\n      );\n      (<HTMLElement>(\n        element2?.shadowRoot?.querySelector('mwc-icon-button[icon=\"forward\"]')\n      )).click();\n      await parent.updateComplete;\n      (<HTMLElement>element).click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel')?.getAttribute('name')).to.equal(\n        'J1'\n      );\n    });\n  });\n  describe('remove action', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel[name=\"E1\"]')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('voltage-level-editor');\n    });\n    it('removes VoltageLevel on clicking delete button', async () => {\n      expect(doc.querySelector('VoltageLevel[name=\"E1\"]')).to.exist;\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"delete\"]')\n      )).click();\n      await parent.updateComplete;\n      expect(doc.querySelector('VoltageLevel[name=\"E1\"]')).to.not.exist;\n    });\n  });\n  describe('clone action', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n    let copyContentButton: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/zeroline/clone/noUnusedLNode.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel[name=\"E1\"]')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('voltage-level-editor');\n      await parent.updateComplete;\n\n      copyContentButton = <HTMLElement>(\n        element?.shadowRoot?.querySelector(\n          'mwc-icon-button[icon=\"content_copy\"]'\n        )\n      );\n    });\n\n    it('duplicates VoltageLevel on clicking duplicate button', async () => {\n      copyContentButton.click();\n      await parent.updateComplete;\n\n      expect(doc.querySelector('VoltageLevel[name=\"E2\"]')).to.exist;\n    });\n\n    it('removes all LNode elements in the copy', async () => {\n      expect(\n        doc.querySelector('VoltageLevel[name=\"E1\"]')?.querySelector('LNode')\n      ).to.exist;\n\n      copyContentButton.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelector('VoltageLevel[name=\"E2\"]')?.querySelector('LNode')\n      ).to.not.exist;\n    });\n\n    it('removes all Terminal elements except the grounding in the copy', async () => {\n      expect(\n        doc\n          .querySelector('VoltageLevel[name=\"E1\"]')\n          ?.querySelector('Terminal:not([cNodeName=\"grounded\"])')\n      ).to.exist;\n\n      copyContentButton.click();\n      await parent.updateComplete;\n\n      expect(\n        doc\n          .querySelector('VoltageLevel[name=\"E2\"]')\n          ?.querySelector('Terminal:not([cNodeName=\"grounded\"])')\n      ).to.not.exist;\n    });\n\n    it('removes all ConnectivityNode elements in the copy', async () => {\n      expect(\n        doc\n          .querySelector('VoltageLevel[name=\"E1\"]')\n          ?.querySelector('ConnectivityNode')\n      ).to.exist;\n\n      copyContentButton.click();\n      await parent.updateComplete;\n\n      expect(\n        doc\n          .querySelector('VoltageLevel[name=\"E2\"]')\n          ?.querySelector('ConnectivityNode')\n      ).to.not.exist;\n    });\n\n    it('keeps all Bay elements in the copy', async () => {\n      copyContentButton.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector('VoltageLevel[name=\"E1\"]')?.querySelectorAll('Bay')\n          .length\n      ).to.equal(\n        doc.querySelector('VoltageLevel[name=\"E2\"]')?.querySelectorAll('Bay')\n          .length\n      );\n    });\n\n    it('keeps all ConductingEquipment elements in the copy', async () => {\n      copyContentButton.click();\n      await parent.updateComplete;\n      expect(\n        doc\n          .querySelector('VoltageLevel[name=\"E1\"]')\n          ?.querySelectorAll('ConductingEquipment').length\n      ).to.equal(\n        doc\n          .querySelector('VoltageLevel[name=\"E2\"]')\n          ?.querySelectorAll('ConductingEquipment').length\n      );\n    });\n  });\n\n  describe('open create wizard for element Function', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: VoltageLevelEditor | null;\n\n    let nameField: WizardTextField;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/zeroline/functions.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><voltage-level-editor\n              .element=${doc.querySelector('VoltageLevel')}\n            ></voltage-level-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('voltage-level-editor');\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-list-item[value=\"Function\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not add Function if name attribute is not unique', async () => {\n      expect(\n        doc.querySelector(\n          'VoltageLevel[name=\"E1\"] > Function[name=\"voltLvName\"]'\n        )\n      ).to.exist;\n\n      nameField.value = 'voltLvName';\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          'VoltageLevel[name=\"E1\"] > Function[name=\"voltLvName\"]'\n        ).length\n      ).to.equal(1);\n    });\n\n    it('does add Function if name attribute is unique', async () => {\n      expect(\n        doc.querySelector(\n          'VoltageLevel[name=\"E1\"] > Function[name=\"someNewFunction\"]'\n        )\n      ).to.not.exist;\n\n      nameField.value = 'someNewFunction';\n      await parent.updateComplete;\n\n      primaryAction.click();\n\n      expect(\n        doc.querySelector(\n          'VoltageLevel[name=\"E1\"] > Function[name=\"someNewFunction\"]'\n        )\n      ).to.exist;\n    });\n  });\n});\n"]}