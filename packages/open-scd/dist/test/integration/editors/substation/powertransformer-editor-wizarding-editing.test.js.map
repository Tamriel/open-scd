{"version":3,"file":"powertransformer-editor-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/powertransformer-editor-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport '../../../../src/editors/substation/powertransformer-editor.js';\nimport { PowerTransformerEditor } from '../../../../src/editors/substation/powertransformer-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base.js';\nimport { MenuBase } from '@material/mwc-menu/mwc-menu-base.js';\n\nconst openAndCancelMenu: (\n  parent: MockWizardEditor,\n  element: PowerTransformerEditor\n) => Promise<void> = (\n  parent: MockWizardEditor,\n  element: PowerTransformerEditor\n): Promise<void> =>\n  new Promise(async resolve => {\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    element?.shadowRoot\n      ?.querySelector<MenuBase>(\"mwc-icon-button[icon='playlist_add']\")!\n      .click();\n    const lnodMenuItem: ListItemBase =\n      element?.shadowRoot?.querySelector<ListItemBase>(\n        `mwc-list-item[value='LNode']`\n      )!;\n    lnodMenuItem.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.exist;\n\n    const secondaryAction: HTMLElement = <HTMLElement>(\n      parent.wizardUI.dialog?.querySelector(\n        'mwc-button[slot=\"secondaryAction\"]'\n      )\n    );\n\n    secondaryAction.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    return resolve();\n  });\n\ndescribe('powertransformer-editor wizarding editing integration', () => {\n  describe('open create wizard for element EqFunction', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: PowerTransformerEditor | null;\n\n    let nameField: WizardTextField;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/zeroline/functions.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><powertransformer-editor\n              .element=${doc.querySelector('PowerTransformer[name=\"myPtr2\"]')}\n              ?showfunctions=${true}\n            ></powertransformer-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('powertransformer-editor');\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-list-item[value=\"EqFunction\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not add EqFunction if name attribute is not unique', async () => {\n      expect(\n        doc.querySelector(\n          'PowerTransformer[name=\"myPtr2\"] > EqFunction[name=\"myEqFuncPtr2\"]'\n        )\n      ).to.exist;\n\n      nameField.value = 'myEqFuncPtr2';\n      primaryAction.click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          'PowerTransformer[name=\"myPtr2\"] > EqFunction[name=\"myEqFuncPtr2\"]'\n        ).length\n      ).to.equal(1);\n    });\n\n    it('does add EqFunction if name attribute is unique', async () => {\n      expect(\n        doc.querySelector(\n          'PowerTransformer[name=\"myPtr2\"] > EqFunction[name=\"someNewFunction\"]'\n        )\n      ).to.not.exist;\n\n      nameField.value = 'someNewFunction';\n      await parent.updateComplete;\n      primaryAction.click();\n\n      expect(\n        doc.querySelector(\n          'PowerTransformer[name=\"myPtr2\"] > EqFunction[name=\"someNewFunction\"]'\n        )\n      ).to.exist;\n    });\n  });\n\n  describe('Open add wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: PowerTransformerEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/zeroline/functions.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><powertransformer-editor\n              .element=${doc.querySelector('PowerTransformer[name=\"myPtr2\"]')}\n              ?showfunctions=${true}\n            ></powertransformer-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('powertransformer-editor');\n\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n    });\n\n    it('Should open the same wizard for the second time', async () => {\n      await openAndCancelMenu(parent, element!);\n      await openAndCancelMenu(parent, element!);\n    });\n\n    it('Should add SubEquipment', async () => {\n      expect(parent.wizardUI.dialog).to.be.undefined;\n\n      element?.shadowRoot\n        ?.querySelector<MenuBase>(\"mwc-icon-button[icon='playlist_add']\")!\n        .click();\n\n      element?.shadowRoot\n        ?.querySelector<ListItemBase>(`mwc-list-item[value='SubEquipment']`)!\n        .click();\n\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      expect(parent.wizardUI.dialog).to.exist;\n\n      const nameTextField: WizardTextField =\n        parent.wizardUI!.dialog!.querySelector<WizardTextField>(\n          'wizard-textfield[label=\"name\"]'\n        )!;\n\n      const subEquipmentName = 'unique-name';\n\n      nameTextField.value = subEquipmentName;\n\n      await parent.updateComplete;\n\n      const primaryAction: HTMLElement = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          `PowerTransformer[name=\"myPtr2\"] > SubEquipment[name=\"${subEquipmentName}\"]`\n        ).length\n      ).to.equal(1);\n    });\n  });\n});\n"]}