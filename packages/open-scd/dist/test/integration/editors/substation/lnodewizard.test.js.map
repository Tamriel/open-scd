{"version":3,"file":"lnodewizard.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/lnodewizard.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport { List } from '@material/mwc-list';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport { lNodeWizard } from '../../../../src/wizards/lnode.js';\nimport { newWizardEvent } from '../../../../src/foundation.js';\n\ndescribe('lnodewizard', () => {\n  let element: MockWizardEditor;\n  let doc: Document;\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/lnodewizard.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  beforeEach(async () => {\n    element = <MockWizardEditor>(\n      await fixture(html`<mock-wizard-editor></mock-wizard-editor>`)\n    );\n    const wizard = lNodeWizard(doc.querySelector('Bay')!);\n    element.dispatchEvent(newWizardEvent(() => wizard));\n    await element.requestUpdate();\n  });\n\n  it('renders three wizard pages each in a mwc-dialog', async () => {\n    expect(\n      element.wizardUI.shadowRoot?.querySelectorAll('mwc-dialog').length\n    ).to.equal(2);\n  });\n\n  describe('the first page', () => {\n    it('renders a list of available IEDs in a mwc-list with checked items', () => {\n      expect(\n        element.wizardUI.shadowRoot\n          ?.querySelector('mwc-dialog')\n          ?.querySelectorAll('mwc-check-list-item').length\n      ).to.equal(doc.querySelectorAll('IED').length);\n    });\n\n    it('selects the IEDs that are connected', () => {\n      expect(\n        (<ListItemBase[]>(\n          (<List>element.wizardUI.dialogs[0].querySelector('#iedList')).selected\n        )).length\n      ).to.equal(1);\n    });\n\n    describe('the second page', () => {\n      it('adds logical nodes of the selected IEDs', async () => {\n        expect(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelectorAll('mwc-check-list-item').length\n        ).to.equal(\n          doc.querySelectorAll('IED[name=\"IED2\"] LN0, IED[name=\"IED2\"] LN')\n            .length\n        );\n      });\n\n      it('selects logical nodes connected to the substation element', async () => {\n        expect(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelectorAll('mwc-check-list-item[selected]').length\n        ).to.have.equal(3);\n      });\n\n      it('disables logical nodes connected to another substation', async () => {\n        expect(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelectorAll('mwc-check-list-item[disabled]').length\n        ).to.have.equal(1);\n      });\n    });\n\n    describe('lNodeActions', () => {\n      it('removes unselected logical nodes', async () => {\n        expect(\n          doc.querySelector('Bay[name=\"COUPLING_BAY\"]>LNode[lnClass=\"LLN0\"]')\n        ).to.exist;\n        (<List>(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelector('filtered-list')\n        )).items[0].click();\n        await element.updateComplete;\n        (<HTMLElement>(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelector('mwc-button[slot=\"primaryAction\"]')\n        )).click();\n        await element.updateComplete;\n        expect(\n          doc.querySelector('Bay[name=\"COUPLING_BAY\"]>LNode[lnClass=\"LLN0\"]')\n        ).to.not.exist;\n      });\n\n      it('creates selected logical nodes', async () => {\n        expect(\n          doc.querySelector(\n            'Bay[name=\"COUPLING_BAY\"]>LNode[ldInst=\"CBSW\"][lnClass=\"XCBR\"][lnInst=\"1\"]'\n          )\n        ).to.not.exist;\n        (<List>(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelector('filtered-list')\n        )).items[3].click();\n        await element.updateComplete;\n        (<HTMLElement>(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelector('mwc-button[slot=\"primaryAction\"]')\n        )).click();\n        await element.requestUpdate();\n\n        await element.updateComplete;\n        await element.wizards.updateComplete;\n\n        expect(\n          doc.querySelector(\n            'Bay[name=\"COUPLING_BAY\"]>LNode[ldInst=\"CBSW\"][lnClass=\"XCBR\"][lnInst=\"1\"]'\n          )\n        ).to.exist;\n      });\n      it('only create and remove its own logical node references', async () => {\n        const allLNodesNumber = doc.querySelectorAll(\n          'Bay[name=\"COUPLING_BAY\"] LNode'\n        ).length;\n        (<List>(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelector('filtered-list')\n        )).items[3].click();\n        await element.updateComplete;\n        await element.wizards.updateComplete;\n\n        (<HTMLElement>(\n          element.wizardUI.shadowRoot\n            ?.querySelector('mwc-dialog:nth-child(2)')\n            ?.querySelector('mwc-button[slot=\"primaryAction\"]')\n        )).click();\n        await element.updateComplete;\n        expect(\n          doc.querySelectorAll('Bay[name=\"COUPLING_BAY\"] LNode').length\n        ).to.equal(allLNodesNumber + 1);\n      });\n    });\n  });\n});\n"]}