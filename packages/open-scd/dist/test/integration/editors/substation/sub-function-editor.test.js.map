{"version":3,"file":"sub-function-editor.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/sub-function-editor.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport '../../../../src/editors/substation/sub-function-editor.js';\nimport { SubFunctionEditor } from '../../../../src/editors/substation/sub-function-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { MenuBase } from '@material/mwc-menu/mwc-menu-base.js';\n\nconst openAndCancelMenu: (\n  parent: MockWizardEditor,\n  element: SubFunctionEditor\n) => Promise<void> = (\n  parent: MockWizardEditor,\n  element: SubFunctionEditor\n): Promise<void> =>\n  new Promise(async resolve => {\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    element?.shadowRoot\n      ?.querySelector<MenuBase>(\"mwc-icon-button[icon='playlist_add']\")!\n      .click();\n    const subFunctionMenuItem: ListItemBase =\n      element?.shadowRoot?.querySelector<ListItemBase>(\n        `mwc-list-item[value='SubFunction']`\n      )!;\n    subFunctionMenuItem.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.exist;\n\n    const secondaryAction: HTMLElement = <HTMLElement>(\n      parent.wizardUI.dialog?.querySelector(\n        'mwc-button[slot=\"secondaryAction\"]'\n      )\n    );\n\n    secondaryAction.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    return resolve();\n  });\n\ndescribe('sub-function-editor wizarding editing integration', () => {\n  let doc: XMLDocument;\n  let parent: MockWizardEditor;\n  let element: SubFunctionEditor | null;\n\n  let primaryAction: HTMLElement;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/zeroline/functions.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    parent = <MockWizardEditor>(\n      await fixture(\n        html`<mock-wizard-editor\n          ><sub-function-editor\n            .element=${doc.querySelector(\n              'Function[name=\"voltLvName\"] > SubFunction'\n            )}\n          ></sub-function-editor\n        ></mock-wizard-editor>`\n      )\n    );\n\n    element = parent.querySelector('sub-function-editor');\n  });\n\n  describe('open create wizard for element SubFunction', () => {\n    let nameField: WizardTextField;\n\n    beforeEach(async () => {\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-list-item[value=\"SubFunction\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not add SubFunction if name attribute is not unique', async () => {\n      expect(\n        doc.querySelector(\n          'Function[name=\"voltLvName\"] > SubFunction > SubFunction'\n        )\n      ).to.exist;\n\n      nameField.value = 'mySubSubFunction';\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          'Function[name=\"voltLvName\"] > SubFunction > SubFunction'\n        ).length\n      ).to.equal(1);\n    });\n\n    it('does add SubFunction if name attribute is unique', async () => {\n      expect(\n        doc.querySelector(\n          'Function[name=\"voltLvName\"] > SubFunction > SubFunction[name=\"someNewSubFunction\"]'\n        )\n      ).to.not.exist;\n\n      nameField.value = 'someNewSubFunction';\n      await parent.updateComplete;\n      primaryAction.click();\n\n      expect(\n        doc.querySelector(\n          'Function[name=\"voltLvName\"] > SubFunction > SubFunction[name=\"someNewSubFunction\"]'\n        )\n      ).to.exist;\n    });\n  });\n\n  describe('open edit wizard', () => {\n    let nameField: WizardTextField;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      element!.element = doc.querySelector<Element>(\n        'Bay[name=\"COUPLING_BAY\"] > Function[name=\"bayName\"] > SubFunction[name=\"myBaySubFunc\"]'\n      )!;\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not update SubFunction if name attribute is not unique', async () => {\n      expect(\n        doc.querySelectorAll(\n          'Bay[name=\"COUPLING_BAY\"] SubFunction[name=\"mySubFunc2\"]'\n        )\n      ).to.lengthOf(1);\n\n      nameField.value = 'mySubFunc2';\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          'Bay[name=\"COUPLING_BAY\"] SubFunction[name=\"mySubFunc2\"]'\n        )\n      ).to.lengthOf(1);\n    });\n\n    it('does update SubFunction if name attribute is unique', async () => {\n      nameField.value = 'someNewFunction';\n      await parent.updateComplete;\n      primaryAction.click();\n\n      expect(\n        doc.querySelector(\n          'Bay[name=\"COUPLING_BAY\"] > Function[name=\"bayName\"] > SubFunction[name=\"someNewFunction\"]'\n        )\n      ).to.exist;\n      expect(\n        doc.querySelector(\n          'Bay[name=\"COUPLING_BAY\"] > Function[name=\"bayName\"] > SubFunction[name=\"myBaySubFunc\"]'\n        )\n      ).to.not.exist;\n    });\n  });\n\n  describe('open create wizard for element LNode', () => {\n    let listItems: ListItemBase[];\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/zeroline/functions.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><sub-function-editor\n              .element=${doc.querySelector(\n                'Function[name=\"voltLvName\"] > SubFunction'\n              )}\n            ></sub-function-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('sub-function-editor');\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-list-item[value=\"LNode\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      listItems = Array.from(\n        parent.wizardUI!.dialog!.querySelectorAll<ListItemBase>(\n          'mwc-check-list-item'\n        )\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('add selected LNode instances to SubFcuntion parent', async () => {\n      listItems[3].selected = true;\n      listItems[5].selected = true;\n\n      await primaryAction.click();\n\n      expect(\n        doc.querySelector(\n          'Function[name=\"voltLvName\"] > SubFunction > LNode[iedName=\"None\"][lnClass=\"CSWI\"][lnInst=\"1\"]'\n        )\n      ).to.exist;\n      expect(\n        doc.querySelector(\n          'Function[name=\"voltLvName\"] > SubFunction > LNode[iedName=\"None\"][lnClass=\"CSWI\"][lnInst=\"2\"]'\n        )\n      ).to.exist;\n    });\n  });\n\n  describe('has a delete icon button that', () => {\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      deleteButton = <HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"delete\"]')\n      );\n      await parent.updateComplete;\n    });\n\n    it('removes the attached SubFunction element from the document', async () => {\n      expect(doc.querySelector('Function[name=\"voltLvName\"] > SubFunction')).to\n        .exist;\n\n      await deleteButton.click();\n\n      expect(doc.querySelector('Function[name=\"voltLvName\"] > SubFunction')).to\n        .not.exist;\n    });\n  });\n\n  describe('Open add wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: SubFunctionEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/zeroline/functions.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><sub-function-editor\n              .element=${doc.querySelector(\n                'Function[name=\"voltLvName\"] > SubFunction'\n              )}\n            ></sub-function-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('sub-function-editor');\n\n      await parent.updateComplete;\n    });\n\n    it('Should open the same wizard for the second time', async () => {\n      await openAndCancelMenu(parent, element!);\n      await openAndCancelMenu(parent, element!);\n    });\n  });\n});\n"]}