{"version":3,"file":"l-node-editor-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/l-node-editor-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport '../../../../src/editors/substation/l-node-editor.js';\nimport { LNodeEditor } from '../../../../src/editors/substation/l-node-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\n\ndescribe('l-node-editor wizarding editing integration', () => {\n  let doc: XMLDocument;\n  let parent: MockWizardEditor;\n  let element: LNodeEditor | null;\n\n  let primaryAction: HTMLElement;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/zeroline/functions.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = <MockWizardEditor>(\n      await fixture(\n        html`<mock-wizard-editor\n          ><l-node-editor\n            .element=${doc.querySelector('Substation > LNode[lnClass=\"CSWI\"]')}\n          ></l-node-editor\n        ></mock-wizard-editor>`\n      )\n    );\n\n    element = parent.querySelector('l-node-editor');\n  });\n\n  describe('has a delete icon button that', () => {\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      deleteButton = <HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-fab[icon=\"delete\"]')\n      );\n      await parent.updateComplete;\n    });\n\n    it('removes the attached LNode element from the document', async () => {\n      expect(doc.querySelector('Substation > LNode[lnClass=\"CSWI\"]')).to.exist;\n\n      await deleteButton.click();\n\n      expect(doc.querySelector('Substation > LNode[lnClass=\"CSWI\"]')).to.not\n        .exist;\n    });\n  });\n\n  describe('has a edit icon button that', () => {\n    let prefixField: WizardTextField;\n    let lnInstField: WizardTextField;\n\n    beforeEach(async () => {\n      element!.element = doc.querySelector(\n        'SubFunction[name=\"myBaySubFunc\"] > LNode[lnClass=\"XSWI\"]'\n      )!;\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-fab[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      prefixField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"prefix\"]'\n        )\n      );\n\n      lnInstField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"lnInst\"]'\n        )\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      await parent.updateComplete;\n    });\n\n    it('changes prefix attribute on primary action', async () => {\n      prefixField.value = 'newPref';\n\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelector(\n          'SubFunction[name=\"myBaySubFunc\"] > LNode[lnClass=\"XSWI\"]'\n        )\n      ).to.have.attribute('prefix', 'newPref');\n    });\n\n    it('changes lnInst attribute on primary action', async () => {\n      lnInstField.value = '31';\n\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelector(\n          'SubFunction[name=\"myBaySubFunc\"] > LNode[lnClass=\"XSWI\"]'\n        )\n      ).to.have.attribute('lnInst', '31');\n    });\n  });\n\n  describe('has a copy content icon button that', () => {\n    let contentCopyButton: HTMLElement;\n\n    beforeEach(async () => {\n      element!.element = doc.querySelector(\n        'SubFunction[name=\"mySubFunc2\"] > LNode[lnClass=\"XSWI\"]'\n      )!;\n      await parent.updateComplete;\n\n      contentCopyButton = <HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-fab[icon=\"content_copy\"]')\n      );\n      await parent.updateComplete;\n    });\n\n    it('adds new LNode element', async () => {\n      contentCopyButton.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          'SubFunction[name=\"mySubFunc2\"] > LNode[lnClass=\"XSWI\"]'\n        )\n      ).to.have.lengthOf(3);\n    });\n\n    it('makes sure the lnInst is always unique', async () => {\n      contentCopyButton.click();\n      contentCopyButton.click();\n      contentCopyButton.click();\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelectorAll(\n          'SubFunction[name=\"mySubFunc2\"] > LNode[lnClass=\"XSWI\"]'\n        )\n      ).to.have.lengthOf(5);\n\n      const lnInsts = Array.from(\n        doc.querySelectorAll(\n          'SubFunction[name=\"mySubFunc2\"] > LNode[lnClass=\"XSWI\"]'\n        )\n      ).map(lNode => lNode.getAttribute('lnInst')!);\n\n      const duplicates = lnInsts.filter(\n        (item, index) => lnInsts.indexOf(item) !== index\n      );\n\n      expect(duplicates).to.lengthOf(0);\n    });\n  });\n});\n"]}