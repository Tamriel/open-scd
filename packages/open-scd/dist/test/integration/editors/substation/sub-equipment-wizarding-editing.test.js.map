{"version":3,"file":"sub-equipment-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/substation/sub-equipment-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport '../../../../src/editors/substation/sub-equipment-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport { SubEquipmentEditor } from '../../../../src/editors/substation/sub-equipment-editor.js';\nimport { WizardCheckbox } from '../../../../src/wizard-checkbox.js';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\nimport { MenuBase } from '@material/mwc-menu/mwc-menu-base.js';\n\nconst openAndCancelMenu: (\n  parent: MockWizardEditor,\n  element: SubEquipmentEditor\n) => Promise<void> = (\n  parent: MockWizardEditor,\n  element: SubEquipmentEditor\n): Promise<void> =>\n  new Promise(async resolve => {\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    element?.shadowRoot\n      ?.querySelector<MenuBase>(\"mwc-icon-button[icon='playlist_add']\")!\n      .click();\n    const lnodMenuItem: ListItemBase =\n      element?.shadowRoot?.querySelector<ListItemBase>(\n        `mwc-list-item[value='LNode']`\n      )!;\n    lnodMenuItem.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.exist;\n\n    const secondaryAction: HTMLElement = <HTMLElement>(\n      parent.wizardUI.dialog?.querySelector(\n        'mwc-button[slot=\"secondaryAction\"]'\n      )\n    );\n\n    secondaryAction.click();\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n    expect(parent.wizardUI.dialog).to.be.undefined;\n\n    return resolve();\n  });\n\ndescribe('sub-equipment-editor wizarding editing integration', () => {\n  let doc: XMLDocument;\n  let parent: MockWizardEditor;\n  let element: SubEquipmentEditor | null;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/SubEquipment.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    parent = <MockWizardEditor>(\n      await fixture(\n        html`<mock-wizard-editor\n          ><sub-equipment-editor\n            .element=${doc.querySelector('SubEquipment[name=\"subque\"]')}\n          ></sub-equipment-editor\n        ></mock-wizard-editor>`\n      )\n    );\n\n    element = parent.querySelector('sub-equipment-editor');\n  });\n\n  describe('open edit wizard', () => {\n    let nameField: WizardTextField;\n    let virtualField: WizardCheckbox;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n\n      virtualField = <WizardCheckbox>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"virtual\"]'\n        )\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not update SubEquipment if name attribute is not unique', async () => {\n      nameField.value = 'addEqi';\n      primaryAction.click();\n      await parent.updateComplete;\n\n      expect(doc.querySelectorAll('SubEquipment[name=\"addEqi\"]')).to.lengthOf(\n        1\n      );\n    });\n\n    it('does update SubEquipment if name attribute is unique', async () => {\n      nameField.value = 'addEqi2';\n      await parent.updateComplete;\n      primaryAction.click();\n\n      expect(doc.querySelector('SubEquipment[name=\"addEqi2\"]')).to.exist;\n      expect(doc.querySelector('SubEquipment[name=\"subque\"]')).to.not.exist;\n    });\n\n    it('does update SubEquipment when virtual is checked', async () => {\n      expect(virtualField.nullSwitch).to.exist;\n\n      virtualField.nullSwitch?.click();\n\n      virtualField.maybeValue = 'true';\n\n      await parent.updateComplete;\n      primaryAction.click();\n\n      expect(\n        doc\n          .querySelector('SubEquipment[name=\"subque\"]')\n          ?.hasAttribute('virtual')\n      );\n      expect(\n        doc\n          .querySelector('SubEquipment[name=\"subque\"]')\n          ?.getAttribute('virtual')\n      ).to.equal('true');\n    });\n\n    describe('has a delete icon button that', () => {\n      let deleteButton: HTMLElement;\n\n      beforeEach(async () => {\n        deleteButton = <HTMLElement>(\n          element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"delete\"]')\n        );\n        await parent.updateComplete;\n      });\n\n      it('removes the attached SubEquipment element from the document', async () => {\n        expect(doc.querySelector('SubEquipment[name=\"subque\"]')).to.exist;\n\n        await deleteButton.click();\n\n        expect(doc.querySelector('SubEquipment[name=\"subque\"]')).to.not.exist;\n      });\n    });\n  });\n\n  describe('Open add wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: SubEquipmentEditor | null;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/SubEquipment.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><sub-equipment-editor\n              .element=${doc.querySelector('SubEquipment[name=\"subque\"]')}\n              ?showfunctions=${true}\n            ></sub-equipment-editor\n          ></mock-wizard-editor>`\n        )\n      );\n\n      element = parent.querySelector('sub-equipment-editor');\n\n      await parent.updateComplete;\n    });\n\n    it('Should open the same wizard for the second time', async () => {\n      await openAndCancelMenu(parent, element!);\n      await openAndCancelMenu(parent, element!);\n    });\n  });\n});\n"]}