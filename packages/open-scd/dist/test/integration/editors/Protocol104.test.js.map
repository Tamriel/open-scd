{"version":3,"file":"Protocol104.test.js","sourceRoot":"","sources":["../../../../test/integration/editors/Protocol104.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,wBAAwB,CAAC;AAEhC,OAAO,WAAW,MAAM,qCAAqC,CAAC;AAG9D,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,cAAc,CAAC,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,CAAC;IACzD,IAAI,OAAoB,CAAC;IACzB,IAAI,MAAmB,CAAC;IACxB,IAAI,GAAgB,CAAC;IAErB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,GAAG,GAAG,MAAM,KAAK,CAAC,0CAA0C,CAAC;aAC1D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAExE,MAAM,GAAG,MAAM,OAAO,CACpB,IAAI,CAAA;oCAC0B,GAAG;wBACf,CACnB,CAAC;QACF,OAAO,GAAG,MAAM,CAAC,eAAe,EAAE,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;QAC9B,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;QAC/B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,WAAW,GAAG,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,iBAAiB,CAAC,CAAC;YAC3D,WAAY,CAAC,KAAK,EAAE,CAAC;YACnC,MAAM,OAAO,CAAC,cAAc,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE,KAAK,IAAI,EAAE;YACzD,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../mock-open-scd.js';\n\nimport Protocol104 from '../../../src/editors/Protocol104.js';\nimport { MockOpenSCD } from '../../mock-open-scd.js';\n\ndescribe('Protocol 104 Plugin', () => {\n  customElements.define('protocol104-plugin', Protocol104);\n  let element: Protocol104;\n  let parent: MockOpenSCD;\n  let doc: XMLDocument;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/104/valid-subnetwork.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<mock-open-scd\n        ><protocol104-plugin .doc=${doc}></protocol104-plugin\n      ></mock-open-scd>`\n    );\n    element = parent.getActivePlugin();\n  });\n\n  describe('in Values view', () => {\n    it('the plugin looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('in Network view', () => {\n    beforeEach(async () => {\n      const radioButton = element.shadowRoot?.querySelector('#byNetworkRadio');\n      (<HTMLElement>radioButton).click();\n      await element.updateComplete;\n    });\n\n    it('the plugin looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}