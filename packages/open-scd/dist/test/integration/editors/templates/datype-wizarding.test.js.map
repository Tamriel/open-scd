{"version":3,"file":"datype-wizarding.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/templates/datype-wizarding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../../mock-open-scd';\n\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\nimport { Select } from '@material/mwc-select';\n\nimport { FilteredList } from '../../../../src/filtered-list.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport TemplatesPlugin from '../../../../src/editors/Templates.js';\nimport { patterns } from '../../../../src/foundation.js';\nimport { MockOpenSCD } from '../../../mock-open-scd';\n\ndescribe('DAType wizards', () => {\n  if (customElements.get('templates-editor') === undefined)\n    customElements.define('templates-editor', TemplatesPlugin);\n  let doc: Document;\n  let parent: MockOpenSCD;\n  let templates: TemplatesPlugin;\n  let dATypeList: FilteredList;\n\n  beforeEach(async () => {\n    parent = await fixture(\n      html`<mock-open-scd><templates-editor></templates-editor></mock-open-scd>`\n    );\n\n    templates = parent.getActivePlugin();\n\n    doc = await fetch('/test/testfiles/templates/datypes.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    templates.doc = doc;\n    await templates.updateComplete;\n    dATypeList = <FilteredList>(\n      templates.shadowRoot?.querySelector('filtered-list[id=\"datypelist\"]')\n    );\n  });\n\n  describe('defines a createDATypeWizard', () => {\n    let selector: Select;\n    let idField: WizardTextField;\n    let primayAction: HTMLElement;\n    beforeEach(async () => {\n      const button = <HTMLElement>(\n        templates?.shadowRoot?.querySelectorAll(\n          'mwc-icon-button[icon=\"playlist_add\"]'\n        )[2]\n      );\n      button.click();\n      await parent.updateComplete;\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      selector = <Select>(\n        parent.wizardUI.dialog?.querySelector('mwc-select[label=\"values\"]')\n      );\n      idField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"id\"]')\n      );\n      primayAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot({\n        ignoreAttributes: [\n          {\n            tags: ['wizard-textfield'],\n            attributes: ['pattern'],\n          },\n        ],\n      });\n    });\n\n    //work around, because the escapes get removed in snapshot\n    it('should have correct pattern', async () => {\n      const pattern =\n        '([:_A-Za-z]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]|[\\u0370-\\u037D]' +\n        '|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]|[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]' +\n        '|[\\u3001-\\uD7FF]|[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]|[.0-9\\\\-]|\\u00B7|[\\u0300-\\u036F]|[\\u203F-\\u2040])+';\n      expect(\n        parent.wizardUI.dialog!.querySelectorAll('wizard-textfield[pattern]')!\n          .length\n      ).to.equal(2);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[0]\n          .getAttribute('pattern')\n      ).to.equal(pattern);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[1]\n          .getAttribute('pattern')\n      ).to.equal(patterns.normalizedString);\n    });\n\n    it('allows to add empty DATypes to the project', async () => {\n      expect(doc.querySelector('DAType[id=\"myGeneralDAType\"]')).to.not.exist;\n      idField.maybeValue = 'myGeneralDAType';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('DAType[id=\"myGeneralDAType\"]')).to.exist;\n    });\n    it('respects the sequence defined in the standard', async () => {\n      idField.maybeValue = 'myGeneralDAType';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      const element = doc.querySelector('DAType[id=\"myGeneralDAType\"]');\n      expect(element?.nextElementSibling?.tagName).to.equal('DAType');\n      expect(element?.previousElementSibling?.tagName).to.equal('DOType');\n    });\n    it('recursively add missing! subsequent EnumType elements', async () => {\n      expect(doc.querySelector('DAType[id=\"myOriginator\"]')).to.not.exist;\n      selector.value = 'OpenSCD_Originator';\n      idField.maybeValue = 'myOriginator';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('DAType[id=\"myOriginator\"]')).to.exist;\n      expect(doc.querySelector('EnumType[id=\"OriginatorCategoryKind\"]')).to\n        .exist;\n      expect(\n        doc.querySelectorAll('EnumType[id=\"OriginatorCategoryKind\"]').length\n      ).to.equal(1);\n    });\n    it('recursively add missing! subsequent DAType elements', async () => {\n      expect(doc.querySelector('DAType[id=\"OpenSCD_AnalogueValue_FLOAT32\"]')).to\n        .not.exist;\n      selector.value = 'OpenSCD_RangeConfig';\n      idField.maybeValue = 'myOriginator';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('DAType[id=\"OpenSCD_AnalogueValue_FLOAT32\"]')).to\n        .exist;\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_AnalogueValue_FLOAT32\"]')\n          .length\n      ).to.equal(1);\n    });\n  });\n\n  describe('defines a dATypeWizard', () => {\n    let idField: WizardTextField;\n    let primayAction: HTMLElement;\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      (<ListItem>(\n        dATypeList.querySelector('mwc-list-item[value=\"#Dummy.LLN0.Mod.SBOw\"]')\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      idField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"id\"]')\n      );\n      primayAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n      deleteButton = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector('mwc-menu > mwc-list-item')\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot({\n        ignoreAttributes: [\n          {\n            tags: ['wizard-textfield'],\n            attributes: ['pattern'],\n          },\n        ],\n      });\n    });\n\n    //work around, because the escapes get removed in snapshot\n    it('should have correct pattern', async () => {\n      const pattern =\n        '([:_A-Za-z]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]|[\\u0370-\\u037D]' +\n        '|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]|[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]' +\n        '|[\\u3001-\\uD7FF]|[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]|[.0-9\\\\-]|\\u00B7|[\\u0300-\\u036F]|[\\u203F-\\u2040])+';\n      expect(\n        parent.wizardUI.dialog!.querySelectorAll('wizard-textfield[pattern]')!\n          .length\n      ).to.equal(2);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[0]\n          .getAttribute('pattern')\n      ).to.equal(pattern);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[1]\n          .getAttribute('pattern')\n      ).to.equal(patterns.normalizedString);\n    });\n    it('edits DAType attributes id', async () => {\n      expect(doc.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"]')).to.exist;\n      idField.value = 'changedDAType';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.requestUpdate();\n      expect(doc.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"]')).to.not\n        .exist;\n      expect(doc.querySelector('DAType[id=\"changedDAType\"]')).to.exist;\n    });\n    it('deletes the DAType attribute on delete button click', async () => {\n      expect(doc.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"]')).to.exist;\n      expect(doc.querySelectorAll('DAType').length).to.equal(5);\n      deleteButton.click();\n      await parent.requestUpdate();\n      expect(doc.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"]')).to.not\n        .exist;\n      expect(doc.querySelectorAll('DAType').length).to.equal(4);\n    });\n    it('does not edit DAType element without changes', async () => {\n      const originData = (<Element>(\n        doc.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"]')\n      )).cloneNode(true);\n      primayAction.click();\n      await parent.requestUpdate();\n      expect(\n        originData.isEqualNode(\n          doc.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"]')\n        )\n      ).to.be.true;\n    });\n  });\n});\n"]}