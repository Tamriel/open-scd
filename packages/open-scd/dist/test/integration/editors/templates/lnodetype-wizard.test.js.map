{"version":3,"file":"lnodetype-wizard.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/templates/lnodetype-wizard.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../../mock-open-scd.js';\n\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\nimport { Select } from '@material/mwc-select';\n\nimport { FilteredList } from '../../../../src/filtered-list.js';\nimport TemplatesPlugin from '../../../../src/editors/Templates.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\nimport { WizardCheckbox } from '../../../../src/wizard-checkbox.js';\nimport { patterns } from '../../../../src/foundation.js';\n\ndescribe('LNodeType wizards', () => {\n  if (customElements.get('templates-editor') === undefined)\n    customElements.define('templates-editor', TemplatesPlugin);\n  let doc: Document;\n  let parent: MockOpenSCD;\n  let templates: TemplatesPlugin;\n  let lNodeTypeList: FilteredList;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/templates/dotypes.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<mock-open-scd\n        ><templates-editor .doc=${doc}></templates-editor\n      ></mock-open-scd>`\n    );\n\n    templates = parent.getActivePlugin();\n    await parent.updateComplete;\n    lNodeTypeList = <FilteredList>(\n      templates.shadowRoot?.querySelector('filtered-list[id=\"lnodetypelist\"]')\n    );\n  });\n\n  describe('defines a lNodeTypeHelperWizard', () => {\n    let idField: WizardTextField;\n    let primayAction: HTMLElement;\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      (<ListItem>(\n        lNodeTypeList.querySelector('mwc-list-item[value=\"#Dummy.CSWI\"]')\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); //recursive call takes time\n      idField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"id\"]')\n      );\n      primayAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n      deleteButton = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector('mwc-menu > mwc-list-item')\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot({\n        ignoreAttributes: [\n          {\n            tags: ['wizard-textfield'],\n            attributes: ['pattern'],\n          },\n        ],\n      });\n    });\n\n    //work around, because the escapes get removed in snapshot\n    it('should have correct pattern', async () => {\n      const pattern =\n        '([:_A-Za-z]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]|[\\u0370-\\u037D]' +\n        '|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]|[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]' +\n        '|[\\u3001-\\uD7FF]|[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]|[.0-9\\\\-]|\\u00B7|[\\u0300-\\u036F]|[\\u203F-\\u2040])+';\n      expect(\n        parent.wizardUI.dialog!.querySelectorAll('wizard-textfield[pattern]')!\n          .length\n      ).to.equal(3);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[0]\n          .getAttribute('pattern')\n      ).to.equal(pattern);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[1]\n          .getAttribute('pattern')\n      ).to.equal(patterns.normalizedString);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[2]\n          .getAttribute('pattern')\n      ).to.equal(patterns.lnClass);\n    });\n\n    it('edits LNodeType attributes id', async () => {\n      expect(doc.querySelector('LNodeType[id=\"Dummy.CSWI\"]')).to.exist;\n      idField.value = 'changedLNodeType';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.requestUpdate();\n      expect(doc.querySelector('LNodeType[id=\"Dummy.CSWI\"]')).to.not.exist;\n      expect(doc.querySelector('LNodeType[id=\"changedLNodeType\"]')).to.exist;\n    });\n    it('deletes the LNodeType attribute on delete button click', async () => {\n      expect(doc.querySelector('LNodeType[id=\"Dummy.CSWI\"]')).to.exist;\n      expect(doc.querySelectorAll('LNodeType').length).to.equal(8);\n      deleteButton.click();\n      await parent.requestUpdate();\n      expect(doc.querySelector('LNodeType[id=\"Dummy.CSWI\"]')).to.not.exist;\n      expect(doc.querySelectorAll('LNodeType').length).to.equal(7);\n    });\n    it('does not edit LNodeType element without changes', async () => {\n      const originData = (<Element>(\n        doc.querySelector('LNodeType[id=\"Dummy.CSWI\"]')\n      )).cloneNode(true);\n      primayAction.click();\n      await parent.requestUpdate();\n      expect(\n        originData.isEqualNode(doc.querySelector('LNodeType[id=\"Dummy.CSWI\"]'))\n      ).to.be.true;\n    });\n  });\n\n  describe('defines a createLNodeTypeWizard', () => {\n    let selector: Select;\n    let idField: WizardTextField;\n    let primayAction: HTMLElement;\n    beforeEach(async () => {\n      const button = <HTMLElement>(\n        templates?.shadowRoot?.querySelectorAll(\n          'mwc-icon-button[icon=\"playlist_add\"]'\n        )[0]\n      );\n      button.click();\n      await parent.updateComplete;\n      await new Promise(resolve => setTimeout(resolve, 400)); // await animation\n      selector = parent.wizardUI.dialog!.querySelector<Select>(\n        'mwc-select[label=\"lnClass\"]'\n      )!;\n      idField = parent.wizardUI.dialog!.querySelector<WizardTextField>(\n        'wizard-textfield[label=\"id\"]'\n      )!;\n      primayAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot({\n        ignoreAttributes: [\n          {\n            tags: ['wizard-textfield'],\n            attributes: ['pattern'],\n          },\n        ],\n      });\n    });\n\n    //work around, because the escapes get removed in snapshot\n    it('should have correct pattern', async () => {\n      const pattern =\n        '([:_A-Za-z]|[\\u00C0-\\u00D6]|[\\u00D8-\\u00F6]|[\\u00F8-\\u02FF]|[\\u0370-\\u037D]' +\n        '|[\\u037F-\\u1FFF]|[\\u200C-\\u200D]|[\\u2070-\\u218F]|[\\u2C00-\\u2FEF]' +\n        '|[\\u3001-\\uD7FF]|[\\uF900-\\uFDCF]|[\\uFDF0-\\uFFFD]|[.0-9\\\\-]|\\u00B7|[\\u0300-\\u036F]|[\\u203F-\\u2040])+';\n      expect(\n        parent.wizardUI.dialog!.querySelectorAll('wizard-textfield[pattern]')!\n          .length\n      ).to.equal(2);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[0]\n          .getAttribute('pattern')\n      ).to.equal(pattern);\n\n      expect(\n        parent.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[1]\n          .getAttribute('pattern')\n      ).to.equal(patterns.normalizedString);\n    });\n\n    it('uses -7-4 and -7-420 namespace for lnClass suggestion', () =>\n      expect(\n        selector.items.filter(item => !item.noninteractive && !item.twoline)\n      ).to.have.lengthOf(215));\n\n    it('recursively add missing! subsequent DOType elements', async () => {\n      expect(doc.querySelector('LNodeType[id=\"myCSWI\"]')).to.not.exist;\n      expect(doc.querySelector('DOType[id=\"OpenSCD_ENC_Mod\"]')).to.not.exist;\n      expect(doc.querySelector('DOType[id=\"OpenSCD_ENS_Beh\"]')).to.not.exist;\n      expect(doc.querySelector('DOType[id=\"OpenSCD_ENS_Health\"]')).to.not.exist;\n      expect(doc.querySelector('DOType[id=\"OpenSCD_LPL_noLD\"]')).to.not.exist;\n      expect(doc.querySelector('DOType[id=\"OpenSCD_SPS_simple\"]')).to.not.exist;\n      expect(doc.querySelector('DOType[id=\"OpenSCD_DPC\"]')).to.not.exist;\n      await new Promise(resolve => setTimeout(resolve, 100)); //recursive call takes time\n      selector.value = '#OpenSCD_CSWI_noPB';\n      await parent.requestUpdate(); // selector updates autoimport\n      idField.maybeValue = 'myCSWI';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('LNodeType[id=\"myCSWI\"]')).to.exist;\n      expect(\n        doc.querySelectorAll('DOType[id=\"OpenSCD_ENC_Mod\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DOType[id=\"OpenSCD_ENS_Beh\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DOType[id=\"OpenSCD_ENS_Health\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DOType[id=\"OpenSCD_LPL_noLD\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DOType[id=\"OpenSCD_SPS_simple\"]').length\n      ).to.equal(1);\n      expect(doc.querySelectorAll('DOType[id=\"OpenSCD_DPC\"]').length).to.equal(\n        1\n      );\n    }).timeout(5000);\n\n    it('recursively add missing! subsequent DAType elements', async () => {\n      expect(doc.querySelector('LNodeType[id=\"myCSWI\"]')).to.not.exist;\n      expect(doc.querySelector('DAType[id=\"OpenSCD_Originator\"]')).to.not.exist;\n      expect(doc.querySelector('DAType[id=\"OpenSCD_OperSBOw_Dbpos\"]')).to.not\n        .exist;\n      expect(doc.querySelector('DAType[id=\"OpenSCD_Cancel_Dbpos\"]')).to.not\n        .exist;\n      expect(\n        doc.querySelector('DAType[id=\"OpenSCD_OperSBOw_BehaviourModeKind\"]')\n      ).to.not.exist;\n      expect(doc.querySelector('DAType[id=\"OpenSCD_Cancel_BehaviourModeKind\"]'))\n        .to.not.exist;\n      expect(doc.querySelector('DAType[id=\"OpenSCD_PulseConfig\"]')).to.not\n        .exist;\n      selector.value = '#OpenSCD_CSWI_noPB';\n      await parent.requestUpdate(); // selector updates autoimport\n      idField.maybeValue = 'myCSWI';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('LNodeType[id=\"myCSWI\"]')).to.exist;\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_Originator\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_OperSBOw_Dbpos\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_Cancel_Dbpos\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_OperSBOw_BehaviourModeKind\"]')\n          .length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_Cancel_BehaviourModeKind\"]')\n          .length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('DAType[id=\"OpenSCD_PulseConfig\"]').length\n      ).to.equal(1);\n    }).timeout(5000);\n\n    it('recursively add missing! subsequent EnumType elements', async () => {\n      expect(doc.querySelector('LNodeType[id=\"myCSWI\"]')).to.not.exist;\n      expect(doc.querySelector('EnumType[id=\"OriginatorCategoryKind\"]')).to.not\n        .exist;\n      expect(doc.querySelector('EnumType[id=\"BehaviourModeKind\"]')).to.not\n        .exist;\n      expect(doc.querySelector('EnumType[id=\"CtlModelKind\"]')).to.not.exist;\n      expect(doc.querySelector('EnumType[id=\"HealthKind\"]')).to.not.exist;\n      expect(doc.querySelector('EnumType[id=\"OutputSignalKind\"]')).to.not.exist;\n      selector.value = '#OpenSCD_CSWI_noPB';\n      await parent.requestUpdate(); // selector updates autoimport\n      idField.maybeValue = 'myCSWI';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('LNodeType[id=\"myCSWI\"]')).to.exist;\n      expect(\n        doc.querySelectorAll('EnumType[id=\"OriginatorCategoryKind\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('EnumType[id=\"BehaviourModeKind\"]').length\n      ).to.equal(1);\n      expect(\n        doc.querySelectorAll('EnumType[id=\"CtlModelKind\"]').length\n      ).to.equal(1);\n      expect(doc.querySelectorAll('EnumType[id=\"HealthKind\"]').length).to.equal(\n        1\n      );\n      expect(\n        doc.querySelectorAll('EnumType[id=\"OutputSignalKind\"]').length\n      ).to.equal(1);\n    }).timeout(5000);\n\n    it('respects the sequence defined in the standard', async () => {\n      selector.value = '#OpenSCD_CSWI_noPB';\n      await parent.requestUpdate(); // selector updates autoimport\n      idField.maybeValue = 'myGeneralLNodeType';\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.updateComplete;\n      const element = doc.querySelector('LNodeType[id=\"myGeneralLNodeType\"]');\n      expect(element?.nextElementSibling?.tagName).to.equal('LNodeType');\n      expect(element?.previousElementSibling).to.be.null;\n    }).timeout(5000);\n\n    describe('opens a createLNodeTypeHelperWizard', () => {\n      let saveButton: HTMLElement;\n      let beh: Select;\n      let enaOpn: Select;\n      let enaCls: Select;\n      let ens: Element;\n      let sps: Element;\n      let ensId: string;\n      let spsId: string;\n\n      beforeEach(async () => {\n        selector.value = 'CILO';\n        idField.maybeValue = 'myGeneralLNodeType';\n        await parent.updateComplete;\n\n        (<HTMLElement>(\n          parent.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        )).click();\n        await parent.updateComplete;\n        await new Promise(resolve => setTimeout(resolve, 400)); // await animation\n\n        saveButton = parent.wizardUI.shadowRoot!.querySelector<HTMLElement>(\n          'mwc-button[slot=\"primaryAction\"]'\n        )!;\n\n        beh = parent.wizardUI.shadowRoot!.querySelector<Select>(\n          'wizard-select:nth-child(2)'\n        )!;\n        enaOpn = parent.wizardUI.shadowRoot!.querySelector<Select>(\n          'wizard-select:nth-child(21)'\n        )!;\n        enaCls = parent.wizardUI.shadowRoot!.querySelector<Select>(\n          'wizard-select:nth-child(22)'\n        )!;\n\n        ens = doc.querySelector('DOType[cdc=\"ENS\"]')!;\n        sps = doc.querySelector('DOType[cdc=\"SPS\"]')!;\n        ensId = ens?.getAttribute('id') ?? '';\n        spsId = sps?.getAttribute('id') ?? '';\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(parent.wizardUI.dialog).to.equalSnapshot();\n      });\n\n      it('filters the type selection for each DO to fit the cdc', () => {\n        expect(beh.querySelectorAll('mwc-list-item').length).to.equal(\n          doc.querySelectorAll('DOType[cdc=\"ENS\"]').length\n        );\n      });\n\n      it('requires all mandatory DOs to be defined', async () => {\n        beh.value = ensId;\n        await parent.updateComplete;\n        saveButton.click();\n        await parent.updateComplete;\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n        expect(parent.wizardUI.dialog).to.exist;\n        expect(\n          doc.querySelector(\n            'LNodeType[id=\"myGeneralLNodeType\"][lnClass=\"CILO\"]'\n          )\n        ).to.not.exist;\n      });\n\n      it('adds new LNodeType with correct id and lnClass', async () => {\n        beh.value = ensId;\n        enaOpn.value = spsId;\n        enaCls.value = spsId;\n        await parent.updateComplete;\n        saveButton.click();\n        await parent.updateComplete;\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n        expect(parent.wizardUI.dialog).to.not.exist;\n        expect(\n          doc.querySelector(\n            'LNodeType[id=\"myGeneralLNodeType\"][lnClass=\"CILO\"]'\n          )\n        ).to.exist;\n      });\n\n      it('adds selected DOs to new LNodeType', async () => {\n        beh.value = ensId;\n        enaOpn.value = spsId;\n        enaCls.value = spsId;\n        await parent.updateComplete;\n        saveButton.click();\n        await parent.updateComplete;\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n        expect(\n          doc.querySelector(\n            `LNodeType[id=\"myGeneralLNodeType\"][lnClass=\"CILO\"] > DO[name=\"Beh\"]:not([bType])[type=\"${ensId}\"]`\n          )\n        ).to.exist;\n        expect(\n          doc.querySelector(\n            `LNodeType[id=\"myGeneralLNodeType\"][lnClass=\"CILO\"] > DO[name=\"EnaOpn\"]:not([bType])[type=\"${spsId}\"]`\n          )\n        ).to.exist;\n        expect(\n          doc.querySelector(\n            `LNodeType[id=\"myGeneralLNodeType\"][lnClass=\"CILO\"] > DO[name=\"EnaCls\"]:not([bType])[type=\"${spsId}\"]`\n          )\n        ).to.exist;\n      });\n    });\n  });\n\n  describe('defines a dOWizard to edit an existing DO', () => {\n    let nameField: WizardTextField;\n    let descField: WizardTextField;\n    let typeSelect: Select;\n    let accessControlField: WizardTextField;\n    let transientSelect: WizardCheckbox;\n    let primaryAction: HTMLElement;\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      (<ListItem>(\n        lNodeTypeList.querySelector('mwc-list-item[value=\"#Dummy.LLN0\"]')\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      (<HTMLElement>(\n        parent.wizardUI?.dialog?.querySelector(\n          'mwc-list-item[value=\"#Dummy.LLN0>Mod\"]'\n        )\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      descField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"desc\"]')\n      );\n      accessControlField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"accessControl\"]'\n        )\n      );\n      typeSelect = <Select>(\n        parent.wizardUI.dialog?.querySelector('mwc-select[label=\"type\"]')\n      );\n      transientSelect = <WizardCheckbox>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"transient\"]'\n        )\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n      deleteButton = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector('mwc-menu > mwc-list-item')\n      );\n    });\n\n    it('looks like the latest snapshot', () => {\n      expect(parent.wizardUI.dialog).to;\n    });\n    it('edits DO attributes name', async () => {\n      expect(doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]'))\n        .to.exist;\n      nameField.value = 'NewMod';\n      await parent.requestUpdate();\n      primaryAction.click();\n      await parent.requestUpdate();\n      expect(doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]'))\n        .to.not.exist;\n      expect(\n        doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"NewMod\"]')\n      ).to.exist;\n    });\n    it('edits yet another attribute of the DO element', async () => {\n      expect(\n        doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"NewMod\"]')\n      ).to.not.exist;\n\n      nameField.value = 'NewMod';\n      descField.nullable = false;\n      descField.value = 'myDesc';\n      typeSelect.value = 'Dummy.CMV';\n      accessControlField.nullable = false;\n      accessControlField.maybeValue = 'myAccessControl';\n      transientSelect.maybeValue = 'true';\n\n      await parent.requestUpdate();\n      primaryAction.click();\n      await parent.requestUpdate();\n      expect(\n        doc.querySelector(\n          `LNodeType[id=\"Dummy.LLN0\"] >` +\n            `DO[name=\"NewMod\"][desc=\"myDesc\"][type=\"Dummy.CMV\"][accessControl=\"myAccessControl\"][transient=\"true\"]`\n        )\n      ).to.exist;\n    });\n    it('deletes the DO element on delete button click', async () => {\n      expect(doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]'))\n        .to.exist;\n      expect(\n        doc.querySelectorAll('LNodeType[id=\"Dummy.LLN0\"] > DO').length\n      ).to.equal(4);\n      deleteButton.click();\n      await parent.requestUpdate();\n      expect(doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]'))\n        .to.not.exist;\n      expect(\n        doc.querySelectorAll('LNodeType[id=\"Dummy.LLN0\"] > DO').length\n      ).to.equal(3);\n    });\n    it('does not edit DO element without changes', async () => {\n      const originData = (<Element>(\n        doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]')\n      )).cloneNode(true);\n      primaryAction.click();\n      await parent.requestUpdate();\n      expect(\n        originData.isEqualNode(\n          doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]')\n        )\n      ).to.be.true;\n    });\n    it('filters the type selector to DOTypes', async () => {\n      expect(typeSelect!.querySelectorAll('mwc-list-item').length).to.equal(\n        doc.querySelectorAll('DOType').length\n      );\n    });\n  });\n\n  describe('defines a dOWizard to create a new DO element', () => {\n    let nameField: WizardTextField;\n    let descField: WizardTextField;\n    let typeSelect: Select;\n    let accessControlField: WizardTextField;\n    let transientSelect: WizardCheckbox;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      (<ListItem>(\n        lNodeTypeList.querySelector('mwc-list-item[value=\"#Dummy.LLN0\"]')\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      (<HTMLElement>(\n        parent.wizardUI.dialog?.querySelectorAll('mwc-menu > mwc-list-item')[1]\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      descField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"desc\"]')\n      );\n      accessControlField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"accessControl\"]'\n        )\n      );\n      typeSelect = <Select>(\n        parent.wizardUI.dialog?.querySelector('mwc-select[label=\"type\"]')\n      );\n      transientSelect = <WizardCheckbox>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"transient\"]'\n        )\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot();\n    });\n    it('creates a new DO element', async () => {\n      expect(\n        doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"NewMod\"]')\n      ).to.not.exist;\n      nameField.value = 'NewMod';\n      typeSelect.value = 'Dummy.CMV';\n      await parent.requestUpdate();\n      primaryAction.click();\n      await parent.requestUpdate();\n      expect(\n        doc.querySelector(\n          'LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"NewMod\"]:not([desc])[type=\"Dummy.CMV\"]:not([accessControl]):not([transient])'\n        )\n      ).to.exist;\n    });\n    it('creates yet another new DO element', async () => {\n      expect(\n        doc.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"NewMod\"]')\n      ).to.not.exist;\n\n      nameField.value = 'NewMod';\n      descField.nullable = false;\n      descField.value = 'myDesc';\n      typeSelect.value = 'Dummy.CMV';\n      accessControlField.nullable = false;\n      accessControlField.maybeValue = 'myAccessControl';\n      transientSelect.maybeValue = 'true';\n\n      await parent.requestUpdate();\n      primaryAction.click();\n      await parent.requestUpdate();\n      expect(\n        doc.querySelector(\n          `LNodeType[id=\"Dummy.LLN0\"] >` +\n            `DO[name=\"NewMod\"][desc=\"myDesc\"][type=\"Dummy.CMV\"][accessControl=\"myAccessControl\"][transient=\"true\"]`\n        )\n      ).to.exist;\n    });\n  });\n});\n"]}