{"version":3,"file":"Templates.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/templates/Templates.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../../mock-open-scd.js';\n\nimport TemplatesPlugin from '../../../../src/editors/Templates.js';\n\nimport { newWizardEvent } from '../../../../src/foundation.js';\n\ndescribe('Templates Plugin', () => {\n  customElements.define('templates-plugin', TemplatesPlugin);\n\n  let element: TemplatesPlugin;\n  let parent: MockOpenSCD;\n\n  beforeEach(async () => {\n    parent = await fixture(\n      html`<mock-open-scd><templates-plugin></templates-plugin></mock-open-scd>`\n    );\n\n    element = parent.getActivePlugin();\n  });\n\n  describe('without a doc loaded', () => {\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('with a doc loaded', () => {\n    let doc: XMLDocument;\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/templates/datypes.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      element.doc = doc;\n      await element.requestUpdate();\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n\n    describe('having a LNodeType element list that', () => {\n      beforeEach(async () => {\n        parent.workflow.length = 0;\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[0]\n            .querySelector('mwc-list-item')\n        )).click();\n\n        await parent.requestUpdate();\n      });\n\n      it('opens a LNodeType edit wizard on list element click', () =>\n        expect(\n          parent.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"lnClass\"]'\n          )\n        ).to.exist);\n\n      it('allows to reopen the LNodeType edit wizard for the same element', async () => {\n        parent.dispatchEvent(newWizardEvent());\n\n        await parent.requestUpdate();\n\n        (<HTMLElement>(\n          element?.shadowRoot?.querySelector(\n            'filtered-list:nth-of-type(1) > mwc-list-item'\n          )\n        )).click();\n        await parent.requestUpdate();\n\n        expect(\n          parent.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"lnClass\"]'\n          )\n        ).to.exist;\n      });\n    });\n\n    describe('having a DOType element list that', () => {\n      beforeEach(async () => {\n        parent.workflow.length = 0;\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[1]\n            .querySelector('mwc-list-item')\n        )).click();\n\n        await parent.requestUpdate();\n      });\n\n      it('opens a DOType edit wizard on list element click', () =>\n        expect(\n          parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"CDC\"]')\n        ).to.exist);\n\n      it('allows to reopen the DOType edit wizard for the same element', async () => {\n        parent.dispatchEvent(newWizardEvent());\n\n        await parent.requestUpdate();\n\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[1]\n            .querySelector('mwc-list-item')\n        )).click();\n        await parent.requestUpdate();\n\n        expect(\n          parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"CDC\"]')\n        ).to.exist;\n      });\n    });\n\n    describe('having a DAType element list that', () => {\n      beforeEach(async () => {\n        parent.workflow.length = 0;\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[2]\n            .querySelector('mwc-list-item')\n        )).click();\n\n        await parent.requestUpdate();\n      });\n\n      it('opens a DAType edit wizard on list element click', () =>\n        expect(parent.wizardUI.dialog).to.exist);\n\n      it('allows to reopen the DAType edit wizard for the same element', async () => {\n        parent.dispatchEvent(newWizardEvent());\n\n        await parent.requestUpdate();\n\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[3]\n            .querySelector('mwc-list-item')\n        )).click();\n        await parent.requestUpdate();\n\n        expect(parent.wizardUI.dialog).to.exist;\n      });\n    });\n\n    describe('having a EnumType element list that', () => {\n      beforeEach(async () => {\n        parent.workflow.length = 0;\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[3]\n            .querySelector('mwc-list-item')\n        )).click();\n\n        await parent.requestUpdate();\n      });\n\n      it('opens a EnumType edit wizard on list element click', () =>\n        expect(parent.wizardUI.dialog).to.exist);\n\n      it('allows to reopen the EnumType edit wizard for the same element', async () => {\n        parent.dispatchEvent(newWizardEvent());\n\n        await parent.requestUpdate();\n\n        (<HTMLElement>(\n          element?.shadowRoot\n            ?.querySelectorAll('filtered-list')[3]\n            .querySelector('mwc-list-item')\n        )).click();\n        await parent.requestUpdate();\n\n        expect(parent.wizardUI.dialog).to.exist;\n      });\n    });\n  });\n\n  describe('with a doc loaded missing a datatypetemplates section', () => {\n    let doc: XMLDocument;\n    let parent: MockOpenSCD;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/templates/missingdatatypes.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      parent = await fixture(\n        html`<mock-open-scd\n          ><templates-plugin .doc=${doc}></templates-plugin\n        ></mock-open-scd>`\n      );\n      element = parent.getActivePlugin();\n      await element.updateComplete;\n    });\n\n    it('has a mwc-fab', () => {\n      expect(element.shadowRoot?.querySelector('mwc-fab')).to.exist;\n    });\n\n    it('adds a DataTypeTemplates on floating action button click', async () => {\n      expect(doc.querySelector('DataTypeTemplates')).to.not.exist;\n      (<HTMLElement>(\n        parent\n          ?.querySelector('templates-plugin')\n          ?.shadowRoot?.querySelector('mwc-fab')\n      )).click();\n      await parent.updateComplete;\n      expect(\n        parent!\n          .querySelector<TemplatesPlugin>('templates-plugin')!\n          .doc!.querySelector('DataTypeTemplates')\n      ).to.exist;\n    });\n  });\n\n  describe('with a doc loaded having a datatypetemplates section', () => {\n    let doc: XMLDocument;\n    let parent: MockOpenSCD;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/templates/datypes.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = await fixture(\n        html`<mock-open-scd\n          ><templates-plugin .doc=${doc}></templates-plugin\n        ></mock-open-scd>`\n      );\n      element = parent.getActivePlugin();\n      await element.updateComplete;\n    });\n\n    it('opens an add enumtype wizard', async () => {\n      expect(parent.wizardUI.dialogs.length).to.equal(0);\n      (<HTMLElement>(\n        parent\n          ?.querySelector('templates-plugin')\n          ?.shadowRoot?.querySelectorAll(\n            'mwc-icon-button[icon=\"playlist_add\"]'\n          )[2]\n      )).click();\n      await parent.updateComplete;\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      expect(parent.wizardUI.dialogs.length).to.equal(1);\n    });\n\n    it('adding an EnumType with the enumtype wizard', async () => {\n      expect(doc.querySelectorAll('EnumType').length).to.equal(4);\n      (<HTMLElement>(\n        parent\n          ?.querySelector('templates-plugin')\n          ?.shadowRoot?.querySelector(\n            'section:last-child mwc-icon-button[icon=\"playlist_add\"]'\n          )\n      )).click();\n      await parent.updateComplete;\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      parent.wizardUI.inputs[1].value = 'myID';\n      await parent.updateComplete;\n      (<HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      )).click();\n      await parent.updateComplete;\n      expect(doc.querySelectorAll('EnumType').length).to.equal(5);\n    });\n  });\n});\n"]}