{"version":3,"file":"subnetwork-editor-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/communication/subnetwork-editor-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport '../../../../src/editors/communication/subnetwork-editor.js';\nimport { SubNetworkEditor } from '../../../../src/editors/communication/subnetwork-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\n\ndescribe('subnetwork-editor wizarding editing integration', () => {\n  describe('edit wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: SubNetworkEditor | null;\n    let nameField: WizardTextField;\n    let descField: WizardTextField;\n    let typeField: WizardTextField;\n    let bitRateField: WizardTextField;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><subnetwork-editor\n              .doc=${doc}\n              .element=${doc.querySelector('SubNetwork')}\n            ></subnetwork-editor>\n          </mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('subnetwork-editor');\n      await (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      descField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"desc\"]')\n      );\n      typeField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"type\"]')\n      );\n      bitRateField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"BitRate\"]'\n        )\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('closes on secondary action', async () => {\n      await (<HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"secondaryAction\"]'\n        )\n      )).click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      expect(parent.wizardUI.dialog).to.not.exist;\n    });\n\n    it('does not change name attribute if not unique within parent element', async () => {\n      const oldName = nameField.value;\n      nameField.value = 'ProcessBus';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.getAttribute('name')).to.equal(\n        oldName\n      );\n    });\n\n    it('changes name attribute on primary action', async () => {\n      nameField.value = 'newSubNetwork';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.getAttribute('name')).to.equal(\n        'newSubNetwork'\n      );\n    });\n\n    it('changes desc attribute on primary action', async () => {\n      descField.value = 'newDesc';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.getAttribute('desc')).to.equal(\n        'newDesc'\n      );\n    });\n\n    it('deletes desc attribute if wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      descField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.getAttribute('desc')).to.be.null;\n    });\n\n    it('changes type attribute on primary action', async () => {\n      typeField.value = 'newType';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.getAttribute('type')).to.equal(\n        'newType'\n      );\n    });\n\n    it('deletes type attribute if wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      typeField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.getAttribute('type')).to.be.null;\n    });\n\n    it('changes BitRate value on primary action', async () => {\n      bitRateField.value = '20.0';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('BitRate')?.innerHTML).to.equal('20.0');\n    });\n\n    it('changes BitRate multiplier on primary action', async () => {\n      bitRateField.multiplier = 'M';\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('BitRate')?.getAttribute('multiplier')).to.equal(\n        'M'\n      );\n      expect(doc.querySelector('BitRate')?.getAttribute('unit')).to.equal(\n        'b/s'\n      );\n    });\n\n    it('deletes BitRate element if voltage wizard-textfield is deactivated', async () => {\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      bitRateField.nullSwitch!.click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork')?.querySelector('BitRate')).to.be\n        .null;\n    });\n  });\n\n  describe('remove action', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: SubNetworkEditor | null;\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><subnetwork-editor\n              .doc=${doc}\n              .element=${doc.querySelector('SubNetwork[name=\"StationBus\"]')}\n            ></subnetwork-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('subnetwork-editor');\n      await parent.updateComplete;\n\n      deleteButton = <HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-icon-button[icon=\"delete\"]')\n      );\n    });\n\n    it('removes SubNetwork on clicking delete button', async () => {\n      expect(doc.querySelector('SubNetwork[name=\"StationBus\"]')).to.exist;\n      deleteButton.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('SubNetwork[name=\"StationBus\"]')).to.not.exist;\n    });\n  });\n\n  describe('add ConnectedAP action', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: SubNetworkEditor | null;\n    let newConnectedAPItem: HTMLElement;\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><subnetwork-editor\n              .doc=${doc}\n              .element=${doc.querySelector('SubNetwork[name=\"StationBus\"]')}\n            ></subnetwork-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('subnetwork-editor');\n    });\n\n    it('adds ConnectedAP on primary action', async () => {\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector(\n          'mwc-icon-button[icon=\"playlist_add\"]'\n        )\n      )).click();\n      await parent.requestUpdate();\n\n      await parent.updateComplete;\n      await element?.updateComplete;\n\n      newConnectedAPItem = <ListItemBase>(\n        parent.wizardUI.dialog!.querySelector(\n          'mwc-check-list-item:nth-child(1)'\n        )\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      expect(\n        doc.querySelector(\n          ':root > Communication > SubNetwork[name=\"StationBus\"] > ConnectedAP[iedName=\"IED3\"][apName=\"P2\"]'\n        )\n      ).to.not.exist;\n\n      newConnectedAPItem.click();\n      primaryAction.click();\n      await parent.requestUpdate();\n\n      await parent.updateComplete;\n\n      expect(\n        doc.querySelector(\n          ':root > Communication > SubNetwork[name=\"StationBus\"] > ConnectedAP[iedName=\"IED3\"][apName=\"P2\"]'\n        )\n      ).to.exist;\n    });\n\n    it('add ConnectedAP with GSE and generates correct addresses', async () => {\n      doc = await fetch('/test/testfiles/editors/MessageBindingGOOSE2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><subnetwork-editor\n              .doc=${doc}\n              .element=${doc.querySelector('SubNetwork[name=\"StationBus\"]')}\n            ></subnetwork-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('subnetwork-editor');\n      await parent.updateComplete;\n      await element?.updateComplete;\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector(\n          'mwc-icon-button[icon=\"playlist_add\"]'\n        )\n      )).click();\n      await parent.requestUpdate();\n      await parent.updateComplete;\n      await element?.updateComplete;\n\n      expect(\n        doc.querySelector(\n          ':root > Communication > SubNetwork[name=\"StationBus\"] > ConnectedAP[iedName=\"IED4\"][apName=\"P1\"]'\n        )\n      ).to.not.exist;\n\n      newConnectedAPItem = <ListItemBase>(\n        parent.wizardUI.dialog!.querySelector(\n          'mwc-check-list-item:nth-child(2)'\n        )\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      newConnectedAPItem.click();\n      primaryAction.click();\n\n      await new Promise(resolve => setTimeout(resolve, 200)); // await animation\n      await parent.requestUpdate();\n      await parent.updateComplete;\n\n      const connectedAp = doc.querySelector(\n        ':root > Communication > SubNetwork[name=\"StationBus\"] > ConnectedAP[iedName=\"IED4\"][apName=\"P1\"]'\n      );\n\n      expect(connectedAp).to.exist;\n      const gse1 = connectedAp!.querySelector('GSE[cbName=\"GCB2\"]');\n      const gse2 = connectedAp!.querySelector('GSE[cbName=\"GCB2\"]');\n      expect(gse1).to.exist;\n      expect(gse2).to.exist;\n\n      expect(gse1?.getAttribute('ldInst')).to.equal('CircuitBreaker_CB1');\n\n      const address1 = gse1?.querySelector('Address');\n      expect(address1).to.exist;\n\n      const vlanPriority = address1?.querySelector('P[type=\"VLAN-PRIORITY\"]');\n      expect(vlanPriority).to.exist;\n      expect(vlanPriority?.textContent).to.equal('4');\n\n      const vlanId = address1?.querySelector('P[type=\"VLAN-ID\"]');\n      expect(vlanId).to.exist;\n      expect(vlanId?.textContent).to.equal('000');\n\n      const appId = address1?.querySelector('P[type=\"APPID\"]');\n      expect(appId).to.exist;\n      expect(appId?.textContent).to.equal('0001');\n\n      const mac = address1?.querySelector('P[type=\"MAC-Address\"]');\n      expect(mac).to.exist;\n      expect(mac?.textContent).to.equal('01-0C-CD-01-00-01');\n\n      const minTime = gse1?.querySelector('MinTime');\n      expect(minTime).to.exist;\n      expect(minTime?.getAttribute('unit')).to.equal('s');\n      expect(minTime?.getAttribute('multiplier')).to.equal('m');\n      expect(minTime?.textContent).to.equal('10');\n\n      const maxTime = gse1?.querySelector('MaxTime');\n      expect(maxTime).to.exist;\n      expect(maxTime?.getAttribute('unit')).to.equal('s');\n      expect(maxTime?.getAttribute('multiplier')).to.equal('m');\n      expect(maxTime?.textContent).to.equal('10000');\n    });\n\n    it('add ConnectedAP with SMV and generates correct addresses', async () => {\n      doc = await fetch('/test/testfiles/editors/MessageBindingSMV2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><subnetwork-editor\n              .doc=${doc}\n              .element=${doc.querySelector('SubNetwork[name=\"StationBus\"]')}\n            ></subnetwork-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('subnetwork-editor');\n      await parent.updateComplete;\n      await element?.updateComplete;\n\n      (<HTMLElement>(\n        element?.shadowRoot?.querySelector(\n          'mwc-icon-button[icon=\"playlist_add\"]'\n        )\n      )).click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      await parent.updateComplete;\n      await element?.updateComplete;\n\n      expect(\n        doc.querySelector(\n          ':root > Communication > SubNetwork[name=\"StationBus\"] > ConnectedAP[iedName=\"IED4\"][apName=\"P1\"]'\n        )\n      ).to.not.exist;\n\n      newConnectedAPItem = <ListItemBase>(\n        parent.wizardUI.dialog!.querySelector(\n          'mwc-check-list-item:nth-child(2)'\n        )\n      );\n\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      newConnectedAPItem.click();\n      primaryAction.click();\n      await new Promise(resolve => setTimeout(resolve, 400)); // await animation\n\n      await parent.requestUpdate();\n      await parent.updateComplete;\n\n      const connectedAp = doc.querySelector(\n        ':root > Communication > SubNetwork[name=\"StationBus\"] > ConnectedAP[iedName=\"IED4\"][apName=\"P1\"]'\n      );\n\n      expect(connectedAp).to.exist;\n      const smv1 = connectedAp!.querySelector('SMV[cbName=\"MSVCB02\"]');\n      expect(smv1).to.exist;\n\n      expect(smv1?.getAttribute('ldInst')).to.equal('CircuitBreaker_CB1');\n\n      const address1 = smv1?.querySelector('Address');\n      expect(address1).to.exist;\n\n      const vlanPriority = address1?.querySelector('P[type=\"VLAN-PRIORITY\"]');\n      expect(vlanPriority).to.exist;\n      expect(vlanPriority?.textContent).to.equal('4');\n\n      const vlanId = address1?.querySelector('P[type=\"VLAN-ID\"]');\n      expect(vlanId).to.exist;\n      expect(vlanId?.textContent).to.equal('000');\n\n      const appId = address1?.querySelector('P[type=\"APPID\"]');\n      expect(appId).to.exist;\n      expect(appId?.textContent).to.equal('4000');\n\n      const mac = address1?.querySelector('P[type=\"MAC-Address\"]');\n      expect(mac).to.exist;\n      expect(mac?.textContent).to.equal('01-0C-CD-04-00-00');\n    });\n  });\n});\n"]}