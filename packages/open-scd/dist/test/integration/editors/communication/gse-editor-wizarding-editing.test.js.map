{"version":3,"file":"gse-editor-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/communication/gse-editor-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../../mock-wizard-editor.js';\n\nimport '../../../../src/editors/communication/gse-editor.js';\nimport { GseEditor } from '../../../../src/editors/communication/gse-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\n\ndescribe('gse-editor wizarding editing integration', () => {\n  describe('edit wizard', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: GseEditor | null;\n    let secondaryAction: HTMLElement;\n    let primaryAction: HTMLElement;\n    let macAddressField: WizardTextField;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><gse-editor\n              .element=${doc.querySelector('ConnectedAP[iedName=\"IED1\"] > GSE')}\n            ></gse-editor>\n            ></mock-wizard-editor\n          >`\n        )\n      );\n      element = parent.querySelector('gse-editor');\n      await (<HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-fab[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n\n      macAddressField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-textfield[label=\"MAC-Address\"]'\n        )\n      );\n      secondaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"secondaryAction\"]'\n        )\n      );\n      primaryAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('closes on secondary action', async () => {\n      expect(parent.wizardUI.dialog).to.exist;\n      secondaryAction.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      expect(parent.wizardUI.dialog).to.not.exist;\n    });\n\n    it('changes MAC address attribute on primary action', async () => {\n      expect(\n        doc.querySelector(\n          'ConnectedAP[iedName=\"IED1\"] > GSE > Address > P[type=\"MAC-Address\"]'\n        )?.textContent\n      ).to.equal('01-0C-CD-01-00-10');\n      macAddressField.value = '01-0C-CD-01-0F-FF';\n      await parent.requestUpdate();\n      primaryAction.click();\n      await parent.requestUpdate();\n      expect(\n        doc.querySelector(\n          'ConnectedAP[iedName=\"IED1\"] > GSE > Address > P[type=\"MAC-Address\"]'\n        )?.textContent\n      ).to.equal('01-0C-CD-01-0F-FF');\n    });\n\n    it('does not change Address if no changes have been made', async () => {\n      const reference = doc.querySelector('ConnectedAP[iedName=\"IED1\"] > GSE');\n      primaryAction.click();\n      expect(\n        doc\n          .querySelector('ConnectedAP[iedName=\"IED1\"] > GSE')\n          ?.isEqualNode(reference)\n      ).to.be.true;\n    });\n  });\n\n  describe('remove action', () => {\n    let doc: XMLDocument;\n    let parent: MockWizardEditor;\n    let element: GseEditor | null;\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = <MockWizardEditor>(\n        await fixture(\n          html`<mock-wizard-editor\n            ><gse-editor\n              .element=${doc.querySelector('ConnectedAP[iedName=\"IED1\"] > GSE')}\n            ></gse-editor\n          ></mock-wizard-editor>`\n        )\n      );\n      element = parent.querySelector('gse-editor');\n      await parent.updateComplete;\n      deleteButton = <HTMLElement>(\n        element?.shadowRoot?.querySelector('mwc-fab[icon=\"delete\"]')\n      );\n    });\n\n    it('removes GSE on delete button click', async () => {\n      expect(doc.querySelector('ConnectedAP[iedName=\"IED1\"] > GSE')).to.exist;\n      deleteButton.click();\n      await parent.updateComplete;\n      expect(doc.querySelector('ConnectedAP[iedName=\"IED1\"] > GSE')).to.not\n        .exist;\n    });\n  });\n});\n"]}