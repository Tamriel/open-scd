{"version":3,"file":"subnetwork-editor-wizarding.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/communication/subnetwork-editor-wizarding.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\nimport fc from 'fast-check';\n\nimport '../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../src/addons/Wizards.js';\n\nimport '../../../../src/editors/communication/subnetwork-editor.js';\nimport { regexString, regExp, inverseRegExp } from '../../../foundation.js';\n\ndescribe('subnetwork-editor wizarding integration', () => {\n  describe('edit/add Subnetwork wizard', () => {\n    let doc: XMLDocument;\n    let parent: Wizards;\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2007B4.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      parent = await fixture(\n        html`<oscd-wizards .host=${document}\n          ><subnetwork-editor\n            .doc=${doc}\n            .element=${doc.querySelector('SubNetwork')}\n          ></subnetwork-editor\n        ></oscd-wizards>`\n      );\n\n      (<HTMLElement>(\n        parent\n          ?.querySelector('subnetwork-editor')\n          ?.shadowRoot?.querySelector('mwc-icon-button[icon=\"edit\"]')\n      )).click();\n      await parent.updateComplete;\n    });\n\n    describe('the first input element', () => {\n      it('edits the attribute name', async () => {\n        expect(parent.wizardUI.inputs[0].label).to.equal('name');\n      });\n\n      it('edits only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.tName, 1), async name => {\n            parent.wizardUI.inputs[0].value = name;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[0].checkValidity()).to.be.true;\n          })\n        );\n      });\n    });\n\n    describe('the second input element', () => {\n      it('edits the attribute desc', async () => {\n        expect(parent.wizardUI.inputs[1].label).to.equal('desc');\n      });\n\n      it('edits only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.desc), async desc => {\n            parent.wizardUI.inputs[1].value = desc;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[1].checkValidity()).to.be.true;\n          })\n        );\n      });\n    });\n\n    describe('the third input element', () => {\n      it('edits the attribute type', async () => {\n        expect(parent.wizardUI.inputs[2].label).to.equal('type');\n      });\n\n      it('edits only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.desc, 1), async type => {\n            parent.wizardUI.inputs[2].value = type;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[2].checkValidity()).to.be.true;\n          })\n        );\n      });\n    });\n\n    describe('the fourth input element', () => {\n      it('edits the attribute ', async () => {\n        expect(parent.wizardUI.inputs[3].label).to.equal('BitRate');\n      });\n\n      it('edits only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.decimal), async BitRate => {\n            parent.wizardUI.inputs[3].value = BitRate;\n            await parent.updateComplete;\n            expect(parent.wizardUI.inputs[3].checkValidity()).to.be.true;\n          })\n        );\n      });\n\n      it('rejects edition for invalid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(\n            regexString(inverseRegExp.decimal, 1),\n            async BitRate => {\n              parent.wizardUI.inputs[3].value = BitRate;\n              await parent.updateComplete;\n              expect(parent.wizardUI.inputs[3].checkValidity()).to.be.false;\n            }\n          )\n        );\n      });\n    });\n  });\n});\n"]}