{"version":3,"file":"datasets-container.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/cleanup/datasets-container.test.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\nimport { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../../mock-open-scd.js';\n\nimport '../../../../src/editors/cleanup/datasets-container.js';\nimport { CleanupDatasets } from '../../../../src/editors/cleanup/datasets-container.js';\nimport { cleanSCLItems } from '../../../../src/editors/cleanup/foundation.js';\n\ndescribe('cleanup-editor integration: dataset removal', () => {\n  let element: CleanupDatasets;\n  let parent: MockOpenSCD;\n\n  describe('without a doc loaded', () => {\n    beforeEach(async () => {\n      const doc = null;\n      parent = await fixture(\n        html`<mock-open-scd\n          ><cleanup-datasets .doc=${doc}></cleanup-datasets\n        ></mock-open-scd>`\n      );\n      element = parent.getActivePlugin();\n      await parent.updateComplete;\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('With a test file loaded', () => {\n    let doc: Document;\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/cleanup.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = await fixture(\n        html`<mock-open-scd\n          ><cleanup-datasets .doc=${doc}></cleanup-datasets\n        ></mock-open-scd>`\n      );\n      element = parent.getActivePlugin();\n      await parent.updateComplete;\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n\n    it('creates two delete actions', async () => {\n      // select all items and update list\n      const checkbox = element\n        .shadowRoot!.querySelector('.dataSetList')!\n        .shadowRoot!.querySelector('mwc-formfield')!\n        .querySelector('mwc-checkbox')!;\n      await checkbox.click();\n      element.dataSetList?.layout();\n      const cleanItems = Array.from(\n        (<Set<number>>element.dataSetList!.index).values()\n      ).map(index => element.unreferencedDataSets[index]);\n      const deleteActions = cleanSCLItems(cleanItems);\n      expect(deleteActions.length).to.equal(2);\n    });\n\n    it('correctly removes the datasets from the SCL file', async () => {\n      // select all items and update list\n      const checkbox = element\n        .shadowRoot!.querySelector('.dataSetList')!\n        .shadowRoot!.querySelector('mwc-formfield')!\n        .querySelector('mwc-checkbox')!;\n      await checkbox.click();\n      element.dataSetList?.layout();\n      await element.cleanupButton!.click();\n      // the correct number of DataSets should remain\n      const remainingDataSetCountCheck =\n        element.doc.querySelectorAll(\n          ':root > IED > AccessPoint > Server > LDevice > LN0 > DataSet, :root > IED > AccessPoint > Server > LDevice > LN > DataSet'\n        ).length === 6;\n      // those DataSets selected had best be gone\n      const datasetsCorrectlyRemoved =\n        element.doc.querySelectorAll(\n          'DataSet[name=\"GooseDataSet2\"], DataSet[name=\"PhsMeas2\"]'\n        ).length === 0;\n      expect(remainingDataSetCountCheck && datasetsCorrectlyRemoved).to.equal(\n        true\n      );\n    });\n  });\n});\n"]}