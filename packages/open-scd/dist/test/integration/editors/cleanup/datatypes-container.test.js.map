{"version":3,"file":"datatypes-container.test.js","sourceRoot":"","sources":["../../../../../test/integration/editors/cleanup/datatypes-container.test.ts"],"names":[],"mappings":"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","sourcesContent":["'use strict';\nimport { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../../mock-open-scd.js';\n\nimport '../../../../src/editors/cleanup/datatypes-container.js';\nimport { CleanupDataTypes } from '../../../../src/editors/cleanup/datatypes-container.js';\nimport { cleanSCLItems } from '../../../../src/editors/cleanup/foundation.js';\n\ndescribe('cleanup-editor integration: unreferenced control blocks', () => {\n  let element: CleanupDataTypes;\n  let parent: MockOpenSCD;\n\n  describe('without a doc loaded', () => {\n    beforeEach(async () => {\n      parent = await fixture(\n        html`<mock-open-scd\n          ><cleanup-data-types .doc=${null}></cleanup-data-types\n        ></mock-open-scd>`\n      );\n      element = parent.getActivePlugin();\n      await parent.updateComplete;\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('with a test file loaded', () => {\n    let doc: Document;\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/cleanup.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      parent = await fixture(\n        html`<mock-open-scd\n          ><cleanup-data-types .doc=${doc}></cleanup-data-types\n        ></mock-open-scd>`\n      );\n      element = parent.getActivePlugin();\n      await parent.updateComplete;\n    });\n\n    it('correctly removes a LNodeType entry from the SCL', async () => {\n      await element.cleanupDOTypeFilter.click();\n      await element.cleanupDATypeFilter.click();\n      await element.cleanupEnumTypeFilter.click();\n      // select all items and update list\n      const checkbox = element\n        .shadowRoot!.querySelector('.cleanup-list')!\n        .shadowRoot!.querySelector('mwc-formfield')!\n        .querySelector('mwc-checkbox')!;\n      await checkbox.click();\n      await element.cleanupList?.layout();\n\n      await element.cleanButton.click();\n\n      // the correct number of LNodeTypes should remain\n      expect(element.doc.querySelectorAll('LNodeType')).to.have.length(12);\n      expect(\n        element.doc.querySelectorAll('LNodeType[id=\"NotUsedTVTR\"]')\n      ).to.have.length(0);\n    });\n\n    it('correctly removes DOTypes and SDOs from the SCL', async () => {\n      await element.cleanupLNodeTypeFilter.click();\n      await element.cleanupDATypeFilter.click();\n      await element.cleanupEnumTypeFilter.click();\n      // select all items and update list\n      const checkbox = element\n        .shadowRoot!.querySelector('.cleanup-list')!\n        .shadowRoot!.querySelector('mwc-formfield')!\n        .querySelector('mwc-checkbox')!;\n      await checkbox.click();\n      await element.cleanupList?.layout();\n\n      await element.cleanButton.click();\n\n      // the correct number of DOTypes should remain\n      expect(element.doc.querySelectorAll('DOType')).to.have.lengthOf(32);\n      expect(\n        element.doc.querySelectorAll(\n          'DOType[id=\"NotUsedDummy.SPS\"], DOType[name=\"WYE_2_3\"], DOType[id=\"CMV_1\"]'\n        )\n      ).to.have.lengthOf(0);\n    });\n\n    it('correctly removes DATypes and those referenced via BDAs from the SCL', async () => {\n      await element.cleanupLNodeTypeFilter.click();\n      await element.cleanupDOTypeFilter.click();\n      await element.cleanupEnumTypeFilter.click();\n      // select all items and update list\n      const checkbox = element\n        .shadowRoot!.querySelector('.cleanup-list')!\n        .shadowRoot!.querySelector('mwc-formfield')!\n        .querySelector('mwc-checkbox')!;\n      await checkbox.click();\n      await element.cleanupList?.layout();\n\n      await element.cleanButton.click();\n\n      expect(element.doc.querySelectorAll('DAType')).to.have.lengthOf(15);\n      expect(\n        element.doc.querySelectorAll(\n          'DAType[id=\"NotUsedDummy.LPHD1.Sim.Cancel\"], DAType[id=\"OnlySubUsedVector_0\"], DAType[id=\"AnalogValue_0\"]'\n        )\n      ).to.have.lengthOf(0);\n    });\n\n    it('correctly removes EnumTypes', async () => {\n      await element.cleanupLNodeTypeFilter.click();\n      await element.cleanupDOTypeFilter.click();\n      await element.cleanupDATypeFilter.click();\n      // select all items and update list\n      const checkbox = element\n        .shadowRoot!.querySelector('.cleanup-list')!\n        .shadowRoot!.querySelector('mwc-formfield')!\n        .querySelector('mwc-checkbox')!;\n      await checkbox.click();\n      await element.cleanupList?.layout();\n\n      await element.cleanButton.click();\n\n      expect(element.doc.querySelectorAll('EnumType')).to.have.lengthOf(11);\n      expect(\n        element.doc.querySelectorAll('EnumType[id=\"NotUsedDir\"]')\n      ).to.have.lengthOf(0);\n    });\n\n    describe('if the Remove subtypes checkbox is unchecked', () => {\n      beforeEach(async () => {\n        element.cleanSubTypesCheckbox!.checked = false;\n        await element.cleanSubTypesCheckbox!.requestUpdate();\n      });\n\n      it('correctly removes two DOTypes and not those referenced via an SDO from the SCL', async () => {\n        await element.cleanupLNodeTypeFilter.click();\n        await element.cleanupDATypeFilter.click();\n        await element.cleanupEnumTypeFilter.click();\n        // select all items and update list\n        const checkbox = element\n          .shadowRoot!.querySelector('.cleanup-list')!\n          .shadowRoot!.querySelector('mwc-formfield')!\n          .querySelector('mwc-checkbox')!;\n        await checkbox.click();\n        await element.cleanupList?.layout();\n\n        await element.cleanButton.click();\n\n        // the correct number of DOTypes should remain\n        expect(element.doc.querySelectorAll('DOType')).to.have.lengthOf(33);\n        expect(\n          element.doc.querySelectorAll(\n            'DOType[id=\"NotUsedDummy.SPS\"], DOType[id=\"WYE_2_3\"], DOType[id=\"Dummy.LLN0.Health.Unused]'\n          )\n        ).to.have.lengthOf(0);\n        expect(\n          element.doc.querySelectorAll('DOType[id=\"CMV_1\"]')\n        ).to.have.lengthOf(1);\n      });\n\n      it('correctly removes DATypes and _not_ those referenced via a BDA from the SCL', async () => {\n        await element.cleanupLNodeTypeFilter.click();\n        await element.cleanupDOTypeFilter.click();\n        await element.cleanupEnumTypeFilter.click();\n        // select all items and update list\n        const checkbox = element\n          .shadowRoot!.querySelector('.cleanup-list')!\n          .shadowRoot!.querySelector('mwc-formfield')!\n          .querySelector('mwc-checkbox')!;\n        await checkbox.click();\n        await element.cleanupList?.layout();\n\n        await element.cleanButton.click();\n\n        // the correct number of DATypes should remain\n        expect(element.doc.querySelectorAll('DAType')).to.have.lengthOf(16);\n        expect(\n          element.doc.querySelectorAll(\n            'DAType[id=\"NotUsedDummy.LPHD1.Sim.Cancel\"], DAType[id=\"OnlySubUsedVector_0\"]'\n          )\n        ).to.have.lengthOf(0);\n        expect(\n          element.doc.querySelectorAll('DAType[id=\"AnalogValue_0\"]')\n        ).to.have.lengthOf(1);\n      });\n    });\n\n    describe('if the LN filter is disabled', async () => {\n      beforeEach(async () => {\n        await element.cleanupLNodeTypeFilter.click();\n        // select all items and update list\n        const checkbox = element\n          .shadowRoot!.querySelector('.cleanup-list')!\n          .shadowRoot!.querySelector('mwc-formfield')!\n          .querySelector('mwc-checkbox')!;\n        await checkbox.click();\n        await element.cleanupList?.layout();\n      });\n\n      it('creates the correct number of Delete actions', () => {\n        const deleteActions = cleanSCLItems(element.getCleanItems());\n        expect(deleteActions.length).to.equal(14);\n      });\n    });\n\n    describe('if the DO filter is disabled', async () => {\n      beforeEach(async () => {\n        await element.cleanupDOTypeFilter.click();\n        // select all items and update list\n        const checkbox = element\n          .shadowRoot!.querySelector('.cleanup-list')!\n          .shadowRoot!.querySelector('mwc-formfield')!\n          .querySelector('mwc-checkbox')!;\n        await checkbox.click();\n        element.cleanupList?.layout();\n      });\n\n      it('creates the correct number of Delete actions (LNx1, DAx3, ENx1)', () => {\n        const deleteActions = cleanSCLItems(element.getCleanItems());\n        expect(deleteActions.length).to.equal(26);\n      });\n    });\n\n    describe('if the DA filter is disabled', async () => {\n      beforeEach(async () => {\n        await element.cleanupDATypeFilter.click();\n        // select all items and update list\n        const checkbox = element\n          .shadowRoot!.querySelector('.cleanup-list')!\n          .shadowRoot!.querySelector('mwc-formfield')!\n          .querySelector('mwc-checkbox')!;\n        await checkbox.click();\n        element.cleanupList?.layout();\n      });\n\n      it('creates the correct number of Delete Actions', async () => {\n        const deleteActions = cleanSCLItems(element.getCleanItems());\n        expect(deleteActions.length).to.equal(29);\n      });\n    });\n\n    describe('if the EN filter is disabled', async () => {\n      beforeEach(async () => {\n        await element.cleanupEnumTypeFilter.click();\n        // select all items and update list\n        const checkbox = element\n          .shadowRoot!.querySelector('.cleanup-list')!\n          .shadowRoot!.querySelector('mwc-formfield')!\n          .querySelector('mwc-checkbox')!;\n        await checkbox.click();\n        element.cleanupList?.layout();\n      });\n\n      it('creates the correct number of Delete Actions', async () => {\n        const deleteActions = cleanSCLItems(element.getCleanItems());\n        expect(deleteActions.length).to.equal(33);\n      });\n    });\n  });\n});\n"]}