{"version":3,"file":"Setting.test.js","sourceRoot":"","sources":["../../../test/integration/Setting.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../mock-setter-logger.js';\nimport { MockSetterLogger } from '../mock-setter-logger.js';\n\nimport { newLoadNsdocEvent, OscdSettings } from '../../src/addons/Settings.js';\n\ndescribe('Oscd-Settings', () => {\n  let logger: MockSetterLogger;\n  let settings: OscdSettings;\n\n  beforeEach(async () => {\n    localStorage.clear();\n\n    logger = await fixture(\n      html`<mock-setter-logger>\n        <oscd-settings .host=${document}></oscd-settings>\n      </mock-setter-logger>`\n    );\n\n    settings = logger.querySelector('oscd-settings')!;\n  });\n\n  it('upload .nsdoc file using event and looks like latest snapshot', async () => {\n    settings.settingsUI.show();\n    await settings.settingsUI.updateComplete;\n\n    const nsdocFile = await fetch(\n      '/test/testfiles/nsdoc/IEC_61850-7-2.nsdoc'\n    ).then(response => response.text());\n\n    settings.dispatchEvent(newLoadNsdocEvent(nsdocFile, 'IEC_61850-7-2.nsdoc'));\n\n    await settings.requestUpdate();\n    await settings.updateComplete;\n\n    await logger.updateComplete;\n\n    expect(localStorage.getItem('IEC 61850-7-2')).to.eql(nsdocFile);\n    // Create a snapshot of the Settings Dialog only, not the whole Mock Component.\n    await expect(\n      settings.shadowRoot!.querySelector('mwc-dialog[id=\"settings\"]')\n    ).to.equalSnapshot();\n  });\n\n  it('upload invalid .nsdoc file using event and log event fired', async () => {\n    settings.settingsUI.show();\n    await settings.settingsUI.updateComplete;\n\n    const nsdocFile = await fetch('/test/testfiles/nsdoc/invalid.nsdoc').then(\n      response => response.text()\n    );\n\n    logger.dispatchEvent(newLoadNsdocEvent(nsdocFile, 'invalid.nsdoc'));\n\n    await logger.requestUpdate();\n    await logger.updateComplete;\n\n    expect(logger.log.length).to.be.equal(1);\n    expect(logger.log[0].title).to.be.equal(\n      \"Invalid NSDoc (invalid.nsdoc); no 'id' attribute found in file\"\n    );\n  });\n\n  it('upload .nsdoc file with wrong version using event and log event fired', async () => {\n    settings.settingsUI.show();\n    await settings.settingsUI.updateComplete;\n\n    const nsdocFile = await fetch(\n      '/test/testfiles/nsdoc/wrong-version.nsdoc'\n    ).then(response => response.text());\n\n    logger.dispatchEvent(newLoadNsdocEvent(nsdocFile, 'wrong-version.nsdoc'));\n\n    await logger.requestUpdate();\n    await logger.updateComplete;\n\n    expect(logger.log.length).to.be.equal(1);\n    expect(logger.log[0].title).to.be.equal(\n      'The version of IEC 61850-7-3 NSD (2007B3) does not correlate ' +\n        'with the version of the corresponding NSDoc (wrong-version.nsdoc, 2007B4)'\n    );\n  });\n}).timeout(4000);\n"]}