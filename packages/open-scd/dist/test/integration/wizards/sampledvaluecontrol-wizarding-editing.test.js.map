{"version":3,"file":"sampledvaluecontrol-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../test/integration/wizards/sampledvaluecontrol-wizarding-editing.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,6BAA6B,CAAC;AAOrC,OAAO,EACL,+BAA+B,EAC/B,+BAA+B,GAChC,MAAM,6CAA6C,CAAC;AAGrD,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAE5D,QAAQ,CAAC,6CAA6C,EAAE,GAAG,EAAE;IAC3D,IAAI,GAAgB,CAAC;IACrB,IAAI,OAAyB,CAAC;IAE9B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,2CAA2C,CAAC,CAAC;QACzE,GAAG,GAAG,MAAM,KAAK,CAAC,iDAAiD,CAAC;aACjE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,IAAI,uBAAqC,CAAC;QAE1C,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAClD,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,MAAM,MAAM,GAAG,+BAA+B,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBACpE,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;gBACpD,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAE9B,uBAAuB,GAAiB,CACtC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACxD,CAAC;gBACF,MAAM,uBAAuB,CAAC,cAAc,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE,CACjE,MAAM,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CACnD,GAAG,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,MAAM,CACnD,CAAC,CAAC;YAEL,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;gBACnF,MAAM,UAAU,GAAiB,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClE,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,MAAM,SAAS,GAAoB,CACjC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,gCAAgC,CACjC,CACF,CAAC;gBACF,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAEhC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAC9B,GAAG,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CACpE,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,oDAAoD,EAAE,GAAG,EAAE;gBAClE,IAAI,SAAqB,CAAC;gBAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;oBACN,CACZ,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACD,CAAC,KAAK,EAAE,CAAC;oBACX,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;oBAEzE,SAAS,GAAe,CACtB,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,aAAa,CAAC,CACtD,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,yEAAyE,EAAE,KAAK,IAAI,EAAE,CACvF,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;YAC5C,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,MAAM,MAAM,GAAG,+BAA+B,CAC5C,GAAG,CAAC,aAAa,CAAC,kBAAkB,CAAE,CACvC,CAAC;gBACF,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;gBACpD,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAE9B,uBAAuB,GAAiB,CACtC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACxD,CAAC;gBACF,MAAM,uBAAuB,CAAC,cAAc,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE,GAAG,EAAE,CAC9D,MAAM,CAAC,uBAAuB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CACnD,GAAG,CAAC,gBAAgB,CAAC,sCAAsC,CAAC,CAAC,MAAM,CACpE,CAAC,CAAC;YAEL,EAAE,CAAC,qEAAqE,EAAE,KAAK,IAAI,EAAE;gBACnF,MAAM,UAAU,GAAiB,uBAAuB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAClE,UAAU,CAAC,KAAK,EAAE,CAAC;gBACnB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,MAAM,SAAS,GAAoB,CACjC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,gCAAgC,CACjC,CACF,CAAC;gBACF,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAEhC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAC9B,GAAG,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CACpE,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,oDAAoD,EAAE,GAAG,EAAE;gBAClE,IAAI,SAA0B,CAAC;gBAC/B,UAAU,CAAC,KAAK,IAAI,EAAE;oBACpB,MAAM,aAAa,GAAgB,CACjC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;oBAEF,aAAa,CAAC,KAAK,EAAE,CAAC;oBACtB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;oBAEzE,SAAS,GAAoB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,gCAAgC,CACjC,CACF,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE,CAC3E,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAC3C,IAAI,SAA0B,CAAC;QAC/B,IAAI,eAA4B,CAAC;QACjC,IAAI,aAA0B,CAAC;QAC/B,IAAI,SAAkB,CAAC;QAEvB,QAAQ,CAAC,sCAAsC,EAAE,GAAG,EAAE;YACpD,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,oCAAoC;gBACjE,SAAS,GAAG,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,OAAO,CAAC,aAAa,CACnB,cAAc,CAAC,GAAG,EAAE,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CACjE,CAAC;gBAEF,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,MAAM,wBAAwB,GAAiB,CAC9B,CACb,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACvD,CAAC,KAAK,CAAC,CAAC,CAAC,CACZ,CAAC;gBACF,wBAAwB,CAAC,KAAK,EAAE,CAAC;gBACjC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAChD,gCAAgC,CAChC,CAAC;gBACH,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;gBACF,eAAe,GAAgB,CAC7B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,oCAAoC,CACrC,CACF,CAAC;gBACF,MAAM,SAAS,CAAC,cAAc,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;gBAC7D,MAAM,CACJ,SAAS;qBACN,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,EAAE,YAAY,CAAC,MAAM,CAAC,CACzB,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;gBAE1B,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC;gBAC5B,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,aAAa,CAAC,KAAK,EAAE,CAAC;gBAEtB,MAAM,CACJ,SAAS;qBACN,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,EAAE,YAAY,CAAC,MAAM,CAAC,CACzB,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE;gBACtD,MAAM,CACJ,SAAS;qBACN,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,EAAE,YAAY,CAAC,MAAM,CAAC,CACzB,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;gBAE5B,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC;gBAC9B,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,aAAa,CAAC,KAAK,EAAE,CAAC;gBAEtB,MAAM,CACJ,SAAS;qBACN,gBAAgB,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;oBAC3C,EAAE,YAAY,CAAC,MAAM,CAAC,CACzB,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;YAC1B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;gBAClE,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC;gBAC9B,aAAa,CAAC,KAAK,EAAE,CAAC;gBAEtB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,MAAM,wBAAwB,GAAiB,CAC9B,CACb,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACvD,CAAC,KAAK,CAAC,CAAC,CAAC,CACZ,CAAC;gBAEF,MAAM,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;gBACvE,eAAe,CAAC,KAAK,EAAE,CAAC;gBAExB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAE1E,MAAM,wBAAwB,GAAiB,CAC9B,CACb,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACvD,CAAC,KAAK,CAAC,CAAC,CAAC,CACZ,CAAC;gBAEF,MAAM,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;gBAC/C,MAAM,aAAa,GAAgB,CACjC,KAAK,CAAC,IAAI,CACR,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,gBAAgB,CACvC,0BAA0B,CAC3B,CACF,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAC/D,CAAC;gBAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,CAAC;gBAC/C,MAAM,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,mCAAmC,EAAE,GAAG,EAAE;YACjD,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,oCAAoC;gBACjE,SAAS,GAAG,GAAG,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3C,OAAO,CAAC,aAAa,CACnB,cAAc,CAAC,GAAG,EAAE,CAAC,+BAA+B,CAAC,SAAS,CAAC,CAAC,CACjE,CAAC;gBACF,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,MAAM,wBAAwB,GAAiB,CAC9B,CACb,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACvD,CAAC,KAAK,CAAC,CAAC,CAAC,CACZ,CAAC;gBACF,wBAAwB,CAAC,KAAK,EAAE,CAAC;gBACjC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAEzE,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAChD,gCAAgC,CAChC,CAAC;gBACH,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;gBACF,eAAe,GAAgB,CAC7B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,oCAAoC,CACrC,CACF,CAAC;gBACF,MAAM,SAAS,CAAC,cAAc,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;gBACpE,MAAM,aAAa,GAAgB,CACjC,KAAK,CAAC,IAAI,CACR,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,gBAAgB,CACvC,0BAA0B,CAC3B,CACF,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAC/D,CAAC;gBAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,CAAC;gBAC/C,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;gBAE/B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAE1E,MAAM,QAAQ,GAAoB,CAChC,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,uCAAuC,CACxC,CACF,CAAC;gBACF,MAAM,QAAQ,CAAC,cAAc,CAAC;gBAE9B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,CAC7B,GAAG;qBACA,aAAa,CAAC,uCAAuC,CAAC;oBACvD,EAAE,WAAW,EAAE,IAAI,EAAE,CACxB,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;gBACpE,MAAM,iBAAiB,GAAgB,CACrC,KAAK,CAAC,IAAI,CACR,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,gBAAgB,CACvC,0BAA0B,CAC3B,CACF,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CACzD,CAAC;gBAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,CAAC;gBAC/C,MAAM,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;gBAEnC,iBAAiB,CAAC,KAAK,EAAE,CAAC;gBAC1B,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAE1E,MAAM,QAAQ,GAAmB,CAC/B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,sCAAsC,CACvC,CACF,CAAC;gBACF,MAAM,QAAQ,CAAC,cAAc,CAAC;gBAE9B,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,4FAA4F,EAAE,KAAK,IAAI,EAAE;gBAC1G,MAAM,CACJ,GAAG,CAAC,aAAa,CACf,sDAAsD,CACvD,CACF,CAAC,EAAE,CAAC,KAAK,CAAC;gBACX,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,2CAA2C,CAAC,CAAC;qBACnE,EAAE,CAAC,KAAK,CAAC;gBACZ,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;gBAE5D,MAAM,YAAY,GAAgB,CAChC,KAAK,CAAC,IAAI,CACR,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,gBAAgB,CACvC,0BAA0B,CAC3B,CACF,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CACpD,CAAC;gBAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,EAAE,CAAC;gBAC/C,YAAY,CAAC,KAAK,EAAE,CAAC;gBAErB,MAAM,CACJ,GAAG,CAAC,aAAa,CACf,sDAAsD,CACvD,CACF,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;gBACf,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,2CAA2C,CAAC,CAAC;qBACnE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;gBAChB,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;YAClE,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,IAAI,aAA0B,CAAC;QAE/B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,MAAM,GAAG,+BAA+B,CAC5C,GAAG,CAAC,aAAa,CAAC,sBAAsB,CAAE,CAC3C,CAAC;YACF,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACpD,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAEZ,CAChB,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CACvC,iCAAiC,CAClC,CACD,CAAC,UAAU,GAAG,KAAK,CAAC,CAAC,qDAAqD;YAE5E,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,aAAa,CACxC,kCAAkC,CACnC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE;YACjE,MAAM,CACJ,GAAG,CAAC,gBAAgB,CAAC,4CAA4C,CAAC,CACnE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEtB,aAAa,CAAC,KAAK,EAAE,CAAC;YAEtB,MAAM,CACJ,GAAG,CAAC,gBAAgB,CAAC,4CAA4C,CAAC,CACnE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iFAAiF,EAAE,GAAG,EAAE;YACzF,MAAM,CACJ,GAAG,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CACvD,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEtB,aAAa,CAAC,KAAK,EAAE,CAAC;YAEtB,MAAM,CACJ,GAAG,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CACvD,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yCAAyC,EAAE,GAAG,EAAE;YACjD,MAAM,CACJ,GAAG,CAAC,gBAAgB,CAAC,8CAA8C,CAAC,CACrE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAEtB,aAAa,CAAC,KAAK,EAAE,CAAC;YAEtB,MAAM,CACJ,GAAG,CAAC,gBAAgB,CAAC,8CAA8C,CAAC,CACrE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport { FilteredList } from '../../../src/filtered-list.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  createSampledValueControlWizard,\n  selectSampledValueControlWizard,\n} from '../../../src/wizards/sampledvaluecontrol.js';\nimport { WizardCheckbox } from '../../../src/wizard-checkbox.js';\nimport { FinderList } from '../../../src/finder-list.js';\nimport { newWizardEvent } from '../../../src/foundation.js';\n\ndescribe('Wizards for SCL element SampledValueControl', () => {\n  let doc: XMLDocument;\n  let element: MockWizardEditor;\n\n  beforeEach(async () => {\n    element = await fixture(html`<mock-wizard-editor></mock-wizard-editor>`);\n    doc = await fetch('/test/testfiles/wizards/sampledvaluecontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('define a select wizards that ', () => {\n    let sampledValueControlList: FilteredList;\n\n    describe('with the document element as input', () => {\n      beforeEach(async () => {\n        const wizard = selectSampledValueControlWizard(doc.documentElement);\n        element.dispatchEvent(newWizardEvent(() => wizard));\n        await element.requestUpdate();\n\n        sampledValueControlList = <FilteredList>(\n          element.wizardUI.dialog?.querySelector('filtered-list')\n        );\n        await sampledValueControlList.updateComplete;\n      });\n\n      it('shows all SampledValueControl elements within a project', () =>\n        expect(sampledValueControlList.items.length).to.equal(\n          doc.querySelectorAll('SampledValueControl').length\n        ));\n\n      it('opens edit wizard for selected SampledValueControl element on click', async () => {\n        const reportItem = <ListItemBase>sampledValueControlList.items[0];\n        reportItem.click();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const nameField = <WizardTextField>(\n          element.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"name\"]'\n          )\n        );\n        await nameField.requestUpdate();\n\n        expect(nameField.value).to.equal(\n          doc.querySelectorAll('SampledValueControl')[0].getAttribute('name')\n        );\n      });\n\n      describe('has an add SampledValueControl primary button that', () => {\n        let iEDPicker: FinderList;\n\n        beforeEach(async () => {\n          (<HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          )).click();\n          await new Promise(resolve => setTimeout(resolve, 50)); // await animation\n\n          iEDPicker = <FinderList>(\n            element.wizardUI.dialog?.querySelector('finder-list')\n          );\n        });\n\n        it('opens a potential list of host IEDs for the SampledValueControl element', async () =>\n          expect(iEDPicker).to.exist);\n      });\n    });\n\n    describe('with a specific IED as input', () => {\n      beforeEach(async () => {\n        const wizard = selectSampledValueControlWizard(\n          doc.querySelector('IED[name=\"IED3\"]')!\n        );\n        element.dispatchEvent(newWizardEvent(() => wizard));\n        await element.requestUpdate();\n\n        sampledValueControlList = <FilteredList>(\n          element.wizardUI.dialog?.querySelector('filtered-list')\n        );\n        await sampledValueControlList.updateComplete;\n      });\n\n      it('shows all SampledValueControl elements within an IED', () =>\n        expect(sampledValueControlList.items.length).to.equal(\n          doc.querySelectorAll('IED[name=\"IED3\"] SampledValueControl').length\n        ));\n\n      it('opens edit wizard for selected SampledValueControl element on click', async () => {\n        const reportItem = <ListItemBase>sampledValueControlList.items[0];\n        reportItem.click();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const nameField = <WizardTextField>(\n          element.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"name\"]'\n          )\n        );\n        await nameField.requestUpdate();\n\n        expect(nameField.value).to.equal(\n          doc.querySelectorAll('SampledValueControl')[0].getAttribute('name')\n        );\n      });\n\n      describe('has an add SampledValueControl primary button that', () => {\n        let nameField: WizardTextField;\n        beforeEach(async () => {\n          const primaryAction = <HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          );\n\n          primaryAction.click();\n          await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n          nameField = <WizardTextField>(\n            element.wizardUI.dialog?.querySelector(\n              'wizard-textfield[label=\"name\"]'\n            )\n          );\n        });\n\n        it('opens the create wizard for the SampledValueControl element', async () =>\n          expect(nameField).to.exist);\n      });\n    });\n  });\n\n  describe('defines an edit wizard that', () => {\n    let nameField: WizardTextField;\n    let secondaryAction: HTMLElement;\n    let primaryAction: HTMLElement;\n    let parentIED: Element;\n\n    describe('loaded without SMV element reference', () => {\n      beforeEach(async () => {\n        element.workflow.length = 0; // remove all wizard from FIFO queue\n        parentIED = doc.querySelectorAll('IED')[1];\n        element.dispatchEvent(\n          newWizardEvent(() => selectSampledValueControlWizard(parentIED))\n        );\n\n        await element.requestUpdate();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const sampledValueControlBlock = <ListItemBase>(\n          (<FilteredList>(\n            element.wizardUI.dialog?.querySelector('filtered-list')\n          )).items[0]\n        );\n        sampledValueControlBlock.click();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        nameField = element.wizardUI.dialog!.querySelector(\n          'wizard-textfield[label=\"name\"]'\n        )!;\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n        secondaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"secondaryAction\"]'\n          )\n        );\n        await nameField.updateComplete;\n      });\n\n      it('rejects name attribute starting with decimals', async () => {\n        expect(\n          parentIED\n            .querySelectorAll('SampledValueControl')[0]\n            ?.getAttribute('name')\n        ).to.not.equal('4adsasd');\n\n        nameField.value = '4adsasd';\n        await element.requestUpdate();\n        primaryAction.click();\n\n        expect(\n          parentIED\n            .querySelectorAll('SampledValueControl')[0]\n            ?.getAttribute('name')\n        ).to.not.equal('4adsasd');\n      });\n\n      it('edits name attribute on primary action', async () => {\n        expect(\n          parentIED\n            .querySelectorAll('SampledValueControl')[0]\n            ?.getAttribute('name')\n        ).to.not.equal('myNewName');\n\n        nameField.value = 'myNewName';\n        await element.requestUpdate();\n        primaryAction.click();\n\n        expect(\n          parentIED\n            .querySelectorAll('SampledValueControl')[0]\n            ?.getAttribute('name')\n        ).to.equal('myNewName');\n      });\n\n      it('dynamically updates wizards after attribute change', async () => {\n        nameField.value = 'myNewName';\n        primaryAction.click();\n\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const sampledValueControlBlock = <ListItemBase>(\n          (<FilteredList>(\n            element.wizardUI.dialog?.querySelector('filtered-list')\n          )).items[0]\n        );\n\n        expect(sampledValueControlBlock.innerHTML).to.contain('myNewName');\n      });\n\n      it('returns back to its starting wizard on secondary action', async () => {\n        secondaryAction.click();\n\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n        const sampledValueControlBlock = <ListItemBase>(\n          (<FilteredList>(\n            element.wizardUI.dialog?.querySelector('filtered-list')\n          )).items[0]\n        );\n\n        expect(sampledValueControlBlock.innerHTML).to.contain('MSVCB01');\n      });\n\n      it('does not render SMV edit button', async () => {\n        const editSMvButton = <HTMLElement>(\n          Array.from(\n            element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n              'mwc-menu > mwc-list-item'\n            )\n          ).find(item => item.innerHTML.includes(`[scl.Communication]`))\n        );\n\n        await element.wizardUI.dialog?.requestUpdate();\n        expect(editSMvButton).not.to.exist;\n      });\n    });\n\n    describe('loaded with SMV element reference', () => {\n      beforeEach(async () => {\n        element.workflow.length = 0; // remove all wizard from FIFO queue\n        parentIED = doc.querySelectorAll('IED')[2];\n        element.dispatchEvent(\n          newWizardEvent(() => selectSampledValueControlWizard(parentIED))\n        );\n        await element.requestUpdate();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const sampledValueControlBlock = <ListItemBase>(\n          (<FilteredList>(\n            element.wizardUI.dialog?.querySelector('filtered-list')\n          )).items[0]\n        );\n        sampledValueControlBlock.click();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        nameField = element.wizardUI.dialog!.querySelector(\n          'wizard-textfield[label=\"name\"]'\n        )!;\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n        secondaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"secondaryAction\"]'\n          )\n        );\n        await nameField.updateComplete;\n      });\n\n      it('opens a edit wizard for SMV on edit SMV button click', async () => {\n        const editSMvButton = <HTMLElement>(\n          Array.from(\n            element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n              'mwc-menu > mwc-list-item'\n            )\n          ).find(item => item.innerHTML.includes(`[scl.Communication]`))\n        );\n\n        await element.wizardUI.dialog?.requestUpdate();\n        expect(editSMvButton).to.exist;\n\n        editSMvButton.click();\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n        const macField = <WizardTextField>(\n          element.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"MAC-Address\"]'\n          )\n        );\n        await macField.updateComplete;\n\n        expect(macField.value).to.equal(\n          doc\n            .querySelector('SMV > Address > P[type=\"MAC-Address\"]')\n            ?.textContent?.trim()\n        );\n      });\n\n      it('opens a edit wizard for SMV on edit SMV button click', async () => {\n        const editSmvOptsButton = <HTMLElement>(\n          Array.from(\n            element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n              'mwc-menu > mwc-list-item'\n            )\n          ).find(item => item.innerHTML.includes(`[scl.SmvOpts]`))\n        );\n\n        await element.wizardUI.dialog?.requestUpdate();\n        expect(editSmvOptsButton).to.exist;\n\n        editSmvOptsButton.click();\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n        const macField = <WizardCheckbox>(\n          element.wizardUI.dialog?.querySelector(\n            'wizard-checkbox[label=\"refreshTime\"]'\n          )\n        );\n        await macField.updateComplete;\n\n        expect(macField).to.exist;\n      });\n\n      it('removes the SampledValueControl element and its referenced elements on remove button click', async () => {\n        expect(\n          doc.querySelector(\n            'IED[name=\"IED3\"] SampledValueControl[name=\"MSVCB01\"]'\n          )\n        ).to.exist;\n        expect(doc.querySelector('IED[name=\"IED3\"] DataSet[name=\"PhsMeas1\"]'))\n          .to.exist;\n        expect(doc.querySelector('SMV[cbName=\"MSVCB01\"]')).to.exist;\n\n        const deleteButton = <HTMLElement>(\n          Array.from(\n            element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n              'mwc-menu > mwc-list-item'\n            )\n          ).find(item => item.innerHTML.includes(`[remove]`))\n        );\n\n        await element.wizardUI.dialog?.requestUpdate();\n        deleteButton.click();\n\n        expect(\n          doc.querySelector(\n            'IED[name=\"IED3\"] SampledValueControl[name=\"MSVCB01\"]'\n          )\n        ).to.not.exist;\n        expect(doc.querySelector('IED[name=\"IED3\"] DataSet[name=\"PhsMeas1\"]'))\n          .to.not.exist;\n        expect(doc.querySelector('SMV[cbName=\"MSVCB01\"]')).to.not.exist;\n      });\n    });\n  });\n\n  describe('defines a create wizards that', () => {\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      const wizard = createSampledValueControlWizard(\n        doc.querySelector('IED[name=\"IED3\"] LN0')!\n      );\n      element.dispatchEvent(newWizardEvent(() => wizard));\n      await element.requestUpdate();\n\n      (<WizardTextField>(\n        element.wizardUI.dialogs[0].querySelector(\n          'wizard-textfield[label=\"smvID\"]'\n        )\n      )).maybeValue = 'wer'; // is empty string per default that must be non empty\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialogs[3]?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('creates a new instance of a SampledValueControl element', () => {\n      expect(\n        doc.querySelectorAll('IED[name=\"IED3\"] LN0 > SampledValueControl')\n      ).to.have.lengthOf(1);\n\n      primaryAction.click();\n\n      expect(\n        doc.querySelectorAll('IED[name=\"IED3\"] LN0 > SampledValueControl')\n      ).to.have.lengthOf(2);\n    });\n\n    it('creates a new instance of a DataSet element referenced from SampledValueControl', () => {\n      expect(\n        doc.querySelectorAll('IED[name=\"IED3\"] LN0 > DataSet')\n      ).to.have.lengthOf(1);\n\n      primaryAction.click();\n\n      expect(\n        doc.querySelectorAll('IED[name=\"IED3\"] LN0 > DataSet')\n      ).to.have.lengthOf(2);\n    });\n\n    it('creates a new instance of a SMV element', () => {\n      expect(\n        doc.querySelectorAll('ConnectedAP[iedName=\"IED3\"][apName=\"P1\"] SMV')\n      ).to.have.lengthOf(1);\n\n      primaryAction.click();\n\n      expect(\n        doc.querySelectorAll('ConnectedAP[iedName=\"IED3\"][apName=\"P1\"] SMV')\n      ).to.have.lengthOf(2);\n    });\n  });\n});\n"]}