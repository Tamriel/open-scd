{"version":3,"file":"reportcontrol-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../test/integration/wizards/reportcontrol-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport { FilteredList } from '../../../src/filtered-list.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  createReportControlWizard,\n  reportControlCopyToIedSelector,\n  reportControlParentSelector,\n  selectReportControlWizard,\n} from '../../../src/wizards/reportcontrol.js';\nimport { FinderList } from '../../../src/finder-list.js';\nimport { CheckListItem } from '@material/mwc-list/mwc-check-list-item';\nimport { newWizardEvent } from '../../../src/foundation.js';\n\ndescribe('Wizards for SCL element ReportControl', () => {\n  let doc: XMLDocument;\n  let element: MockWizardEditor;\n\n  let primaryAction: HTMLElement;\n\n  beforeEach(async () => {\n    element = await fixture(html`<mock-wizard-editor></mock-wizard-editor>`);\n    doc = await fetch('/test/testfiles/wizards/reportcontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('define a select wizards that ', () => {\n    let reportControlList: FilteredList;\n\n    describe('with the document element as input', () => {\n      beforeEach(async () => {\n        const wizard = selectReportControlWizard(doc.documentElement);\n        element.dispatchEvent(newWizardEvent(() => wizard));\n        await element.requestUpdate();\n\n        reportControlList = <FilteredList>(\n          element.wizardUI.dialog?.querySelector('filtered-list')\n        );\n        await reportControlList.updateComplete;\n      });\n\n      it('shows all ReportControl elements within a project', () =>\n        expect(reportControlList.items.length).to.equal(\n          doc.querySelectorAll('ReportControl').length\n        ));\n\n      it('opens edit wizard for selected ReportControl element on click', async () => {\n        const reportItem = <ListItemBase>reportControlList.items[1];\n        reportItem.click();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const nameField = <WizardTextField>(\n          element.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"name\"]'\n          )\n        );\n        await nameField.requestUpdate();\n\n        expect(nameField.value).to.equal(\n          doc.querySelectorAll('ReportControl')[1].getAttribute('name')\n        );\n      });\n\n      describe('has an add Report primary button that', () => {\n        let iEDPicker: FinderList;\n\n        beforeEach(async () => {\n          (<HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          )).click();\n          await new Promise(resolve => setTimeout(resolve, 50)); // await animation\n\n          iEDPicker = <FinderList>(\n            element.wizardUI.dialog?.querySelector('finder-list')\n          );\n        });\n\n        it('opens a potential list of host IEDs for the ReportControl element', async () =>\n          expect(iEDPicker).to.exist);\n      });\n    });\n\n    describe('with a specific IED as input', () => {\n      beforeEach(async () => {\n        const wizard = selectReportControlWizard(doc.querySelector('IED')!);\n        element.dispatchEvent(newWizardEvent(() => wizard));\n        await element.requestUpdate();\n\n        reportControlList = <FilteredList>(\n          element.wizardUI.dialog?.querySelector('filtered-list')\n        );\n        await reportControlList.updateComplete;\n      });\n\n      it('allows to filter ReportControl elements per IED', async () =>\n        expect(reportControlList.items.length).to.equal(\n          doc.querySelector('IED')!.querySelectorAll('ReportControl').length\n        ));\n\n      it('opens edit wizard for selected ReportControl element on click', async () => {\n        const reportItem = <ListItemBase>reportControlList.items[1];\n        reportItem.click();\n        await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n        const nameField = <WizardTextField>(\n          element.wizardUI.dialog?.querySelector(\n            'wizard-textfield[label=\"name\"]'\n          )\n        );\n        await nameField.requestUpdate();\n\n        expect(nameField.value).to.equal(\n          doc.querySelectorAll('ReportControl')[1].getAttribute('name')\n        );\n      });\n\n      describe('has an add Report primary button that', () => {\n        it('opens the create wizard for the ReportControl element', async () => {\n          const primaryAction = <HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          );\n\n          await primaryAction.click();\n          await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n          const nameField = <WizardTextField>(\n            element.wizardUI.dialog?.querySelector(\n              'wizard-textfield[label=\"name\"]'\n            )\n          );\n          await nameField.requestUpdate();\n\n          expect(nameField).to.exist;\n        });\n      });\n    });\n  });\n\n  describe('defines an edit wizard that', () => {\n    let nameField: WizardTextField;\n    let secondaryAction: HTMLElement;\n    let parentIED: Element;\n\n    beforeEach(async () => {\n      element.workflow.length = 0; // remove all wizard from FIFO queue\n      parentIED = doc.querySelector('IED')!;\n      element.dispatchEvent(\n        newWizardEvent(() => selectReportControlWizard(parentIED))\n      );\n\n      await element.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n      const report = <ListItemBase>(\n        (<FilteredList>element.wizardUI.dialog?.querySelector('filtered-list'))\n          .items[1]\n      );\n      report.click();\n      await new Promise(resolve => setTimeout(resolve, 20)); // await animation\n\n      nameField = element.wizardUI.dialog!.querySelector(\n        'wizard-textfield[label=\"name\"]'\n      )!;\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n      secondaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"secondaryAction\"]'\n        )\n      );\n      await nameField.updateComplete;\n    });\n\n    it('rejects name attribute starting with decimals', async () => {\n      expect(\n        parentIED.querySelectorAll('ReportControl')[1]?.getAttribute('name')\n      ).to.not.equal('4adsasd');\n\n      nameField.value = '4adsasd';\n      await element.requestUpdate();\n      primaryAction.click();\n\n      expect(\n        parentIED.querySelectorAll('ReportControl')[1]?.getAttribute('name')\n      ).to.not.equal('4adsasd');\n    });\n\n    it('edits name attribute on primary action', async () => {\n      expect(\n        parentIED.querySelectorAll('ReportControl')[1]?.getAttribute('name')\n      ).to.not.equal('myNewName');\n\n      nameField.value = 'myNewName';\n      await element.requestUpdate();\n      primaryAction.click();\n\n      expect(\n        parentIED.querySelectorAll('ReportControl')[1]?.getAttribute('name')\n      ).to.equal('myNewName');\n    });\n\n    it('dynamically updates wizards after attribute change', async () => {\n      nameField.value = 'myNewName';\n      primaryAction.click();\n\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const report = <ListItemBase>(\n        (<FilteredList>element.wizardUI.dialog?.querySelector('filtered-list'))\n          .items[1]\n      );\n\n      expect(report.innerHTML).to.contain('myNewName');\n    });\n\n    it('returns back to its starting wizard on secondary action', async () => {\n      secondaryAction.click();\n\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const report = <ListItemBase>(\n        (<FilteredList>element.wizardUI.dialog?.querySelector('filtered-list'))\n          .items[0]\n      );\n\n      expect(report.innerHTML).to.contain('ReportCb');\n    });\n\n    it('opens edit wizard for DataSet element on edit dataset button click', async () => {\n      const editDataSetButton = <HTMLElement>(\n        Array.from(\n          element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes(`[scl.DataSet]`))\n      );\n\n      await element.wizardUI.dialog?.requestUpdate();\n      editDataSetButton.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const nameField = <WizardTextField>(\n        element.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      await nameField.updateComplete;\n\n      expect(nameField.value).to.equal(\n        doc.querySelectorAll('DataSet')[1].getAttribute('name')\n      );\n    });\n\n    it('opens edit wizard for TrgOps element on edit trigger options button click', async () => {\n      const editTrgOpsButton = <HTMLElement>(\n        Array.from(\n          element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes(`[scl.TrgOps]`))\n      );\n\n      await element.wizardUI.dialog?.requestUpdate();\n      editTrgOpsButton.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const dchgSelect = <WizardTextField>(\n        element.wizardUI.dialog?.querySelector('wizard-checkbox[label=\"dchg\"]')\n      );\n      await dchgSelect.updateComplete;\n\n      expect(dchgSelect).to.exist;\n    });\n\n    it('opens edit wizard for OptFields element on edit optional fields button click', async () => {\n      const editOptFieldsButton = <HTMLElement>(\n        Array.from(\n          element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes(`[scl.OptFields]`))\n      );\n\n      await element.wizardUI.dialog?.requestUpdate();\n      editOptFieldsButton.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const seqNumSelect = <WizardTextField>(\n        element.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"seqNum\"]'\n        )\n      );\n      await seqNumSelect.updateComplete;\n\n      expect(seqNumSelect).to.exist;\n    });\n\n    it('removes the ReportControl element and its referenced elements on remove button click', async () => {\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] LN[lnClass=\"XSWI\"] ReportControl[name=\"ReportCb2\"]'\n        )\n      ).to.exist;\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] LN[lnClass=\"XSWI\"][inst=\"1\"] DataSet[name=\"dataSet\"]'\n        )\n      ).to.exist;\n\n      const deleteElement = <HTMLElement>(\n        Array.from(\n          element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes(`[remove]`))\n      );\n      await element.wizardUI.dialog?.requestUpdate();\n      deleteElement.click();\n\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] LN[lnClass=\"XSWI\"][inst=\"1\"] ReportControl[name=\"ReportCb2\"]'\n        )\n      ).to.not.exist;\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] LN[lnClass=\"XSWI\"][inst=\"1\"] DataSet[name=\"dataSet\"]'\n        )\n      ).to.not.exist;\n    });\n\n    it('opens a IEDs selector wizard on copy to other IEDs meu action', async () => {\n      const copyMenuAction = <HTMLElement>(\n        Array.from(\n          element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes(`[controlblock.label.copy]`))\n      );\n      await element.wizardUI.dialog?.requestUpdate();\n      copyMenuAction.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const iedsPicker =\n        element.wizardUI.dialog?.querySelector<FilteredList>('filtered-list');\n\n      expect(iedsPicker).to.exist;\n      expect(iedsPicker!.multi).to.be.true;\n    });\n  });\n\n  describe('defines a selector wizard to select ReportControl parent', () => {\n    let iEDPicker: FinderList;\n\n    beforeEach(async () => {\n      const wizard = reportControlParentSelector(doc);\n      element.dispatchEvent(newWizardEvent(() => wizard));\n\n      await element.requestUpdate();\n\n      iEDPicker = <FinderList>(\n        element.wizardUI.dialog?.querySelector('finder-list')\n      );\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('opens a potential list of host IEDs for the ReportControl element', () =>\n      expect(iEDPicker).to.exist);\n\n    it('is not of type multi', () => expect(iEDPicker.multi).to.be.false);\n\n    it('forwards LN0/LN as parent to ReportControl create wizard', async () => {\n      expect(\n        doc\n          .querySelector('IED[name=\"IED3\"]')\n          ?.querySelectorAll('LN0 > ReportControl')\n      ).to.have.lengthOf(1);\n\n      iEDPicker.path = ['IED: IED3'];\n      primaryAction.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      const nameField = <WizardTextField>(\n        element.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      expect(nameField).to.exist;\n\n      (<HTMLElement>(\n        element.wizardUI.dialogs[3]?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      )).click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      expect(\n        doc\n          .querySelector('IED[name=\"IED3\"]')\n          ?.querySelectorAll('LN0 > ReportControl')\n      ).to.have.lengthOf(2);\n    });\n  });\n\n  describe('defines a selector wizard to select ReportControl copy to sink', () => {\n    let iedsPicker: FilteredList;\n    let listItem: CheckListItem;\n\n    beforeEach(async () => {\n      const sourceReportControl = doc.querySelector(\n        'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"]'\n      )!;\n      const wizard = reportControlCopyToIedSelector(sourceReportControl);\n      element.dispatchEvent(newWizardEvent(() => wizard));\n      await element.requestUpdate();\n\n      iedsPicker = <FilteredList>(\n        element.wizardUI.dialog?.querySelector('filtered-list')\n      );\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('opens a potential list of sink IEDs for the copy operation', () =>\n      expect(iedsPicker).to.exist);\n\n    describe('with a sink IED not meeting any of the data references', () => {\n      beforeEach(async () => {\n        listItem = <CheckListItem>(\n          iedsPicker.items.find(item => item.value.includes('IED4'))!\n        );\n        await element.requestUpdate();\n      });\n\n      it('disables the list item', () => expect(listItem.disabled).to.be.true);\n\n      it('does not copy the control block ', async () => {\n        listItem.selected = true;\n        await listItem.requestUpdate();\n        primaryAction.click();\n        expect(doc.querySelector('IED[name=\"IED4\"] ReportControl')).to.not\n          .exist;\n      });\n    });\n\n    describe('with a sink IED meeting partially the data references', () => {\n      beforeEach(async () => {\n        listItem = <CheckListItem>(\n          iedsPicker.items.find(item => item.value.includes('IED5'))!\n        );\n\n        await element.requestUpdate();\n        await listItem.requestUpdate();\n      });\n\n      it('list item is selectable', () =>\n        expect(listItem.disabled).to.be.false);\n\n      it('does copy the control block ', async () => {\n        listItem.selected = true;\n        await listItem.requestUpdate();\n        primaryAction.click();\n\n        expect(doc.querySelector('IED[name=\"IED5\"] ReportControl')).to.exist;\n      });\n\n      it('removes non referenced data from the DataSet the control block ', async () => {\n        listItem.selected = true;\n        await listItem.requestUpdate();\n        primaryAction.click();\n\n        const rpControl = doc.querySelector('IED[name=\"IED5\"] ReportControl')!;\n        const dataSet = doc.querySelector(\n          `IED[name=\"IED5\"] DataSet[name=\"${rpControl.getAttribute('datSet')}\"]`\n        );\n        expect(dataSet).to.exist;\n        expect(dataSet!.children).to.have.lengthOf(3);\n      });\n    });\n\n    describe('with a sink IED already containing ReportControl', () => {\n      beforeEach(async () => {\n        listItem = <CheckListItem>(\n          iedsPicker.items.find(item => item.value.includes('IED4'))!\n        );\n\n        await element.requestUpdate();\n      });\n\n      it('list item is disabled', () => expect(listItem.disabled).to.be.true);\n\n      it('does not copy report control block nor DataSet ', async () => {\n        listItem.selected = true;\n        await listItem.requestUpdate();\n        primaryAction.click();\n\n        const rpControl = doc.querySelector('IED[name=\"IED6\"] ReportControl')!;\n        expect(rpControl.getAttribute('datSet')).to.not.exist;\n\n        const dataSet = doc.querySelector(`IED[name=\"IED6\"] DataSet`);\n        expect(dataSet).to.not.exist;\n      });\n    });\n\n    describe('with a sink IED already containing DataSet', () => {\n      beforeEach(async () => {\n        listItem = <CheckListItem>(\n          iedsPicker.items.find(item => item.value.includes('IED7'))!\n        );\n\n        await element.requestUpdate();\n      });\n\n      it('does not copy report control block nor DataSet ', async () => {\n        listItem.selected = true;\n        await listItem.requestUpdate();\n        primaryAction.click();\n\n        const rpControl = doc.querySelector('IED[name=\"IED7\"] ReportControl')!;\n        expect(rpControl).to.not.exist;\n\n        const dataSet = doc.querySelector(`IED[name=\"IED7\"] DataSet`);\n        expect(dataSet?.children).to.have.lengthOf(3);\n      });\n    });\n  });\n\n  describe('defines a create wizards that', () => {\n    let primaryAction: HTMLElement;\n\n    beforeEach(async () => {\n      const wizard = createReportControlWizard(doc.querySelector('LN0')!);\n      element.dispatchEvent(newWizardEvent(() => wizard));\n      await element.requestUpdate();\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialogs[3]?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('creates a new instance of a ReportControl element', () => {\n      expect(\n        doc\n          .querySelector<Element>('IED[name=\"IED2\"]')\n          ?.querySelectorAll('LN0 > ReportControl')\n      ).to.have.lengthOf(1);\n\n      primaryAction.click();\n\n      expect(\n        doc\n          .querySelector<Element>('IED[name=\"IED2\"]')\n          ?.querySelectorAll('LN0 > ReportControl')\n      ).to.have.lengthOf(2);\n    });\n\n    it('creates a new instance of a DataSet element referenced from ReportControl', () => {\n      expect(\n        doc\n          .querySelector<Element>('IED[name=\"IED2\"]')\n          ?.querySelectorAll('LN0 > DataSet')\n      ).to.have.lengthOf(1);\n\n      primaryAction.click();\n\n      expect(\n        doc\n          .querySelector<Element>('IED[name=\"IED2\"]')\n          ?.querySelectorAll('LN0 > DataSet')\n      ).to.have.lengthOf(2);\n    });\n  });\n});\n"]}