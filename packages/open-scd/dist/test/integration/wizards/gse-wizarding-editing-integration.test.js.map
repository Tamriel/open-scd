{"version":3,"file":"gse-wizarding-editing-integration.test.js","sourceRoot":"","sources":["../../../../test/integration/wizards/gse-wizarding-editing-integration.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,6BAA6B,CAAC;AAGrC,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAE5D,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAE5D,QAAQ,CAAC,mCAAmC,EAAE,GAAG,EAAE;IACjD,IAAI,GAAgB,CAAC;IACrB,IAAI,OAAyB,CAAC;IAE9B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,2CAA2C,CAAC,CAAC;QACzE,GAAG,GAAG,MAAM,KAAK,CAAC,wCAAwC,CAAC;aACxD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,IAAI,aAA0B,CAAC;QAC/B,IAAI,YAA6B,CAAC;QAElC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,MAAM,GAAG,aAAa,CAC1B,GAAG,CAAC,aAAa,CAAC,gDAAgD,CAAE,CACrE,CAAC;YACF,OAAO,CAAC,aAAa,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;YAC9C,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAC9B,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;YACF,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CACnD,mCAAmC,CACnC,CAAC;YACH,MAAM,YAAY,CAAC,cAAc,CAAC;QACpC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,+BAA+B,EAAE,KAAK,IAAI,EAAE;YAC7C,MAAM,CACJ,GAAG;iBACA,aAAa,CACZ,0DAA0D,CAC3D;gBACD,EAAE,WAAW,EAAE,IAAI,EAAE,CACxB,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACjB,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC;YAC1B,aAAa,CAAC,KAAK,EAAE,CAAC;YACtB,MAAM,OAAO,CAAC,cAAc,CAAC;YAC7B,MAAM,CACJ,GAAG;iBACA,aAAa,CACZ,0DAA0D,CAC3D;gBACD,EAAE,WAAW,EAAE,IAAI,EAAE,CACxB,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { editGseWizard } from '../../../src/wizards/gse.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport { newWizardEvent } from '../../../src/foundation.js';\n\ndescribe('gse wizarding editing integration', () => {\n  let doc: XMLDocument;\n  let element: MockWizardEditor;\n\n  beforeEach(async () => {\n    element = await fixture(html`<mock-wizard-editor></mock-wizard-editor>`);\n    doc = await fetch('/test/testfiles/wizards/gsecontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('editGseWizard', () => {\n    let primaryAction: HTMLElement;\n    let minTimeField: WizardTextField;\n\n    beforeEach(async () => {\n      const wizard = editGseWizard(\n        doc.querySelector('GSE[ldInst=\"CircuitBreaker_CB1\"][cbName=\"GCB\"]')!\n      );\n      element.dispatchEvent(newWizardEvent(wizard));\n      await element.requestUpdate();\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n      minTimeField = element.wizardUI.dialog!.querySelector(\n        'wizard-textfield[label=\"MinTime\"]'\n      )!;\n      await minTimeField.updateComplete;\n    });\n\n    it('allows to edit GSE attributes', async () => {\n      expect(\n        doc\n          .querySelector(\n            'GSE[ldInst=\"CircuitBreaker_CB1\"][cbName=\"GCB\"] > MinTime'\n          )\n          ?.textContent?.trim()\n      ).to.equal('10');\n      minTimeField.value = '56';\n      primaryAction.click();\n      await element.updateComplete;\n      expect(\n        doc\n          .querySelector(\n            'GSE[ldInst=\"CircuitBreaker_CB1\"][cbName=\"GCB\"] > MinTime'\n          )\n          ?.textContent?.trim()\n      ).to.equal('56');\n    });\n  });\n});\n"]}