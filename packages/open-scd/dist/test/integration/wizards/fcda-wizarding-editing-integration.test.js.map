{"version":3,"file":"fcda-wizarding-editing-integration.test.js","sourceRoot":"","sources":["../../../../test/integration/wizards/fcda-wizarding-editing-integration.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { createFCDAsWizard } from '../../../src/wizards/fcda.js';\nimport { FinderList } from '../../../src/finder-list.js';\nimport { newWizardEvent } from '../../../src/foundation.js';\n\ndescribe('FCDA editing wizarding integration', () => {\n  let doc: XMLDocument;\n  let element: MockWizardEditor;\n  let finder: FinderList;\n  let primaryAction: HTMLElement;\n\n  beforeEach(async () => {\n    element = await fixture(html`<mock-wizard-editor></mock-wizard-editor>`);\n    doc = await fetch('/test/testfiles/wizards/fcda.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    const wizard = createFCDAsWizard(doc.querySelector('DataSet')!);\n    element.dispatchEvent(newWizardEvent(wizard));\n    await element.requestUpdate();\n\n    finder = element.wizardUI.dialog!.querySelector<FinderList>('finder-list')!;\n    primaryAction = <HTMLElement>(\n      element.wizardUI.dialog?.querySelector('mwc-button[slot=\"primaryAction\"]')\n    );\n  });\n\n  describe('with a specific path', () => {\n    const path = [\n      'Server: IED1>P1',\n      'LDevice: IED1>>CircuitBreaker_CB1',\n      'LN0: IED1>>CircuitBreaker_CB1',\n      'DO: #Dummy.LLN0>Beh',\n      'DA: #Dummy.LLN0.Beh>stVal',\n    ];\n\n    beforeEach(async () => {\n      finder.paths = [path];\n      await element.requestUpdate();\n    });\n\n    it('adds a new FCDA on primary action', async () => {\n      expect(\n        doc.querySelector(\n          'DataSet > FCDA[ldInst=\"CircuitBreaker_CB1\"]' +\n            '[prefix=\"\"][lnClass=\"LLN0\"]:not(lnInst)[doName=\"Beh\"][daName=\"stVal\"][fc=\"ST\"]'\n        )\n      ).to.not.exist;\n      await primaryAction.click();\n      expect(\n        doc.querySelector(\n          'DataSet > FCDA[ldInst=\"CircuitBreaker_CB1\"]' +\n            '[prefix=\"\"][lnClass=\"LLN0\"]:not(lnInst)[doName=\"Beh\"][daName=\"stVal\"][fc=\"ST\"]'\n        )\n      ).to.exist;\n    });\n  });\n\n  describe('with a more complex path including SDOs and BDAs', () => {\n    const path = [\n      'Server: IED1>P1',\n      'LDevice: IED1>>Meas',\n      'LN: IED1>>Meas>My MMXU 1',\n      'DO: #Dummy.MMXU>A',\n      'SDO: #OpenSCD_WYE_phases>phsA',\n      'DA: #OpenSCD_CMV_db_i_MagAndAng>cVal',\n      'BDA: #OpenSCD_Vector_I_w_Ang>mag',\n      'BDA: #OpenSCD_AnalogueValue_INT32>i',\n    ];\n\n    beforeEach(async () => {\n      finder.paths = [path];\n      await element.requestUpdate();\n    });\n\n    it('adds a new FCDA on primary action', async () => {\n      expect(\n        doc.querySelector(\n          'DataSet > FCDA[ldInst=\"Meas\"]' +\n            '[prefix=\"My\"][lnClass=\"MMXU\"][lnInst=\"1\"]' +\n            '[doName=\"A.phsA\"][daName=\"cVal.mag.i\"][fc=\"MX\"]'\n        )\n      ).to.not.exist;\n      await primaryAction.click();\n      expect(\n        doc.querySelector(\n          'DataSet > FCDA[ldInst=\"Meas\"]' +\n            '[prefix=\"My\"][lnClass=\"MMXU\"][lnInst=\"1\"]' +\n            '[doName=\"A.phsA\"][daName=\"cVal.mag.i\"][fc=\"MX\"]'\n        )\n      ).to.exist;\n    });\n  });\n});\n"]}