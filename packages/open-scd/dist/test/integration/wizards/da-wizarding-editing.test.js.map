{"version":3,"file":"da-wizarding-editing.test.js","sourceRoot":"","sources":["../../../../test/integration/wizards/da-wizarding-editing.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../mock-open-scd.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport { FilteredList } from '../../../src/filtered-list.js';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\nimport TemplatesPlugin from '../../../src/editors/Templates.js';\nimport { WizardSelect } from '../../../src/wizard-select.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport { WizardCheckbox } from '../../../src/wizard-checkbox.js';\n\ndescribe('DA wizarding editing integration', () => {\n  if (customElements.get('templates-editor') === undefined)\n    customElements.define('templates-editor', TemplatesPlugin);\n  let doc: Document;\n  let parent: MockOpenSCD;\n  let templates: TemplatesPlugin;\n  let dOTypeList: FilteredList;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/templates/dotypes.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<mock-open-scd\n        ><templates-editor .doc=${doc}></templates-editor\n      ></mock-open-scd>`\n    );\n\n    templates = parent.getActivePlugin();\n    await parent.updateComplete;\n    dOTypeList = <FilteredList>(\n      templates.shadowRoot?.querySelector('filtered-list[id=\"dotypelist\"]')\n    );\n  });\n\n  describe('defines a editDaWizard to edit an existing DA', () => {\n    let nameField: WizardTextField;\n    let primayAction: HTMLElement;\n    let deleteButton: HTMLElement;\n\n    beforeEach(async () => {\n      (<ListItem>(\n        dOTypeList.querySelector('mwc-list-item[value=\"#Dummy.LLN0.Mod\"]')\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      (<HTMLElement>(\n        parent.wizardUI?.dialog?.querySelector(\n          'mwc-list-item[value=\"#Dummy.LLN0.Mod>stVal\"]'\n        )\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      primayAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n      deleteButton = <HTMLElement>(\n        Array.from(\n          parent.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes('Remove'))\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot();\n    });\n\n    it('edits DA attributes name', async () => {\n      expect(\n        doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"stVal\"]')\n      ).to.exist;\n      nameField.value = 'newCtlVal';\n\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.requestUpdate();\n\n      expect(\n        doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"stVal\"]')\n      ).to.not.exist;\n      expect(\n        doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"newCtlVal\"]')\n      ).to.exist;\n    });\n\n    it('deletes the DA element on delete button click', async () => {\n      expect(\n        doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"stVal\"]')\n      ).to.exist;\n      expect(\n        doc.querySelectorAll('DOType[id=\"Dummy.LLN0.Mod\"] > DA').length\n      ).to.equal(14);\n\n      deleteButton.click();\n      await parent.requestUpdate();\n\n      expect(\n        doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"stVal\"]')\n      ).to.not.exist;\n      expect(\n        doc.querySelectorAll('DOType[id=\"Dummy.LLN0.Mod\"] > DA').length\n      ).to.equal(13);\n    });\n\n    it('does not edit DA element without changes', async () => {\n      const originData = (<Element>(\n        doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"stVal\"]')\n      )).cloneNode(true);\n\n      primayAction.click();\n      await parent.requestUpdate();\n\n      expect(\n        originData.isEqualNode(\n          doc.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"stVal\"]')\n        )\n      ).to.be.true;\n    });\n  });\n\n  describe('defines a createDaWizard to create a new DA element', () => {\n    let nameField: WizardTextField;\n    let descField: WizardTextField;\n    let sAddrField: WizardTextField;\n    let bTypeSelect: WizardSelect;\n    let valKindSelect: WizardSelect;\n    let valImportSelect: WizardCheckbox;\n    let fcSelect: WizardSelect;\n    let primayAction: HTMLElement;\n\n    beforeEach(async () => {\n      (<ListItem>(\n        dOTypeList.querySelector('mwc-list-item[value=\"#Dummy.LLN0.Mod\"]')\n      )).click();\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      (<HTMLElement>(\n        Array.from(\n          parent.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes('Data attribute'))\n      )).click();\n\n      await parent.requestUpdate();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      nameField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"name\"]')\n      );\n      descField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"desc\"]')\n      );\n      sAddrField = <WizardTextField>(\n        parent.wizardUI.dialog?.querySelector('wizard-textfield[label=\"sAddr\"]')\n      );\n      bTypeSelect = <WizardSelect>(\n        parent.wizardUI.dialog?.querySelector('wizard-select[label=\"bType\"]')\n      );\n      valKindSelect = <WizardSelect>(\n        parent.wizardUI.dialog?.querySelector('wizard-select[label=\"valKind\"]')\n      );\n      valImportSelect = <WizardCheckbox>(\n        parent.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"valImport\"]'\n        )\n      );\n      fcSelect = <WizardSelect>(\n        parent.wizardUI.dialog?.querySelector('wizard-select[label=\"fc\"]')\n      );\n      primayAction = <HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot();\n    });\n    it('creates a new DA element', async () => {\n      expect(\n        doc.querySelector(\n          'DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"newDAElement\"]'\n        )\n      ).to.not.exist;\n      nameField.value = 'newDAElement';\n      fcSelect.value = 'ST';\n      bTypeSelect.value = 'Struct';\n\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.requestUpdate();\n      expect(\n        doc.querySelector(\n          'DOType[id=\"Dummy.LLN0.Mod\"] > ' +\n            'DA[name=\"newDAElement\"]:not([desc]):not([sAddr])[bType=\"Struct\"]' +\n            '[type=\"Dummy_origin\"]:not([valKind]):not([valImport])'\n        )\n      ).to.exist;\n    });\n    it('creates yet another new DA element', async () => {\n      const name = 'newDAElement2';\n      const desc = 'newDAdesc';\n      const sAddr = 'myNewAddr';\n\n      expect(\n        doc.querySelector(\n          'DAType[id=\"#Dummy.LLN0.Mod\"] > DA[name=\"newDAElement2\"]'\n        )\n      ).to.not.exist;\n      nameField.value = name;\n      descField.nullable = false;\n      descField.value = desc;\n      sAddrField.nullable = false;\n      sAddrField.value = sAddr;\n      bTypeSelect.value = 'BOOLEAN';\n      valKindSelect.nullable = false;\n      valKindSelect.value = 'RO';\n      valImportSelect.nullable = false;\n      valImportSelect.maybeValue = 'true';\n      fcSelect.value = 'ST';\n\n      await parent.requestUpdate();\n      primayAction.click();\n      await parent.requestUpdate();\n      expect(\n        doc.querySelector(\n          `DOType[id=\"Dummy.LLN0.Mod\"] >` +\n            `DA[name=\"${name}\"][desc=\"${desc}\"][sAddr=\"${sAddr}\"][bType=\"BOOLEAN\"]` +\n            `:not([type])[valKind=\"RO\"][valImport=\"true\"]`\n        )\n      ).to.exist;\n    });\n  });\n});\n"]}