{"version":3,"file":"open-scd.test.js","sourceRoot":"","sources":["../../../test/integration/open-scd.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../src/open-scd.js';\nimport { newEmptySCD } from '../../src/schemas.js';\nimport { OpenSCD } from '../../src/open-scd.js';\nimport { newPendingStateEvent } from '../../src/foundation.js';\nimport { OscdWaiter } from '../../src/addons/Waiter.js';\n\ndescribe('open-scd', () => {\n  let element: OpenSCD;\n\n  beforeEach(async () => {\n    localStorage.clear();\n\n    element = await fixture(html`\n      <open-scd></open-scd>\n\n      <link href=\"public/google/fonts/roboto-v27.css\" rel=\"stylesheet\" />\n      <link href=\"public/google/fonts/roboto-mono-v13.css\" rel=\"stylesheet\" />\n      <link\n        href=\"public/google/icons/material-icons-outlined.css\"\n        rel=\"stylesheet\"\n      />\n    `);\n    await element.updateComplete;\n  });\n\n  it('looks like its snapshot', async () => {\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('opens the menu on navigation icon click', async () => {\n    const menu = element.shadowRoot!.querySelector('mwc-drawer')!;\n    expect(menu).property('open').to.be.false;\n    const menuButton = <HTMLElement>(\n      element.shadowRoot!.querySelector(\n        'mwc-icon-button[slot=\"navigationIcon\"]'\n      )\n    );\n    await menuButton.click();\n    expect(menu).property('open').to.be.true;\n  });\n\n  it('opens the log on log icon click', async () => {\n    expect(element.logUI).to.have.property('open', false);\n    await (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button[icon=\"list\"]')!\n    )).click();\n    expect(element.logUI).to.have.property('open', true);\n  });\n\n  it('opens the history on history icon click', async () => {\n    expect(element.historyUI).to.have.property('open', false);\n    await (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button[icon=\"history\"]')!\n    )).click();\n    expect(element.historyUI).to.have.property('open', true);\n  });\n\n  it('opens the log on snackbar button click', async () => {\n    expect(element.logUI).to.have.property('open', false);\n    await element.errorUI.querySelector('mwc-button')!.click();\n    expect(element.logUI).to.have.property('open', true);\n  });\n\n  it('opens the diagnostics on snackbar button click', async () => {\n    expect(element.diagnosticUI).to.have.property('open', false);\n    await element.issueUI.querySelector('mwc-button')!.click();\n    expect(element.diagnosticUI).to.have.property('open', true);\n  });\n\n  /**\n   * @deprecated\n   * Remove this integration test. It's no longer an integration test but an E2E test.\n   */\n  it('renders a progress indicator on `waiting`', async () => {\n    const waiter: OscdWaiter =\n      element.shadowRoot!.querySelector<OscdWaiter>('oscd-waiter')!;\n    const progressBar = waiter.shadowRoot!.querySelector(\n      'mwc-linear-progress[indeterminate]'\n    )!;\n    expect(progressBar).property('closed').to.be.true;\n\n    waiter.waiting = true;\n    await waiter.updateComplete;\n    expect(progressBar).property('closed').to.be.false;\n    waiter.waiting = false;\n    await waiter.updateComplete;\n    expect(progressBar).property('closed').to.be.true;\n  });\n\n  it('revokes `src=\"blob:...\"` URLs after parsing', async () => {\n    const emptyBlobURL = URL.createObjectURL(\n      new Blob(\n        [new XMLSerializer().serializeToString(newEmptySCD('id', '2007B'))],\n        {\n          type: 'application/xml',\n        }\n      )\n    );\n    expect(await fetch(emptyBlobURL)).to.be.ok;\n    element.setAttribute('src', emptyBlobURL);\n    await element.updateComplete;\n    expect(element.src).to.be.a('string').and.equal(emptyBlobURL);\n    expect(async () => await fetch(emptyBlobURL)).to.throw;\n  });\n}).timeout(4000);\n"]}