{"version":3,"file":"lnodetype-wizard.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/templates/lnodetype-wizard.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\nimport fc from 'fast-check';\n\nimport '../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../src/addons/Wizards.js';\n\nimport {\n  ComplexAction,\n  identity,\n  isSimple,\n  Replace,\n  WizardInputElement,\n} from '../../../../src/foundation.js';\nimport { lNodeTypeWizard } from '../../../../src/editors/templates/lnodetype-wizard.js';\nimport { regExp, regexString } from '../../../foundation.js';\n\ndescribe('wizards for LNodeType element', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n  let input: WizardInputElement | undefined;\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n  describe('include an edit wizard that', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/valid2003.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      const wizard = lNodeTypeWizard(\n        <string>identity(doc.querySelector('LNodeType')),\n        doc\n      )!;\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    describe('allows to edit lnClass attribute', () => {\n      beforeEach(() => {\n        input = inputs.find(input => input.label === 'lnClass');\n      });\n\n      it('as wizard input', () => expect(input).to.exist);\n\n      it('for valid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            regexString(regExp.lnClass, 4, 4),\n            async testValue => {\n              input!.value = testValue;\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.true;\n            }\n          )\n        ));\n\n      it('takes the exception LLN0 into account', async () => {\n        input!.value = 'LLN0';\n        await element.requestUpdate();\n        expect(input!.checkValidity()).to.be.true;\n      });\n    });\n\n    describe('allows to edit id attribute', () => {\n      beforeEach(() => {\n        input = inputs.find(input => input.label === 'id');\n      });\n\n      it('as wizard input', () => expect(input).to.exist);\n\n      it('triggers a complex action', () => {\n        input!.value = 'someTestId';\n        primaryAction.click();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n      });\n\n      it('that edits the id attribute of LNodeType', () => {\n        input!.value = 'someTestId';\n        primaryAction.click();\n\n        const complexAction = <ComplexAction>(\n          actionEvent.args[0][0].detail.action\n        );\n        const actions = <Replace[]>complexAction.actions;\n        expect(actions[0].new.element).to.have.attribute('id', 'someTestId');\n      });\n\n      it('that edits all referenced lnType attribute as well', () => {\n        const oldId = input?.value;\n        const numReferences = doc.querySelectorAll(\n          `LN0[lnType=\"${oldId}\"], LN[lnType=\"${oldId}\"]`\n        ).length;\n\n        input!.value = 'someTestId';\n        primaryAction.click();\n\n        const complexAction = <ComplexAction>(\n          actionEvent.args[0][0].detail.action\n        );\n        const actions = <Replace[]>complexAction.actions;\n        expect(actions).to.have.lengthOf(numReferences + 1);\n        actions.shift(); //the first updates the LNodeType itself and has no 'id'\n        for (const action of actions)\n          expect(action.new.element).to.have.attribute('lnType', 'someTestId');\n      });\n    });\n  });\n});\n"]}