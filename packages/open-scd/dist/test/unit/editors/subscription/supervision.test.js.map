{"version":3,"file":"supervision.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/subscription/supervision.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '@open-wc/testing';\n\nimport {\n  instantiateSubscriptionSupervision,\n  removeSubscriptionSupervision,\n} from '../../../../src/editors/subscription/foundation.js';\n\nimport { Create, Delete } from '../../../../src/foundation.js';\n\ndescribe('supervision', () => {\n  let doc: XMLDocument;\n  let controlElement: Element | null;\n  let subscriberIED: Element | null;\n\n  describe('when subscribing to a SampledValueControl', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/editors/LaterBindingSMV-LSVS.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    });\n\n    describe('produces the correct structure where supervision is allowed', () => {\n      beforeEach(() => {\n        controlElement = doc.querySelector(\n          'IED[name=\"SMV_Publisher4\"] SampledValueControl[name=\"voltageOnly\"]'\n        )!;\n      });\n\n      it('does not allow supervision because there is no services defined in the IED', () => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber3\"]')!;\n        const noSupervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(noSupervisionAllowedActions).to.have.length(0);\n      });\n\n      it('does not allow supervision because the DataTypeTemplate>DOType>DA is missing necessary attributes', () => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber4\"]')!;\n        const noSupervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(noSupervisionAllowedActions).to.have.length(0);\n      });\n\n      it('does allow supervision because the first supervision node DOI/DAI[valImport=true/valKind=RO] allows it', () => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber5\"]')!;\n        const supervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(supervisionAllowedActions).to.have.length(3);\n      });\n\n      it('does allow supervision because the first supervision node DOI/DAI[valImport=true/valKind=Conf] allows it', () => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber6\"]')!;\n        const supervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(supervisionAllowedActions).to.have.length(3);\n      });\n\n      it('does allow supervision node use when first existing supervision node has empty Val element', () => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber7\"]')!;\n        const createActionswithEmptyVal: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(createActionswithEmptyVal).to.have.length(1);\n\n        const newValAction: Create = createActionswithEmptyVal[0];\n        const valParent: Node = newValAction.new.parent;\n        const newValElement: Node = (<Create>newValAction).new.element;\n        expect(valParent).to.exist;\n        expect(newValElement).to.exist;\n        expect(valParent.nodeName).to.be.equal('DAI');\n        expect(newValElement.nodeName).to.be.equal('Val');\n        expect(newValElement.textContent).to.not.be.empty;\n      });\n\n      it('allows supervision and an existing LN[class=LSVS] should be used', () => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber2\"]')!;\n        const createActions: Create[] = instantiateSubscriptionSupervision(\n          controlElement!,\n          subscriberIED\n        );\n        expect(createActions).to.have.length(3);\n\n        const newDoiAction: Create = createActions[0];\n        const lnParent: Node = newDoiAction.new.parent;\n        const newDoiElement: Node = (<Create>newDoiAction).new.element;\n        expect(lnParent).to.exist;\n        expect(newDoiElement).to.exist;\n        expect(lnParent.nodeName).to.be.equal('LN');\n        expect(newDoiElement.nodeName).to.be.equal('DOI');\n\n        const newDaiAction: Create = createActions[1];\n        const daiParent: Node = newDaiAction.new.parent;\n        const newDaiElement: Node = (<Create>newDaiAction).new.element;\n        expect(daiParent).to.exist;\n        expect(newDaiElement).to.exist;\n        expect(daiParent.nodeName).to.be.equal('DOI');\n        expect(newDaiElement.nodeName).to.be.equal('DAI');\n\n        const newValAction: Create = createActions[2];\n        const valParent: Node = newValAction.new.parent;\n        const newValElement: Node = (<Create>newValAction).new.element;\n        expect(valParent).to.exist;\n        expect(newValElement).to.exist;\n        expect(valParent.nodeName).to.be.equal('DAI');\n        expect(newValElement.nodeName).to.be.equal('Val');\n        expect(newValElement.textContent).to.not.be.empty;\n      });\n\n      it('allows supervision and an a new LN[class=LSVS] should be created as well', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"SMV_Publisher3\"] SampledValueControl[name=\"fullSmv\"]'\n        )!;\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber\"]')!;\n        const actionsWithNewLn: Create[] = instantiateSubscriptionSupervision(\n          controlElement,\n          subscriberIED\n        );\n        expect(actionsWithNewLn).to.have.length(4);\n\n        const newLnAction: Create = actionsWithNewLn[0];\n        const lDeviceParent: Node = newLnAction.new.parent;\n        const newLnElement: Node = (<Create>newLnAction).new.element;\n        expect(lDeviceParent).to.exist;\n        expect(newLnElement).to.exist;\n        expect(lDeviceParent.nodeName).to.be.equal('LDevice');\n        expect(newLnElement.nodeName).to.be.equal('LN');\n\n        const newDoiAction: Create = actionsWithNewLn[1];\n        const lnParent: Node = newDoiAction.new.parent;\n        const newDoiElement: Node = (<Create>newDoiAction).new.element;\n        expect(lnParent).to.exist;\n        expect(newDoiElement).to.exist;\n        expect(lnParent.nodeName).to.be.equal('LN');\n        expect(newDoiElement.nodeName).to.be.equal('DOI');\n\n        const newDaiAction: Create = actionsWithNewLn[2];\n        const daiParent: Node = newDaiAction.new.parent;\n        const newDaiElement: Node = (<Create>newDaiAction).new.element;\n        expect(daiParent).to.exist;\n        expect(newDaiElement).to.exist;\n        expect(daiParent.nodeName).to.be.equal('DOI');\n        expect(newDaiElement.nodeName).to.be.equal('DAI');\n\n        const newValAction: Create = actionsWithNewLn[3];\n        const valParent: Node = newValAction.new.parent;\n        const newValElement: Node = (<Create>newValAction).new.element;\n        expect(valParent).to.exist;\n        expect(newValElement).to.exist;\n        expect(valParent.nodeName).to.be.equal('DAI');\n        expect(newValElement.nodeName).to.be.equal('Val');\n        expect(newValElement.textContent).to.not.be.empty;\n      });\n    });\n\n    describe('removes the correct elements when supervision is removed', () => {\n      beforeEach(() => {\n        subscriberIED = doc.querySelector('IED[name=\"SMV_Subscriber\"]');\n      });\n      it('allows removing supervision in a vendor-created LN', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"SMV_Publisher2\"] SampledValueControl[name=\"fullSmv\"]'\n        )!;\n        const removeActions: Delete[] = removeSubscriptionSupervision(\n          controlElement,\n          subscriberIED!\n        );\n        expect(removeActions).to.have.length(1);\n        const removeAction: Delete = removeActions[0];\n        const parentElement: Node = removeAction.old.parent;\n        const element: Node = removeAction.old.element;\n        expect(parentElement).to.exist;\n        expect(element).to.exist;\n        expect(parentElement.nodeName).to.be.equal('LN');\n        expect(element.nodeName).to.be.equal('DOI');\n      });\n      it('allows removing supervision in an OpenSCD-created LN', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"SMV_Publisher2\"] SampledValueControl[name=\"voltageOnly\"]'\n        )!;\n        const removeActionsWithRemovedLn: Delete[] =\n          removeSubscriptionSupervision(controlElement, subscriberIED!);\n        expect(removeActionsWithRemovedLn).to.have.length(1);\n        const removeLnAction: Delete = removeActionsWithRemovedLn[0];\n        const lnParent: Node = removeLnAction.old.parent;\n        const lnElement: Node = removeLnAction.old.element;\n        expect(lnParent).to.exist;\n        expect(lnElement).to.exist;\n        expect(lnParent.nodeName).to.be.equal('LDevice');\n        expect(lnElement.nodeName).to.be.equal('LN');\n      });\n    });\n  });\n\n  describe('when subscribing to a GSEControl', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/editors/LaterBindingGOOSE-LGOS.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    });\n\n    describe('produces the correct structure where supervision is allowed', () => {\n      beforeEach(() => {\n        controlElement = doc.querySelector(\n          'IED[name=\"GOOSE_Publisher2\"] GSEControl[name=\"GOOSE1\"]'\n        )!;\n      });\n\n      it('does not allow supervision because there is no services defined in the IED', () => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber\"]')!;\n        const noSupervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(noSupervisionAllowedActions).to.have.length(0);\n      });\n\n      it('does not allow supervision because the DataTypeTemplate>DOType>DA is missing necessary attributes ', () => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber4\"]')!;\n        const noSupervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(noSupervisionAllowedActions).to.have.length(0);\n      });\n\n      it('does allow supervision because the first supervision node DOI/DAI[valImport=true/valKind=RO] allows it', () => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber5\"]')!;\n        const supervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(supervisionAllowedActions).to.have.length(3);\n      });\n\n      it('does allow supervision because the first supervision node DOI/DAI[valImport=true/valKind=Conf] allows it', () => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber6\"]')!;\n        const supervisionAllowedActions: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(supervisionAllowedActions).to.have.length(3);\n      });\n\n      it('does allow supervision node use when first existing supervision node has empty Val element', () => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber7\"]')!;\n        const createActionswithEmptyVal: Create[] =\n          instantiateSubscriptionSupervision(controlElement!, subscriberIED);\n        expect(createActionswithEmptyVal).to.have.length(1);\n\n        const newValAction: Create = createActionswithEmptyVal[0];\n        const valParent: Node = (<Create>newValAction).new.parent;\n        const newValElement: Node = (<Create>newValAction).new.element;\n        expect(valParent).to.exist;\n        expect(newValElement).to.exist;\n        expect(valParent.nodeName).to.be.equal('DAI');\n        expect(newValElement.nodeName).to.be.equal('Val');\n        expect(newValElement.textContent).to.not.be.empty;\n      });\n\n      it('allows supervision and an existing LN[class=LGOS] should be used', () => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber2\"]')!;\n        const createActions: Create[] = instantiateSubscriptionSupervision(\n          controlElement!,\n          subscriberIED\n        );\n        expect(createActions).to.have.length(3);\n\n        const newDoiAction: Create = createActions[0];\n        const lnParent: Node = newDoiAction.new.parent;\n        const newDoiElement: Node = (<Create>newDoiAction).new.element;\n        expect(lnParent).to.exist;\n        expect(newDoiElement).to.exist;\n        expect(lnParent.nodeName).to.be.equal('LN');\n        expect(newDoiElement.nodeName).to.be.equal('DOI');\n\n        const newDaiAction: Create = createActions[1];\n        const daiParent: Node = newDaiAction.new.parent;\n        const newDaiElement: Node = (<Create>newDaiAction).new.element;\n        expect(daiParent).to.exist;\n        expect(newDaiElement).to.exist;\n        expect(daiParent.nodeName).to.be.equal('DOI');\n        expect(newDaiElement.nodeName).to.be.equal('DAI');\n\n        const newValAction: Create = createActions[2];\n        const valParent: Node = newValAction.new.parent;\n        const newValElement: Node = (<Create>newValAction).new.element;\n        expect(valParent).to.exist;\n        expect(newValElement).to.exist;\n        expect(valParent.nodeName).to.be.equal('DAI');\n        expect(newValElement.nodeName).to.be.equal('Val');\n        expect(newValElement.textContent).to.not.be.empty;\n      });\n\n      it('allows supervision and an a new LN[class=LGOS] should be created as well', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"GOOSE_Publisher2\"] GSEControl[name=\"GOOSE1\"]'\n        )!;\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber1\"]')!;\n\n        const actionsWithNewLN: Create[] = instantiateSubscriptionSupervision(\n          controlElement,\n          subscriberIED\n        );\n        expect(actionsWithNewLN).to.have.length(4);\n\n        const newLnAction: Create = actionsWithNewLN[0];\n        const lDeviceParent: Node = newLnAction.new.parent;\n        const newLnElement: Node = (<Create>newLnAction).new.element;\n        expect(lDeviceParent).to.exist;\n        expect(newLnElement).to.exist;\n        expect(lDeviceParent.nodeName).to.be.equal('LDevice');\n        expect(newLnElement.nodeName).to.be.equal('LN');\n\n        const newDoiAction: Create = actionsWithNewLN[1];\n        const lnParent: Node = newDoiAction.new.parent;\n        const newDoiElement: Node = (<Create>newDoiAction).new.element;\n        expect(lnParent).to.exist;\n        expect(newDoiElement).to.exist;\n        expect(lnParent.nodeName).to.be.equal('LN');\n        expect(newDoiElement.nodeName).to.be.equal('DOI');\n\n        const newDaiAction: Create = actionsWithNewLN[2];\n        const daiParent: Node = newDaiAction.new.parent;\n        const newDaiElement: Node = (<Create>newDaiAction).new.element;\n        expect(daiParent).to.exist;\n        expect(newDaiElement).to.exist;\n        expect(daiParent.nodeName).to.be.equal('DOI');\n        expect(newDaiElement.nodeName).to.be.equal('DAI');\n\n        const newValAction: Create = actionsWithNewLN[3];\n        const valParent: Node = newValAction.new.parent;\n        const newValElement: Node = (<Create>newValAction).new.element;\n        expect(valParent).to.exist;\n        expect(newValElement).to.exist;\n        expect(valParent.nodeName).to.be.equal('DAI');\n        expect(newValElement.nodeName).to.be.equal('Val');\n        expect(newValElement.textContent).to.not.be.empty;\n      });\n    });\n\n    describe('removes the correct elements when supervision is removed', () => {\n      beforeEach(() => {\n        subscriberIED = doc.querySelector('IED[name=\"GOOSE_Subscriber1\"]')!;\n      });\n      it('allows removing supervision in a vendor-created LN', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"GOOSE_Publisher\"] GSEControl[name=\"GOOSE2\"]'\n        )!;\n        const removeActions: Delete[] = removeSubscriptionSupervision(\n          controlElement,\n          subscriberIED!\n        );\n        expect(removeActions).to.have.length(1);\n        const removeAction: Delete = removeActions[0];\n        const parentElement: Node = removeAction.old.parent;\n        const element: Node = removeAction.old.element;\n        expect(parentElement).to.exist;\n        expect(element).to.exist;\n        expect(parentElement.nodeName).to.be.equal('LN');\n        expect(element.nodeName).to.be.equal('DOI');\n      });\n      it('allows removing supervision in an OpenSCD-created LN', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"GOOSE_Publisher\"] GSEControl[name=\"GOOSE1\"]'\n        )!;\n        const removeActionsWithRemovedLn: Delete[] =\n          removeSubscriptionSupervision(controlElement, subscriberIED!);\n        expect(removeActionsWithRemovedLn).to.have.length(1);\n        const removeLnAction: Delete = removeActionsWithRemovedLn[0];\n        const lnParent: Node = removeLnAction.old.parent;\n        const lnElement: Node = removeLnAction.old.element;\n        expect(lnParent).to.exist;\n        expect(lnElement).to.exist;\n        expect(lnParent.nodeName).to.be.equal('LDevice');\n        expect(lnElement.nodeName).to.be.equal('LN');\n      });\n      it('does not allow removing supervision because other data attributes are still using it', () => {\n        controlElement = doc.querySelector(\n          'IED[name=\"GOOSE_Publisher2\"] GSEControl[name=\"GOOSE1\"]'\n        )!;\n        const removeActions: Delete[] = removeSubscriptionSupervision(\n          controlElement,\n          subscriberIED!\n        );\n        expect(removeActions).to.have.length(0);\n      });\n    });\n  });\n});\n"]}