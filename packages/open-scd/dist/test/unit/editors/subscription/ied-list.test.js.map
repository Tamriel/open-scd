{"version":3,"file":"ied-list.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/subscription/ied-list.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAY,GAAG,EAAE,MAAM,OAAO,CAAC;AAEtC,OAAO,kDAAkD,CAAC;AAG1D,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,IAAI,OAAgB,CAAC;IACrB,IAAI,QAAqB,CAAC;IAE1B,IAAI,WAAqB,CAAC;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,QAAQ,GAAG,MAAM,KAAK,CAAC,iCAAiC,CAAC;aACtD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAExE,WAAW,GAAG,GAAG,EAAE,CAAC;QACpB,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAEnD,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA;aACnB,QAAQ;iBACJ,CAAC,CAAC;IACjB,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;QACrE,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,qDAAqD,EAAE,KAAK,IAAI,EAAE;QACnE,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,uBAAuB,CAAC,CAAC;QACrD,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,2CAA2C,EAAE,GAAG,EAAE;QACnD,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC;IAC5D,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;QACxE,WAAW,CAAC,YAAY,EAAE,CAAC;QAE3B,MAAM,QAAQ,GAAG,KAAK,CAAC,IAAI,CACzB,OAAO,CAAC,UAAU,EAAE,gBAAgB,CAAC,eAAe,CAAC,IAAI,EAAE,CAC5D,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE/C,QAAS,CAAC,KAAK,EAAE,CAAC;QAChC,MAAM,OAAO,CAAC,cAAc,CAAC;QAE7B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAC9C,QAAQ,CAAC,aAAa,CAAC,kBAAkB,CAAC,CAC3C,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../../src/editors/subscription/ied-list.js';\nimport { IedList } from '../../../../src/editors/subscription/ied-list.js';\n\ndescribe('ied-list', () => {\n  let element: IedList;\n  let validSCL: XMLDocument;\n\n  let selectEvent: SinonSpy;\n\n  beforeEach(async () => {\n    validSCL = await fetch('/test/testfiles/valid2007B4.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    selectEvent = spy();\n    window.addEventListener('ied-select', selectEvent);\n\n    element = await fixture(html`<ied-list\n      .doc=${validSCL}\n    ></ied-list>`);\n  });\n\n  it('looks like the latest snapshot with a document loaded', async () => {\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('looks like the latest snapshot without a doc loaded', async () => {\n    element = await fixture(html`<ied-list></ied-list>`);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('sends a newIEDSelectEvent on first update', () => {\n    expect(selectEvent).to.have.be.calledOnce;\n    expect(selectEvent.args[0][0].detail.ied).to.be.undefined;\n  });\n\n  it('triggers a newIEDSelectEvent when a list item is clicked', async () => {\n    selectEvent.resetHistory();\n\n    const listItem = Array.from(\n      element.shadowRoot?.querySelectorAll('mwc-list-item') ?? []\n    ).filter(listItem => listItem.innerHTML.includes('IED2'))[0];\n\n    (<HTMLElement>listItem).click();\n    await element.updateComplete;\n\n    expect(selectEvent).to.have.be.calledOnce;\n    expect(selectEvent.args[0][0].detail.ied).to.eql(\n      validSCL.querySelector('IED[name=\"IED2\"]')\n    );\n  });\n});\n"]}