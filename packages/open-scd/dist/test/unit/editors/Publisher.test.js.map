{"version":3,"file":"Publisher.test.js","sourceRoot":"","sources":["../../../../test/unit/editors/Publisher.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,SAAS,MAAM,mCAAmC,CAAC;AAE1D,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;IAChC,cAAc,CAAC,MAAM,CAAC,kBAAkB,EAAE,SAAS,CAAC,CAAC;IAErD,IAAI,OAAkB,CAAC;IAEvB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,uCAAuC,CAAC,CAAC;IACvE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE,CAC1D,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;IAEtD,EAAE,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;QACjF,OAAO;aACJ,UAAW,CAAC,aAAa,CAAc,2BAA2B,CAAE;aACpE,KAAK,EAAE,CAAC;QAEX,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAE9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gFAAgF,EAAE,KAAK,IAAI,EAAE;QAC9F,OAAO;aACJ,UAAW,CAAC,aAAa,CACxB,iCAAiC,CACjC;aACD,KAAK,EAAE,CAAC;QAEX,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAE9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;QAC5E,OAAO;aACJ,UAAW,CAAC,aAAa,CAAc,4BAA4B,CAAE;aACrE,KAAK,EAAE,CAAC;QAEX,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAE9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport Publisher from '../../../src/editors/Publisher.js';\n\ndescribe('Publisher plugin', () => {\n  customElements.define('publisher-plugin', Publisher);\n\n  let element: Publisher;\n\n  beforeEach(async () => {\n    element = await fixture(html`<publisher-plugin></publisher-plugin>`);\n  });\n\n  it('per default looks like the latest snapshot', async () =>\n    await expect(element).shadowDom.to.equalSnapshot());\n\n  it('displays report-control-editor with selected Report publisherType', async () => {\n    element\n      .shadowRoot!.querySelector<HTMLElement>('mwc-radio[value=\"Report\"]')!\n      .click();\n\n    await element.requestUpdate();\n\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('displays sampled-value-control-editor with selected SampledValue publisherType', async () => {\n    element\n      .shadowRoot!.querySelector<HTMLElement>(\n        'mwc-radio[value=\"SampledValue\"]'\n      )!\n      .click();\n\n    await element.requestUpdate();\n\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('displays data-set-editor with selected DataSet publisherType', async () => {\n    element\n      .shadowRoot!.querySelector<HTMLElement>('mwc-radio[value=\"DataSet\"]')!\n      .click();\n\n    await element.requestUpdate();\n\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n});\n"]}