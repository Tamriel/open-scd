{"version":3,"file":"ln-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/ied/ln-container.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/ied/ln-container.js';\nimport { LNContainer } from '../../../../src/editors/ied/ln-container.js';\nimport { initializeNsdoc } from '../../../../src/foundation/nsdoc.js';\n\ndescribe('ln-container', async () => {\n  let element: LNContainer;\n  let validSCL: XMLDocument;\n\n  const nsdoc = await initializeNsdoc();\n\n  beforeEach(async () => {\n    validSCL = await fetch('/test/testfiles/editors/iedEditorWithIEDs.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  it('looks like the latest snapshot with a LN0 element.', async () => {\n    element = await fixture(html` <ln-container\n      .element=${validSCL.querySelector(\n        'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN0[lnClass=\"LLN0\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></ln-container>`);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('looks like the latest snapshot with a LN0 element and child elements are toggled.', async () => {\n    element = await fixture(html` <ln-container\n      .element=${validSCL.querySelector(\n        'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN0[lnClass=\"LLN0\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></ln-container>`);\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    await expect(element).shadowDom.to.equalSnapshot();\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    expect(element.shadowRoot!.querySelectorAll('do-container').length).to.eql(\n      0\n    );\n  });\n\n  it('looks like the latest snapshot with a LN element.', async () => {\n    element = await fixture(html` <ln-container\n      .element=${validSCL.querySelector(\n        'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnClass=\"XCBR\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></ln-container>`);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('looks like the latest snapshot with a LN element and child elements are toggled.', async () => {\n    element = await fixture(html` <ln-container\n      .element=${validSCL.querySelector(\n        'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnClass=\"XCBR\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></ln-container>`);\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    await expect(element).shadowDom.to.equalSnapshot();\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    expect(element.shadowRoot!.querySelectorAll('do-container').length).to.eql(\n      0\n    );\n  });\n\n  describe('has a getDOElements function ', () => {\n    it('which return the DO containers underneath a given LN.', async () => {\n      element = await fixture(html` <ln-container\n        .element=${validSCL.querySelector(\n          'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"Disconnectors\"] > LN[lnClass=\"CILO\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></ln-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.not.be.empty;\n      expect(nestedDOs!.length).to.eql(4);\n      expect(nestedDOs![1].getAttribute('name')).to.eql('NamPlt');\n    });\n\n    it('which return the DO containers underneath a given LN0.', async () => {\n      element = await fixture(html` <ln-container\n        .element=${validSCL.querySelector(\n          'IED[name=\"IED2\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN0[lnClass=\"LLN0\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></ln-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.not.be.empty;\n      expect(nestedDOs!.length).to.eql(6);\n      expect(nestedDOs![4].getAttribute('name')).to.eql('Health');\n    });\n\n    it(\"which return an empty array if a LN doesn\\t have child DO's.\", async () => {\n      element = await fixture(html` <ln-container\n        .element=${validSCL.querySelector(\n          'IED[name=\"IED2\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnClass=\"tHarde\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></ln-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.be.empty;\n    });\n\n    it(\"which return an empty array if the LNodeType of a LN doesn't exist.\", async () => {\n      element = await fixture(html` <ln-container\n        .element=${validSCL.querySelector('LN[lnType=\"nonExistingLnType\"]')}\n        .nsdoc=${nsdoc}\n      ></ln-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.be.empty;\n    });\n  });\n\n  describe('has a getInstanceElement function ', () => {\n    beforeEach(async () => {\n      element = await fixture(html` <ln-container\n        .element=${validSCL.querySelector(\n          'IED[name=\"IED2\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CBSW\"] > LN[lnClass=\"XCBR\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></ln-container>`);\n    });\n\n    it(\"which returns a DOI for a LN if it's available.\", async () => {\n      const dO = validSCL.querySelector(\n        'DataTypeTemplates > LNodeType[id=\"Dummy.XCBR1\"] > DO[name=\"Pos\"]'\n      );\n      const instance = element['getInstanceElement'](dO!)!;\n      expect(instance).to.not.be.null;\n      expect(instance.tagName).to.eql('DOI');\n      expect(instance.getAttribute('name')).to.eql('Pos');\n    });\n\n    it('which returns null if no DOI is available.', async () => {\n      const dO = validSCL.querySelector(\n        'DataTypeTemplates > LNodeType[id=\"Dummy.XCBR1\"] > DO[name=\"Loc\"]'\n      );\n      expect(element['getInstanceElement'](dO!)!).to.be.null;\n    });\n  });\n});\n"]}