{"version":3,"file":"server-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/ied/server-container.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/ied/server-container.js';\nimport { ServerContainer } from '../../../../src/editors/ied/server-container.js';\n\nimport { getLNClasses } from './test-support.js';\n\ndescribe('server-container', () => {\n  let element: ServerContainer;\n  let serverElement: Element;\n  let doc: XMLDocument;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/editors/iedEditorWithIEDs.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('Server Element with LDevice Elements', () => {\n    let selectedLNClasses: string[] = [];\n\n    beforeEach(async () => {\n      serverElement = doc.querySelector(\n        'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server'\n      )!;\n    });\n\n    describe('and all LN Elements of the LDevice Element displayed', () => {\n      beforeEach(async () => {\n        selectedLNClasses = getLNClasses(serverElement);\n\n        element = await fixture(html` <server-container\n          .element=${serverElement}\n          .selectedLNClasses=\"${selectedLNClasses}\"\n        ></server-container>`);\n      });\n\n      it('expect the correct number of LDevice Elements returned', () => {\n        expect(element['lDeviceElements'].length).to.be.equal(2);\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element).shadowDom.to.equalSnapshot();\n      });\n    });\n\n    describe('and some LN Elements displayed', () => {\n      beforeEach(async () => {\n        selectedLNClasses = getLNClasses(serverElement).slice(1, 2);\n\n        element = await fixture(html` <server-container\n          .element=${serverElement}\n          .selectedLNClasses=\"${selectedLNClasses}\"\n        ></server-container>`);\n      });\n\n      it('expect the correct number of LN Elements returned', () => {\n        expect(element['lDeviceElements'].length).to.be.equal(1);\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element).shadowDom.to.equalSnapshot();\n      });\n    });\n\n    describe('and no LN Elements displayed', () => {\n      beforeEach(async () => {\n        selectedLNClasses = [];\n\n        element = await fixture(html` <server-container\n          .element=${serverElement}\n          .selectedLNClasses=\"${selectedLNClasses}\"\n        ></server-container>`);\n      });\n\n      it('expect the correct number of LDevice Elements returned', () => {\n        expect(element['lDeviceElements'].length).to.be.equal(0);\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element).shadowDom.to.equalSnapshot();\n      });\n    });\n  });\n\n  describe('Server Element without LDevice Element', () => {\n    beforeEach(async () => {\n      serverElement = doc.querySelector(\n        'IED[name=\"IED5\"] > AccessPoint[name=\"P1\"] > Server'\n      )!;\n\n      element = await fixture(html` <server-container\n        .element=${serverElement}\n        .selectedLNClasses=\"${getLNClasses(serverElement)}\"\n      ></server-container>`);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}