{"version":3,"file":"do-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/ied/do-container.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/ied/do-container.js';\nimport { DOContainer } from '../../../../src/editors/ied/do-container.js';\nimport { initializeNsdoc } from '../../../../src/foundation/nsdoc.js';\n\ndescribe('do-container', async () => {\n  let element: DOContainer;\n  let validSCL: XMLDocument;\n\n  const nsdoc = await initializeNsdoc();\n\n  beforeEach(async () => {\n    validSCL = await fetch('/test/testfiles/editors/iedEditorWithIEDs.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  it('looks like the latest snapshot with a DO element.', async () => {\n    element = await fixture(html`<do-container\n      .element=${validSCL.querySelector(\n        'DataTypeTemplates > LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></do-container>`);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('looks like the latest snapshot with a DO element and child elements are toggled.', async () => {\n    element = await fixture(html`<do-container\n      .element=${validSCL.querySelector(\n        'DataTypeTemplates > LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Mod\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></do-container>`);\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    await expect(element).shadowDom.to.equalSnapshot();\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    expect(element.shadowRoot!.querySelectorAll('do-container').length).to.eql(\n      0\n    );\n  });\n\n  it('looks like the latest snapshot with a SDO element.', async () => {\n    element = await fixture(html`<do-container\n      .element=${validSCL.querySelector(\n        'DataTypeTemplates > DOType[id=\"Dummy.LLN0.ExtendedMod\"] > SDO[name=\"someSdo\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></do-container>`);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('looks like the latest snapshot with a SDO element and child elements are toggled.', async () => {\n    element = await fixture(html`<do-container\n      .element=${validSCL.querySelector(\n        'DataTypeTemplates > DOType[id=\"Dummy.LLN0.ExtendedMod\"] > SDO[name=\"someSdo\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></do-container>`);\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    await expect(element).shadowDom.to.equalSnapshot();\n\n    (<HTMLElement>(\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n    )).click();\n    await element.requestUpdate();\n    await element.updateComplete;\n    expect(element.shadowRoot!.querySelectorAll('do-container').length).to.eql(\n      0\n    );\n  });\n\n  describe('has a getDOElements function ', () => {\n    it('which return the (S)DO containers underneath a given DO.', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"ExtendedMod\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.not.be.empty;\n      expect(nestedDOs!.length).to.eql(2);\n      expect(nestedDOs![1].getAttribute('name')).to.eql('someOtherSdo');\n    });\n\n    it('which return the (S)DO containers underneath a given SDO.', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LLN0.ExtendedMod\"] > SDO[name=\"someOtherSdo\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.not.be.empty;\n      expect(nestedDOs!.length).to.eql(1);\n      expect(nestedDOs![0].getAttribute('name')).to.eql('anotherSdo');\n    });\n\n    it('which return an empty array if the DoType cannot be found', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LLN0.Mod\"] > SDO[name=\"sdoName2\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.be.empty;\n    });\n\n    it(\"which return an empty array if a DO doesn\\t have child (S)DO's.\", async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"someSdoType\"] > SDO[name=\"anotherSdo\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.be.empty;\n    });\n  });\n\n  describe('has a getDAElements function ', () => {\n    it('which return the DA containers underneath a given DO.', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"ExtendedMod\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDAElements']();\n      expect(nestedDOs).to.not.be.empty;\n      expect(nestedDOs!.length).to.eql(14);\n      expect(nestedDOs![2].getAttribute('name')).to.eql('t');\n    });\n\n    it('which return an empty array if the DoType cannot be found', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LLN0.Mod\"] > SDO[name=\"sdoName2\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDAElements']();\n      expect(nestedDOs).to.be.empty;\n    });\n\n    it(\"which return an empty array if a DO doesn\\t have child DA's.\", async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LLN0.Mod\"] > SDO[name=\"sdoName3\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const nestedDOs = element['getDOElements']();\n      expect(nestedDOs).to.be.empty;\n    });\n  });\n\n  describe('has a getInstanceDOElement function ', () => {\n    it('which return a DOI when a DO has a valid instance element.', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > LNodeType[id=\"Dummy.CSWIwithoutCtlModel\"] > DO[name=\"Pos\"]'\n        )}\n        .instanceElement=${validSCL.querySelector(\n          'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnClass=\"CSWI\"] > DOI[name=\"Pos\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const sdo = validSCL.querySelector(\n        'DataTypeTemplates > DOType[id=\"Dummy.CSWI.Pos2\"] > SDO[name=\"anotherPosDo\"]'\n      );\n\n      const doi = element['getInstanceDOElement'](sdo!);\n      expect(doi).to.not.be.null;\n      expect(doi?.tagName).to.eql('SDI');\n      expect(doi?.getAttribute('name')).to.eql('anotherPosDo');\n    });\n\n    it(\"which returns null if there's no SDI available within a DOI.\", async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > LNodeType[id=\"Dummy.CSWIwithoutCtlModel\"] > DO[name=\"Pos\"]'\n        )}\n        .instanceElement=${validSCL.querySelector(\n          'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnClass=\"CSWI\"] > DOI[name=\"Pos\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const sdo = validSCL.querySelector(\n        'DataTypeTemplates > DOType[id=\"Dummy.CSWI.Pos2\"] > SDO[name=\"someQualityThing\"]'\n      );\n\n      const doi = element['getInstanceDOElement'](sdo!);\n      expect(doi).to.be.null;\n    });\n\n    it('which returns null if no root DOI is available.', async () => {\n      element = await fixture(html`<do-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > LNodeType[id=\"Dummy.CSWIwithoutCtlModel\"] > DO[name=\"Pos\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></do-container>`);\n\n      const sdo = validSCL.querySelector(\n        'DataTypeTemplates > DOType[id=\"Dummy.CSWI.Pos2\"] > SDO[name=\"someQualityThing\"]'\n      );\n\n      const doi = element['getInstanceDOElement'](sdo!);\n      expect(doi).to.be.null;\n    });\n  });\n});\n"]}