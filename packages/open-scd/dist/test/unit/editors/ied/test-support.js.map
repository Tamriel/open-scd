{"version":3,"file":"test-support.js","sourceRoot":"","sources":["../../../../../test/unit/editors/ied/test-support.ts"],"names":[],"mappings":"AAAA,MAAM,UAAU,kBAAkB,CAAC,SAAkB;IACnD,MAAM,gBAAgB,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACxD,MAAM,SAAS,GAAG,SAAS;SACxB,OAAO,CAAC,KAAK,CAAE;SACf,aAAa,CACZ,eAAe,gBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM;QACvD,cAAc,gBAAiB,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CACxD,CAAC;IAEL,MAAM,SAAS,GAAc,EAAE,CAAC;IAChC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1B,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,CAAE,CAAC,CAAC;IAC9C,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAE,CAAC,CAAC;IAC7C,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,aAAa,CAAE,CAAC,CAAC;IAClD,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAE,CAAC,CAAC;IAC1C,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,kBAAkB,CAChC,SAAkB,EAClB,IAAY;IAEZ,MAAM,SAAS,GAAG,SAAS;SACxB,OAAO,CAAC,KAAK,CAAE;SACf,aAAa,CAAC,YAAY,IAAI,IAAI,CAAE,CAAC;IAExC,MAAM,SAAS,GAAG,kBAAkB,CAAC,SAAS,CAAC,CAAC;IAChD,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1B,OAAO,SAAS,CAAC;AACnB,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,OAAgB;IAC3C,OAAO,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAC;SACnD,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;SAC/C,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAa,CAAC;AACxC,CAAC","sourcesContent":["export function getAncestorsFromDO(doElement: Element): Element[] {\n  const lNodeTypeElement = doElement.closest('LNodeType');\n  const lnElement = doElement\n    .closest('SCL')!\n    .querySelector(\n      `LN0[lnType=\"${lNodeTypeElement!.getAttribute('id')}\"], ` +\n        `LN[lnType=\"${lNodeTypeElement!.getAttribute('id')}\"]`\n    )!;\n\n  const ancestors: Element[] = [];\n  ancestors.push(lnElement);\n  ancestors.push(lnElement.closest('LDevice')!);\n  ancestors.push(lnElement.closest('Server')!);\n  ancestors.push(lnElement.closest('AccessPoint')!);\n  ancestors.push(lnElement.closest('IED')!);\n  return ancestors;\n}\n\nexport function getAncestorsFromDA(\n  daElement: Element,\n  type: string\n): Element[] {\n  const doElement = daElement\n    .closest('SCL')!\n    .querySelector(`DO[type=\"${type}\"]`)!;\n\n  const ancestors = getAncestorsFromDO(doElement);\n  ancestors.push(doElement);\n  return ancestors;\n}\n\nexport function getLNClasses(element: Element): string[] {\n  return Array.from(element.querySelectorAll('LN0, LN'))\n    .map(element => element.getAttribute('lnClass'))\n    .filter(value => value) as string[];\n}\n"]}