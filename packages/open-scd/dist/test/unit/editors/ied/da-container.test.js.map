{"version":3,"file":"da-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/ied/da-container.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/ied/da-container.js';\n\nimport { DAContainer } from '../../../../src/editors/ied/da-container.js';\nimport { initializeNsdoc } from '../../../../src/foundation/nsdoc.js';\nimport { TemplateResult } from 'lit-element';\n\ndescribe('da-container', async () => {\n  let element: DAContainer;\n  let validSCL: XMLDocument;\n\n  const nsdoc = await initializeNsdoc();\n\n  beforeEach(async () => {\n    validSCL = await fetch('/test/testfiles/editors/iedEditorWithIEDs.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('with a DA element', () => {\n    beforeEach(async () => {\n      element = await fixture(html`<da-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.XCBR1.Pos\"] > DA[name=\"ctlModel\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></da-container>`);\n    });\n\n    it('check the values returned for the header', () => {\n      const header = element['header']();\n      expect(header.values.length).to.be.equals(3);\n      expect(header.values[0]).to.be.equals('ctlModel');\n      expect(header.values[1]).to.be.equals('Enum');\n      expect((<TemplateResult>header.values[2]).values.length).to.be.equals(1);\n      expect((<TemplateResult>header.values[2]).values[0]).to.be.equals('CF');\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('with a BDA element', () => {\n    beforeEach(async () => {\n      element = await fixture(html`<da-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DAType[id=\"Dummy.LPHD1.Sim.SBOw\"] > BDA[name=\"ctlVal\"]'\n        )}\n        .daParent=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LPHD1.Sim\"] > DA[name=\"SBOw\"]'\n        )}\n        .ancestors=${[\n          validSCL.querySelector(\n            'DataTypeTemplates > DOType[id=\"Dummy.LPHD1.Sim\"] > DA[name=\"SBOw\"]'\n          ),\n        ]}\n        .nsdoc=${nsdoc}\n      ></da-container>`);\n    });\n\n    it('check the values returned for the header', () => {\n      const header = element['header']();\n      expect(header.values.length).to.be.equals(3);\n      expect(header.values[0]).to.be.equals('ctlVal');\n      expect(header.values[1]).to.be.equals('BOOLEAN');\n      expect(header.values[2]).to.be.equals('');\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('with a BDA element having multiple values', () => {\n    beforeEach(async () => {\n      element = await fixture(html`<da-container\n        .element=${validSCL.querySelector(\n          'DAType[id=\"ScaledValueConfig\"] > BDA[name=\"scaleFactor\"]'\n        )}\n        .instanceElement=${validSCL.querySelector(\n          'IED[name=\"IED3\"] DAI[name=\"scaleFactor\"]'\n        )}\n        .daParent=${validSCL.querySelector(\n          'DOType[id=\"DummySAV\"] > DA[name=\"sVC\"]'\n        )}\n        .ancestors=${[\n          validSCL.querySelector('LNodeType[id=\"DummyTCTR\"] > DO[name=\"Amp\"]'),\n          validSCL.querySelector('DOType[id=\"DummySAV\"] > DA[name=\"sVC\"]'),\n        ]}\n        .nsdoc=${nsdoc}\n      ></da-container>`);\n    });\n\n    it('check the values returned for the header', () => {\n      const header = element['header']();\n      expect(header.values.length).to.be.equals(3);\n      expect(header.values[0]).to.be.equals('scaleFactor');\n      expect(header.values[1]).to.be.equals('FLOAT32');\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('with a DA element and child elements are toggled', () => {\n    beforeEach(async () => {\n      element = await fixture(html`<da-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LPHD1.Sim\"] > DA[name=\"SBOw\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></da-container>`);\n\n      (<HTMLElement>(\n        element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n      )).click();\n      await element.requestUpdate();\n      await element.updateComplete;\n    });\n\n    it('when closing the container, no elements found', async () => {\n      (<HTMLElement>(\n        element.shadowRoot!.querySelector('mwc-icon-button-toggle')\n      )).click();\n      await element.requestUpdate();\n      await element.updateComplete;\n      expect(\n        element.shadowRoot!.querySelectorAll('do-container').length\n      ).to.eql(0);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  it('looks like the latest snapshot with a DA element containing and a DAI', async () => {\n    element = await fixture(html`<da-container\n      .element=${validSCL.querySelector(\n        'DataTypeTemplates > DOType[id=\"Dummy.XCBR1.Pos\"] > DA[name=\"ctlModel\"]'\n      )}\n      .instanceElement=${validSCL.querySelector(\n        ':root > IED[name=\"IED2\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnType=\"Dummy.XCBR1\"] > DOI[name=\"Pos\"]> DAI[name=\"ctlModel\"]'\n      )}\n      .nsdoc=${nsdoc}\n    ></da-container>`);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  describe('has a getBDAElements function ', async () => {\n    it('which returns BDA elements if available', async () => {\n      element = await fixture(html`<da-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LPHD1.Sim\"] > DA[name=\"SBOw\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></da-container>`);\n\n      const bdaElements = element['getBDAElements']();\n      expect(bdaElements.length).to.eql(6);\n      expect(bdaElements[4].getAttribute('name')).to.eql('Test');\n    });\n\n    it('which returns no BDA elements if they are not available', async () => {\n      element = await fixture(html`<da-container\n        .element=${validSCL.querySelector(\n          'DataTypeTemplates > DOType[id=\"Dummy.LPHD1.Sim\"] > DA[name=\"SBO\"]'\n        )}\n        .nsdoc=${nsdoc}\n      ></da-container>`);\n\n      const bdaElements = element['getBDAElements']();\n      expect(bdaElements).to.be.empty;\n    });\n  });\n});\n"]}