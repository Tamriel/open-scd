{"version":3,"file":"bay.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/singlelinediagram/wizards/bay.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../../src/addons/Wizards.js';\n\nimport {\n  executeWizardReplaceAction,\n  expectWizardNoUpdateAction,\n  fetchDoc,\n  setWizardTextFieldValue,\n} from '../../../wizards/test-support.js';\n\nimport { WizardTextField } from '../../../../../src/wizard-textfield.js';\nimport { WizardInputElement } from '../../../../../src/foundation.js';\nimport { editBayWizard } from '../../../../../src/editors/singlelinediagram/wizards/bay.js';\nimport { updateNamingAndCoordinatesAction } from '../../../../../src/editors/singlelinediagram/wizards/foundation.js';\n\ndescribe('Wizards for SCL element Bay (X/Y)', () => {\n  let doc: XMLDocument;\n  let bay: Element;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  beforeEach(async () => {\n    doc = await fetchDoc('/test/testfiles/valid2007B4withSubstationXY.scd');\n    bay = doc.querySelector('Bay[name=\"BusBar A\"]')!;\n\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    const wizard = editBayWizard(bay);\n    element.workflow.push(() => wizard);\n    await element.requestUpdate();\n    inputs = Array.from(element.wizardUI.inputs);\n  });\n\n  it('update name should be updated in document', async function () {\n    await setWizardTextFieldValue(<WizardTextField>inputs[0], 'OtherBusBar A');\n\n    const updateAction = executeWizardReplaceAction(\n      updateNamingAndCoordinatesAction(bay),\n      element.wizardUI,\n      inputs\n    );\n    expect(updateAction.old.element).to.have.attribute('name', 'BusBar A');\n    expect(updateAction.new.element).to.have.attribute('name', 'OtherBusBar A');\n  });\n\n  it('update description should be updated in document', async function () {\n    await setWizardTextFieldValue(\n      <WizardTextField>inputs[1],\n      'Some description'\n    );\n\n    const updateAction = executeWizardReplaceAction(\n      updateNamingAndCoordinatesAction(bay),\n      element.wizardUI,\n      inputs\n    );\n    expect(updateAction.old.element).to.not.have.attribute('desc');\n    expect(updateAction.new.element).to.have.attribute(\n      'desc',\n      'Some description'\n    );\n  });\n\n  it('update X-Coordinate should be updated in document', async function () {\n    await setWizardTextFieldValue(<WizardTextField>inputs[2], '4');\n\n    const updateAction = executeWizardReplaceAction(\n      updateNamingAndCoordinatesAction(bay),\n      element.wizardUI,\n      inputs\n    );\n    expect(updateAction.old.element).to.have.attribute('sxy:x', '1');\n    expect(updateAction.new.element).to.have.attribute('sxy:x', '4');\n  });\n\n  it('update Y-Coordinate should be updated in document', async function () {\n    await setWizardTextFieldValue(<WizardTextField>inputs[3], '5');\n\n    const updateAction = executeWizardReplaceAction(\n      updateNamingAndCoordinatesAction(bay),\n      element.wizardUI,\n      inputs\n    );\n    expect(updateAction.old.element).to.have.attribute('sxy:y', '1');\n    expect(updateAction.new.element).to.have.attribute('sxy:y', '5');\n  });\n\n  it('clear Y-Coordinate should be updated in document', async function () {\n    await setWizardTextFieldValue(<WizardTextField>inputs[3], null);\n\n    const updateAction = executeWizardReplaceAction(\n      updateNamingAndCoordinatesAction(bay),\n      element.wizardUI,\n      inputs\n    );\n    expect(updateAction.old.element).to.have.attribute('sxy:y', '1');\n    expect(updateAction.new.element).to.not.have.attribute('sxy:y');\n  });\n\n  it('when no fields changed there will be no update action', async function () {\n    expectWizardNoUpdateAction(\n      updateNamingAndCoordinatesAction(bay),\n      element.wizardUI,\n      inputs\n    );\n  });\n\n  it('looks like the latest snapshot', async () => {\n    await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n  });\n});\n"]}