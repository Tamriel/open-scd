{"version":3,"file":"wizard-library.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/singlelinediagram/wizards/wizard-library.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,EAAC,MAAM,kBAAkB,CAAC;AAGxC,OAAO,EAAC,WAAW,EAAC,MAAM,8CAA8C,CAAC;AACzE,OAAO,EAAC,OAAO,EAAC,MAAM,wEAAwE,CAAC;AAE/F,OAAO,EAAE,0BAA0B,EAAE,MAAM,gDAAgD,CAAC;AAC5F,OAAO,EAAE,kBAAkB,EAAE,MAAM,wCAAwC,CAAC;AAE5E,OAAO,EAAE,aAAa,EAAE,MAAM,6DAA6D,CAAC;AAC5F,OAAO,EAAE,6BAA6B,EAAE,MAAM,6EAA6E,CAAC;AAC5H,OAAO,EAAE,0BAA0B,EAAE,MAAM,0EAA0E,CAAC;AAEtH,QAAQ,CAAC,kCAAkC,EAAE,GAAG,EAAE;IAChD,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;QAC/D,KAAK,MAAM,SAAS,IAAI,OAAO,EAAE;YAC/B,MAAM,CAAC,OAAO,CAAS,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;SACpE;IACH,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;QACpE,KAAK,MAAM,SAAS,IAAI,OAAO,EAAE;YAC/B,MAAM,UAAU,GAAG,OAAO,CAAS,SAAS,CAAC,CAAC,IAAI,CAAC;YACnD,QAAQ,SAAS,EAAE;gBACjB,KAAK,KAAK;oBACR,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;oBAC9C,MAAM;gBACR,KAAK,qBAAqB;oBACxB,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;oBAC9D,MAAM;gBACR,KAAK,kBAAkB;oBACrB,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAC3D,MAAM;gBACR,KAAK,kBAAkB;oBACrB,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;oBAC3D,MAAM;gBACR,KAAK,UAAU;oBACb,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;oBACnD,MAAM;gBACR;oBACE,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC5C,MAAM;aACT;SACF;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import {expect} from \"@open-wc/testing\";\n\nimport {SCLTag} from \"../../../../../src/foundation.js\";\nimport {emptyWizard} from \"../../../../../src/wizards/wizard-library.js\";\nimport {wizards} from \"../../../../../src/editors/singlelinediagram/wizards/wizard-library.js\";\n\nimport { editConnectivityNodeWizard } from \"../../../../../src/wizards/connectivitynode.js\";\nimport { editTerminalWizard } from \"../../../../../src/wizards/terminal.js\";\n\nimport { editBayWizard } from \"../../../../../src/editors/singlelinediagram/wizards/bay.js\";\nimport { editConductingEquipmentWizard } from '../../../../../src/editors/singlelinediagram/wizards/conductingequipment.js';\nimport { editPowerTransformerWizard } from '../../../../../src/editors/singlelinediagram/wizards/powertransformer.js';\n\ndescribe('Wizard Library (X/Y Coordinates)', () => {\n  it('Check that all create wizards are empty wizards', async () => {\n    for (const wizardKey in wizards) {\n      expect(wizards[<SCLTag>wizardKey].create).to.be.equal(emptyWizard);\n    }\n  });\n\n  it('Check that some edit wizards are correct SLD Editors', async () => {\n    for (const wizardKey in wizards) {\n      const editWizard = wizards[<SCLTag>wizardKey].edit;\n      switch (wizardKey) {\n        case \"Bay\":\n          expect(editWizard).to.be.equal(editBayWizard);\n          break;\n        case \"ConductingEquipment\":\n          expect(editWizard).to.be.equal(editConductingEquipmentWizard);\n          break;\n        case \"ConnectivityNode\":\n          expect(editWizard).to.be.equal(editConnectivityNodeWizard);\n          break;\n        case \"PowerTransformer\":\n          expect(editWizard).to.be.equal(editPowerTransformerWizard);\n          break;\n        case \"Terminal\":\n          expect(editWizard).to.be.equal(editTerminalWizard);\n          break;\n        default:\n          expect(editWizard).to.be.equal(emptyWizard);\n          break;\n      }\n    }\n  });\n});\n"]}