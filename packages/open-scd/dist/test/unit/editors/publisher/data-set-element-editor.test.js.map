{"version":3,"file":"data-set-element-editor.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/publisher/data-set-element-editor.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,8DAA8D,CAAC;AAGtE,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,IAAI,GAAgB,CAAC;IACrB,IAAI,OAA6B,CAAC;IAElC,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,GAAG,GAAG,MAAM,KAAK,CAAC,2CAA2C,CAAC;aAC3D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;QAClC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,OAAO,GAAG,GAAG,CAAC,aAAa,CAAC,SAAS,CAAE,CAAC;YAE9C,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA;qBACS,OAAO;oCACQ,CAC7B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE,CAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;QACnC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,OAAO,GAAG,IAAI,CAAC;YAErB,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA;qBACS,OAAO;oCACQ,CAC7B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE,CAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/publisher/data-set-element-editor.js';\nimport { DataSetElementEditor } from '../../../../src/editors/publisher/data-set-element-editor.js';\n\ndescribe('Editor for DataSet element', () => {\n  let doc: XMLDocument;\n  let element: DataSetElementEditor;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/wizards/reportcontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('with valid DataSet', () => {\n    beforeEach(async () => {\n      const dataSet = doc.querySelector('DataSet')!;\n\n      element = await fixture(\n        html`<data-set-element-editor\n          .element=${dataSet}\n        ></data-set-element-editor>`\n      );\n    });\n\n    it('looks like the latest snapshot', async () =>\n      await expect(element).shadowDom.to.equalSnapshot());\n  });\n\n  describe('with nulled DataSet', () => {\n    beforeEach(async () => {\n      const dataSet = null;\n\n      element = await fixture(\n        html`<data-set-element-editor\n          .element=${dataSet}\n        ></data-set-element-editor>`\n      );\n    });\n\n    it('looks like the latest snapshot', async () =>\n      await expect(element).shadowDom.to.equalSnapshot());\n  });\n});\n"]}