{"version":3,"file":"network-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/protocol104/network-container.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAY,GAAG,EAAE,MAAM,OAAO,CAAC;AAEtC,OAAO,0DAA0D,CAAC;AAGlE,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;IACrC,IAAI,OAA4B,CAAC;IACjC,IAAI,QAAqB,CAAC;IAC1B,IAAI,WAAqB,CAAC;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,QAAQ,GAAG,MAAM,KAAK,CAAC,0CAA0C,CAAC;aAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAExE,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,+BAA+B,QAAQ,2BAA2B,CACvE,CAAC;QAEF,WAAW,GAAG,GAAG,EAAE,CAAC;QACpB,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iGAAiG,EAAE,GAAG,EAAE;QACzG,MAAM,WAAW,GAAG,OAAO,CAAC,uBAAuB,CAAC,EAAE,CAAC;QACvD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9D,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAChE,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE;QACvD,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,SAAS,CAAE,CAAC,KAAK,EAAE,CAAC;QACpE,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IAC5E,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../../src/editors/protocol104/network-container.js';\nimport { Network104Container } from '../../../../src/editors/protocol104/network-container.js';\n\ndescribe('network-104-container', () => {\n  let element: Network104Container;\n  let document: XMLDocument;\n  let wizardEvent: SinonSpy;\n\n  beforeEach(async () => {\n    document = await fetch('/test/testfiles/104/valid-subnetwork.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    element = await fixture(\n      html`<network-104-container .doc=${document}></network-104-container>`\n    );\n\n    wizardEvent = spy();\n    window.addEventListener('wizard', wizardEvent);\n  });\n\n  it('looks like the latest snapshot', async () => {\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('getSubNetworkElements will return a list of SubNetwork elements which is alphabetically ordered', () => {\n    const subNetworks = element['getSubNetworkElements']();\n    expect(subNetworks.length).to.be.equal(2);\n    expect(subNetworks[0].getAttribute('name')).to.be.equal('F1');\n    expect(subNetworks[1].getAttribute('name')).to.be.equal('W1');\n  });\n\n  it('has a mwc-fab which calls a create SubNetwork wizard dialog', () => {\n    (<HTMLElement>element.shadowRoot?.querySelector('mwc-fab')).click();\n    expect(wizardEvent).to.have.be.calledOnce;\n    expect(wizardEvent.args[0][0].detail.wizard()[0].title).to.contain('add');\n  });\n});\n"]}