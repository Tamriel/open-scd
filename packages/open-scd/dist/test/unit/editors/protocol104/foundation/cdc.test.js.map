{"version":3,"file":"cdc.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/protocol104/foundation/cdc.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '@open-wc/testing';\nimport {\n  createAddressElements,\n  hasScaleFields,\n  hasUnitMultiplierField,\n} from '../../../../../src/editors/protocol104/foundation/cdc.js';\n\ndescribe('createAddressElements', () => {\n  it('only single address element created without expected value', async () => {\n    const ti = '30';\n\n    const addressElements = createAddressElements(\n      document,\n      ti,\n      false,\n      undefined\n    );\n\n    expect(addressElements.length).to.be.equal(1);\n    expect(addressElements[0].tagName).to.be.equal('Address');\n    expect(addressElements[0].getAttribute('ti')).to.be.equal(ti);\n  });\n\n  it('only two address element created without expected value', async () => {\n    const ti = '30';\n\n    const addressElements = createAddressElements(\n      document,\n      ti,\n      true,\n      undefined\n    );\n\n    expect(addressElements.length).to.be.equal(2);\n    expect(addressElements[0].tagName).to.be.equal('Address');\n    expect(addressElements[0].getAttribute('ti')).to.be.equal(ti);\n    expect(addressElements[1].tagName).to.be.equal('Address');\n    expect(addressElements[1].getAttribute('ti')).to.be.equal(ti);\n    expect(addressElements[1].getAttribute('inverted')).to.be.equal('true');\n  });\n\n  it('only single address element created with expected value', async () => {\n    const ti = '30';\n    const expectedValue = 'ev';\n\n    const addressElements = createAddressElements(\n      document,\n      ti,\n      false,\n      expectedValue\n    );\n\n    expect(addressElements.length).to.be.equal(1);\n    expect(addressElements[0].tagName).to.be.equal('Address');\n    expect(addressElements[0].getAttribute('ti')).to.be.equal(ti);\n    expect(addressElements[0].getAttribute('expectedValue')).to.be.equal(\n      expectedValue\n    );\n  });\n\n  it('only two address element created without expected value', async () => {\n    const ti = '30';\n    const expectedValue = 'ev';\n\n    const addressElements = createAddressElements(\n      document,\n      ti,\n      true,\n      expectedValue\n    );\n\n    expect(addressElements.length).to.be.equal(2);\n    expect(addressElements[0].tagName).to.be.equal('Address');\n    expect(addressElements[0].getAttribute('ti')).to.be.equal(ti);\n    expect(addressElements[0].getAttribute('expectedValue')).to.be.equal(\n      expectedValue\n    );\n    expect(addressElements[1].tagName).to.be.equal('Address');\n    expect(addressElements[1].getAttribute('ti')).to.be.equal(ti);\n    expect(addressElements[1].getAttribute('inverted')).to.be.equal('true');\n    expect(addressElements[1].getAttribute('expectedValue')).to.be.equal(\n      expectedValue\n    );\n  });\n});\n\nit('hasUnitMultiplierField should return expected boolean', () => {\n  expect(hasUnitMultiplierField('INS', '35')).to.be.true;\n  expect(hasUnitMultiplierField('MV', '35')).to.be.true;\n\n  expect(hasUnitMultiplierField('INS', '30')).to.be.false;\n});\n\nit('hasScaleFields should return expected boolean', () => {\n  expect(hasScaleFields('MV', '35')).to.be.true;\n\n  expect(hasScaleFields('INS', '35')).to.be.false;\n  expect(hasScaleFields('INS', '30')).to.be.false;\n});\n"]}