{"version":3,"file":"doi-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/protocol104/doi-container.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,sDAAsD,CAAC;AAE9D,OAAO,EACL,iBAAiB,EACjB,WAAW,GACZ,MAAM,8DAA8D,CAAC;AAGtE,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,QAAqB,CAAC;IAC1B,IAAI,UAAmB,CAAC;IACxB,IAAI,OAAwB,CAAC;IAE7B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,QAAQ,GAAG,MAAM,KAAK,CAAC,yCAAyC,CAAC;aAC9D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC/C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,mCAAmC,CAAE,CAAC;YAE1E,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,gCAAgC,UAAU,wBAAwB,CACvE,CAAC;YACF,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE;YACzE,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;YACjE,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC3D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,GAAG,EAAE;YAC/C,MAAM,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,CAAC;YACrD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CACtD,4BAA4B,CAC7B,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,gCAAgC,CAAE,CAAC;YAEvE,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,gCAAgC,UAAU,wBAAwB,CACvE,CAAC;YACF,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/protocol104/doi-container.js';\n\nimport {\n  get104DetailsLine,\n  getFullPath,\n} from '../../../../src/editors/protocol104/foundation/foundation.js';\nimport { Doi104Container } from '../../../../src/editors/protocol104/doi-container.js';\n\ndescribe('doi-104-container -', () => {\n  let document: XMLDocument;\n  let doiElement: Element;\n  let element: Doi104Container;\n\n  beforeEach(async () => {\n    document = await fetch('/test/testfiles/104/valid-addresses.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('DOI with simple Address Element', () => {\n    beforeEach(async () => {\n      doiElement = document.querySelector('IED[name=\"B1\"] DOI[name=\"CmdBlk\"]')!;\n\n      element = await fixture(\n        html`<doi-104-container .element=\"${doiElement}\"></doi-104-container>`\n      );\n      await element.requestUpdate();\n    });\n\n    it('getDaiElements will return a list which is ordered on full path', () => {\n      const dais = element.daiElements;\n      expect(dais.length).to.be.equal(2);\n      expect(getFullPath(dais[0], 'DOI')).to.be.equal('Oper / ctlVal');\n      expect(getFullPath(dais[1], 'DOI')).to.be.equal('stVal');\n    });\n\n    it('getAddressElements will return a list', () => {\n      const dai = element.daiElements[0];\n      const addresses = element['getAddressElements'](dai);\n      expect(addresses.length).to.be.equal(1);\n      expect(get104DetailsLine(dai, addresses[0])).to.be.equal(\n        'casdu: 201, ioa: 2, ti: 58'\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('DOI without Address Elements', () => {\n    beforeEach(async () => {\n      doiElement = document.querySelector('IED[name=\"B3\"] DOI[name=\"Beh\"]')!;\n\n      element = await fixture(\n        html`<doi-104-container .element=\"${doiElement}\"></doi-104-container>`\n      );\n      await element.requestUpdate();\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}