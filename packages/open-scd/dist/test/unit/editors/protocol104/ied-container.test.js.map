{"version":3,"file":"ied-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/protocol104/ied-container.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,sDAAsD,CAAC;AAE9D,OAAO,EAAE,WAAW,EAAE,MAAM,8DAA8D,CAAC;AAG3F,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;IACnC,IAAI,QAAqB,CAAC;IAC1B,IAAI,UAAmB,CAAC;IACxB,IAAI,OAAwB,CAAC;IAE7B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,QAAQ,GAAG,MAAM,KAAK,CAAC,yCAAyC,CAAC;aAC9D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uBAAuB,EAAE,GAAG,EAAE;QACrC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAE,CAAC;YAEvD,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,gCAAgC,UAAU,wBAAwB,CACvE,CAAC;YACF,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mEAAmE,EAAE,GAAG,EAAE;YAC3E,MAAM,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC;YACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YAC1E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAC7C,+BAA+B,CAChC,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,wBAAwB,CAAE,CAAC,EAAE,GAAG,IAAI,CAAC;YACvE,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE,GAAG,EAAE;QACxC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,UAAU,GAAG,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAE,CAAC;YAEvD,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,gCAAgC,UAAU,wBAAwB,CACvE,CAAC;YACF,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAChC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,wBAAwB,CAAE,CAAC,EAAE,GAAG,IAAI,CAAC;YACvE,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/protocol104/ied-container.js';\n\nimport { getFullPath } from '../../../../src/editors/protocol104/foundation/foundation.js';\nimport { Ied104Container } from '../../../../src/editors/protocol104/ied-container.js';\n\ndescribe('ied-104-container -', () => {\n  let document: XMLDocument;\n  let iedElement: Element;\n  let element: Ied104Container;\n\n  beforeEach(async () => {\n    document = await fetch('/test/testfiles/104/valid-addresses.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('IED with DAI Elements', () => {\n    beforeEach(async () => {\n      iedElement = document.querySelector('IED[name=\"B2\"]')!;\n\n      element = await fixture(\n        html`<ied-104-container .element=\"${iedElement}\"></ied-104-container>`\n      );\n      await element.requestUpdate();\n    });\n\n    it('getDoiElements will return a list which is alphabetically ordered', () => {\n      const dois = element.doiElements;\n      expect(dois.length).to.be.equal(2);\n      expect(getFullPath(dois[0], 'IED')).to.be.equal('AP1 / LD0 / LLN0 / Beh');\n      expect(getFullPath(dois[1], 'IED')).to.be.equal(\n        'AP1 / LD0 / PPRE-GGIO-2 / Beh'\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')!.on = true;\n      await element.requestUpdate();\n\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('IED without DAI Elements', () => {\n    beforeEach(async () => {\n      iedElement = document.querySelector('IED[name=\"B3\"]')!;\n\n      element = await fixture(\n        html`<ied-104-container .element=\"${iedElement}\"></ied-104-container>`\n      );\n      await element.requestUpdate();\n    });\n\n    it('looks like the latest snapshot', async () => {\n      element.shadowRoot!.querySelector('mwc-icon-button-toggle')!.on = true;\n      await element.requestUpdate();\n\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}