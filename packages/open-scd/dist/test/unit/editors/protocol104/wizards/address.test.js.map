{"version":3,"file":"address.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/protocol104/wizards/address.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../../src/addons/Wizards.js';\n\nimport { WizardInputElement } from '../../../../../src/foundation.js';\nimport { WizardTextField } from '../../../../../src/wizard-textfield.js';\nimport { WizardSelect } from '../../../../../src/wizard-select.js';\n\nimport {\n  executeWizardReplaceAction,\n  expectWizardNoUpdateAction,\n  fetchDoc,\n  setWizardSelectValue,\n  setWizardTextFieldValue,\n} from '../../../wizards/test-support.js';\n\nimport {\n  editAddressWizard,\n  updateAddressValue,\n} from '../../../../../src/editors/protocol104/wizards/address.js';\n\ndescribe('Wizards for 104 Address Element', () => {\n  let doc: XMLDocument;\n  let address: Element;\n  let dai: Element;\n  let doi: Element;\n  let ied: Element;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  beforeEach(async () => {\n    doc = await fetchDoc('/test/testfiles/104/valid-addresses.scd');\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n  });\n\n  async function prepareWizard(daiQuery: string): Promise<void> {\n    address = doc.querySelector(daiQuery)!;\n    dai = address.closest('DAI')!;\n    doi = dai.closest('DOI')!;\n    ied = dai.closest('IED')!;\n\n    const wizard = editAddressWizard(ied, doi, dai, address);\n    element.workflow.push(() => wizard);\n    await element.requestUpdate();\n    inputs = Array.from(element.wizardUI.inputs);\n  }\n\n  describe('when adding a 104 Address', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"] DOI[name=\"Mod\"] DAI[name=\"ctlVal\"] Address'\n      );\n    });\n\n    it('shows a validation error message if the combination of casdu and ioa is already in use', async () => {\n      await setWizardTextFieldValue(<WizardTextField>inputs[2], '208'); // Casdu Field\n      await setWizardTextFieldValue(<WizardTextField>inputs[3], '2'); // IOA Field\n      await element.updateComplete;\n      expect(inputs[3].checkValidity()).to.be.false;\n      expect(inputs[3].validity.customError).to.be.true;\n      expect(inputs[3].validationMessage).to.include('ioaConflict');\n    });\n  });\n\n  describe('edit basic 104 Address', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B2\"] LN0[lnClass=\"LLN0\"] DAI[name=\"stVal\"] Address'\n      );\n    });\n\n    it('update basic fields should be updated in document', async function () {\n      await setWizardTextFieldValue(<WizardTextField>inputs[2], '11'); // Casdu Field\n      await setWizardTextFieldValue(<WizardTextField>inputs[3], '21'); // IOA Field\n\n      const updateAction = executeWizardReplaceAction(\n        updateAddressValue(doi, dai, address),\n        element.wizardUI,\n        inputs\n      );\n      expect(updateAction.old.element).to.have.attribute('casdu', '1');\n      expect(updateAction.new.element).to.have.attribute('casdu', '11');\n      expect(updateAction.old.element).to.have.attribute('ioa', '2');\n      expect(updateAction.new.element).to.have.attribute('ioa', '21');\n    });\n\n    it('when no fields changed there will be no update action', async function () {\n      expectWizardNoUpdateAction(\n        updateAddressValue(doi, dai, address),\n        element.wizardUI,\n        inputs\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('edit 104 Address with expected value', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"] DOI[name=\"Mod\"] DAI[name=\"ctlVal\"] Address[ioa=\"2\"]'\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('edit 104 Address with unit multiplier', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"] DOI[name=\"IntIn1\"] DAI[name=\"stVal\"] Address'\n      );\n    });\n\n    it('update unit multiplier field should be updated in document', async function () {\n      await setWizardSelectValue(<WizardSelect>inputs[5], 'k'); // Unit Multiplier Field\n\n      const updateAction = executeWizardReplaceAction(\n        updateAddressValue(doi, dai, address),\n        element.wizardUI,\n        inputs\n      );\n      expect(updateAction.old.element).to.not.have.attribute('unitMultiplier');\n      expect(updateAction.new.element).to.have.attribute('unitMultiplier', 'k');\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('edit 104 Address with scale fields', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_MMXU_SET_V001\"] DOI[name=\"Hz\"] DAI[name=\"f\"] Address'\n      );\n    });\n\n    it('update scale fields should be updated in document', async function () {\n      await setWizardTextFieldValue(<WizardTextField>inputs[6], '1.234'); // Scale Multiplier Field\n      await setWizardTextFieldValue(<WizardTextField>inputs[7], '2.345'); // Scale Offset Field\n\n      const updateAction = executeWizardReplaceAction(\n        updateAddressValue(doi, dai, address),\n        element.wizardUI,\n        inputs\n      );\n      expect(updateAction.old.element).to.not.have.attribute('scaleMultiplier');\n      expect(updateAction.new.element).to.have.attribute(\n        'scaleMultiplier',\n        '1.234'\n      );\n      expect(updateAction.old.element).to.not.have.attribute('scaleOffset');\n      expect(updateAction.new.element).to.have.attribute(\n        'scaleOffset',\n        '2.345'\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot({\n        ignoreAttributes: [\n          {\n            tags: ['wizard-textfield'],\n            attributes: ['pattern'],\n          },\n        ],\n      });\n    });\n\n    //work around, because the escapes get removed in snapshot\n    it('should have correct pattern', async () => {\n      const decimal_pattern = '[+\\\\-]?[0-9]+(([.][0-9]*)?|([.][0-9]+))';\n\n      expect(\n        element.wizardUI.dialog!.querySelectorAll('wizard-textfield[pattern]')!\n          .length\n      ).to.equal(2);\n\n      expect(\n        element.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[0]\n          .getAttribute('pattern')\n      ).to.equal(decimal_pattern);\n\n      expect(\n        element.wizardUI\n          .dialog!.querySelectorAll('wizard-textfield[pattern]')[1]\n          .getAttribute('pattern')\n      ).to.equal(decimal_pattern);\n    });\n  });\n\n  describe('edit 104 Address with mapped cdc value', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_MMXU_SET_V001\"] DOI[name=\"PPV\"] DAI[name=\"f\"] Address'\n      );\n    });\n    it('should have mappedCmv translation value in helper field', async () => {\n      const cdc = element.wizardUI.dialog!.querySelector<WizardTextField>(\n        'wizard-textfield[label=\"cdc\"]'\n      );\n      expect(cdc).to.exist;\n      await expect(cdc!.helper).to.equal('[protocol104.mappedCmv]');\n    });\n  });\n\n  describe('edit 104 Address with inverted value', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"] DOI[name=\"Ind2\"] DAI[name=\"stVal\"] Address[inverted=\"true\"]'\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('edit 104 Address with check value', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"] DOI[name=\"DPCSO1\"] DAI[name=\"Check\"] Address[check=\"interlocking\"]'\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n});\n"]}