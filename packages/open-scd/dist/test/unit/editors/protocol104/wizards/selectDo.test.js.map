{"version":3,"file":"selectDo.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/protocol104/wizards/selectDo.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../../src/addons/Wizards.js';\n\nimport {\n  getDataChildren,\n  selectDoWizard,\n} from '../../../../../src/editors/protocol104/wizards/selectDo.js';\n\ndescribe('data model nodes child getter', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n\n  describe('getDataChildren', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/104/valid-empty-addresses.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    });\n\n    it('returns empty array for invalid tag', () => {\n      const parent = doc.querySelector('Substation')!;\n      expect(getDataChildren(parent)).to.be.empty;\n    });\n\n    it('returns direct children for a SCL', () => {\n      const parent = doc.querySelector('SCL')!;\n      expect(getDataChildren(parent)).to.not.be.empty;\n      expect(getDataChildren(parent).length).to.be.equal(3);\n      expect(getDataChildren(parent)[0].tagName).to.be.equal('IED');\n      expect(getDataChildren(parent)[1].tagName).to.be.equal('IED');\n      expect(getDataChildren(parent)[2].tagName).to.be.equal('IED');\n      expect(getDataChildren(parent)[0]).to.have.attribute('name', 'B1');\n      expect(getDataChildren(parent)[1]).to.have.attribute('name', 'B2');\n      expect(getDataChildren(parent)[2]).to.have.attribute('name', 'B3');\n    });\n\n    it('returns direct children for a IED', () => {\n      const parent = doc.querySelector('IED[name=\"B1\"]')!;\n      expect(getDataChildren(parent)).to.not.be.empty;\n      expect(getDataChildren(parent).length).to.be.equal(1);\n      expect(getDataChildren(parent)[0].tagName).to.be.equal('AccessPoint');\n      expect(getDataChildren(parent)[0]).to.have.attribute('name', 'AP1');\n    });\n\n    it('returns direct children for a AccessPoint', () => {\n      const parent = doc.querySelector(\n        'IED[name=\"B1\"] > AccessPoint[name=\"AP1\"]'\n      )!;\n      expect(getDataChildren(parent)).to.not.be.empty;\n      expect(getDataChildren(parent).length).to.be.equal(1);\n      expect(getDataChildren(parent)[0].tagName).to.be.equal('LDevice');\n      expect(getDataChildren(parent)[0]).to.have.attribute('inst', 'LD0');\n    });\n\n    it('returns direct children for a LDevice', () => {\n      const parent = doc.querySelector('IED[name=\"B1\"] LDevice[inst=\"LD0\"]')!;\n      expect(getDataChildren(parent)).to.not.be.empty;\n      expect(getDataChildren(parent).length).to.be.equal(10);\n      expect(getDataChildren(parent)[0].tagName).to.be.equal('LN0');\n      expect(getDataChildren(parent)[0]).to.have.attribute('lnClass', 'LLN0');\n      expect(getDataChildren(parent)[1].tagName).to.be.equal('LN');\n      expect(getDataChildren(parent)[1]).to.have.attribute('lnClass', 'GAPC');\n    });\n\n    it('returns referenced children for LN', () => {\n      const parent = doc.querySelector(\n        'IED[name=\"B1\"] LDevice[inst=\"LD0\"] > LN0[lnClass=\"LLN0\"]'\n      )!;\n      expect(getDataChildren(parent)).to.not.be.empty;\n      expect(getDataChildren(parent).length).to.equal(4);\n      expect(getDataChildren(parent)[0].tagName).to.be.equal('DO');\n      expect(getDataChildren(parent)[0]).to.have.attribute('name', 'Beh');\n      expect(getDataChildren(parent)[1].tagName).to.be.equal('DO');\n      expect(getDataChildren(parent)[1]).to.have.attribute('name', 'Health');\n      expect(getDataChildren(parent)[2].tagName).to.be.equal('DO');\n      expect(getDataChildren(parent)[2]).to.have.attribute('name', 'MltLev');\n      expect(getDataChildren(parent)[3].tagName).to.be.equal('DO');\n      expect(getDataChildren(parent)[3]).to.have.attribute('name', 'Mod');\n    });\n  });\n\n  describe('show DO Picker', () => {\n    beforeEach(async () => {\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n\n      const wizard = selectDoWizard(doc);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n});\n"]}