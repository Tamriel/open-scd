{"version":3,"file":"logiclink.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/protocol104/wizards/logiclink.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../../src/addons/Wizards.js';\n\nimport {\n  ComplexAction,\n  Create,\n  Delete,\n  isCreate,\n  isDelete,\n  isReplace,\n  Replace,\n  WizardInputElement,\n} from '../../../../../src/foundation.js';\nimport { WizardTextField } from '../../../../../src/wizard-textfield.js';\nimport {\n  createLogicLinkWizard,\n  editLogicLinkWizard,\n} from '../../../../../src/editors/protocol104/wizards/logiclink.js';\n\ndescribe('Wizards for the Logic Link SCL element group', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n  let input: WizardInputElement | undefined;\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/104/valid-subnetwork.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('include an edit wizard that', () => {\n    beforeEach(async () => {\n      const wizard = editLogicLinkWizard(\n        doc.querySelector(\n          'Communication > SubNetwork[name=\"W1\"] > ConnectedAP[iedName=\"B1\"]'\n        )!,\n        2,\n        1\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not edit any P element with unchanged wizard inputs', async () => {\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('does not trigger a editor action to update P elements(s) when not all fields are filled in', async () => {\n      input = <WizardTextField>(\n        inputs.find(input => input.label === 'IP-SUBNET')\n      );\n      input.value = '';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('properly updates a P element of type IP', async () => {\n      input = <WizardTextField>inputs.find(input => input.label === 'IP');\n      input.value = '192.128.0.12';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n      expect(complexAction.title).to.contain('edit');\n      expect(complexAction.actions).to.have.lengthOf(1);\n\n      const action = complexAction.actions[0];\n      expect(action).to.satisfy(isReplace);\n      expect((<Replace>action).old.element.textContent).to.eql('192.128.0.2');\n      expect((<Replace>action).new.element.textContent).to.eql('192.128.0.12');\n    });\n\n    it('properly creates a P element if not present', async () => {\n      doc\n        .querySelector(\n          'Communication > SubNetwork[name=\"W1\"] > ConnectedAP[iedName=\"B1\"] > Address > P[type=\"RG2-LL1-IP-SUBNET\"]'\n        )\n        ?.remove();\n\n      input = <WizardTextField>(\n        inputs.find(input => input.label === 'IP-SUBNET')\n      );\n      input.value = '200.200.200.2';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n      expect(complexAction.title).to.contain('edit');\n      expect(complexAction.actions).to.have.lengthOf(1);\n\n      const action = complexAction.actions[0];\n      expect(action).to.satisfy(isCreate);\n      expect((<Create>action).new.element.textContent).to.eql('200.200.200.2');\n    });\n\n    it('properly deletes a full Logic Link group', async () => {\n      const deleteAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector('mwc-menu > mwc-list-item')\n      );\n\n      deleteAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n      expect(complexAction.title).to.contain('remove');\n      expect(complexAction.actions).to.have.lengthOf(2);\n\n      const firstAction = complexAction.actions[0];\n      expect(firstAction).to.satisfy(isDelete);\n      expect((<Delete>firstAction).old.element.textContent).to.eql(\n        '192.128.0.2'\n      );\n\n      const secondAction = complexAction.actions[1];\n      expect(secondAction).to.satisfy(isDelete);\n      expect((<Delete>secondAction).old.element.textContent).to.eql(\n        '255.255.255.0'\n      );\n    });\n  });\n\n  describe('include a create wizard that', () => {\n    beforeEach(async () => {\n      const wizard = createLogicLinkWizard(\n        doc.querySelector(\n          'SubNetwork[type=\"104\"] > ConnectedAP[iedName=\"B1\"][apName=\"AP1\"]'\n        )!,\n        1,\n        [1, 2]\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n\n    it(\"doesn't trigger a create editor action on primary action without all fields being filled in\", async () => {\n      const ipElement = <WizardTextField>(\n        inputs.find(input => input.label === 'IP')\n      );\n      ipElement.value = '192.168.0.1';\n      await ipElement.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('triggers a create editor action on primary action with all fields being filled in', async () => {\n      const ipElement = <WizardTextField>(\n        inputs.find(input => input.label === 'IP')\n      );\n      ipElement.value = '192.168.0.1';\n\n      const ipSubNetElement = <WizardTextField>(\n        inputs.find(input => input.label === 'IP-SUBNET')\n      );\n      ipSubNetElement.value = '255.255.255.0';\n      await element.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n      expect(complexAction.title).to.contain('add');\n      expect(complexAction.actions).to.have.lengthOf(2);\n\n      const firstAction = complexAction.actions[0];\n      expect(firstAction).to.satisfy(isCreate);\n      expect((<Create>firstAction).new.element.textContent).to.eql(\n        '192.168.0.1'\n      );\n\n      const secondAction = complexAction.actions[1];\n      expect(secondAction).to.satisfy(isCreate);\n      expect((<Create>secondAction).new.element.textContent).to.eql(\n        '255.255.255.0'\n      );\n    });\n  });\n});\n"]}