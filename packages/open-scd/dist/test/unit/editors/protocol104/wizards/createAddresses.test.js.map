{"version":3,"file":"createAddresses.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/protocol104/wizards/createAddresses.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,sCAAsC,CAAC;AAG9C,OAAO,EAEL,QAAQ,EACR,QAAQ,GAGT,MAAM,kCAAkC,CAAC;AAK1C,OAAO,EACL,qBAAqB,EACrB,qBAAqB,GACtB,MAAM,mEAAmE,CAAC;AAE3E,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAG5D,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;IAC1D,IAAI,GAAgB,CAAC;IACrB,IAAI,SAAkB,CAAC;IACvB,IAAI,SAAkB,CAAC;IACvB,IAAI,OAAgB,CAAC;IACrB,IAAI,MAA4B,CAAC;IAEjC,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,GAAG,GAAG,MAAM,QAAQ,CAAC,+CAA+C,CAAC,CAAC;QACtE,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,uBAAuB,QAAQ,kBAAkB,CACtD,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,KAAK,UAAU,aAAa,CAC1B,eAAuB,EACvB,MAAc;QAEd,SAAS,GAAG,GAAG,CAAC,aAAa,CAAC,eAAe,CAAE,CAAC;QAChD,MAAM,MAAM,GAAG,SAAS,CAAC,YAAY,CAAC,QAAQ,CAAE,CAAC;QACjD,SAAS,GAAG,GAAG,CAAC,aAAa,CAC3B,iBAAiB,MAAM,iBAAiB,MAAM,IAAI,CAClD,CAAC;QAEH,MAAM,MAAM,GAAG,qBAAqB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAC3D,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAC9B,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC/C,CAAC;IAED,SAAS,mBAAmB,CAC1B,OAAuB,EACvB,qBAA6B;QAE7B,0CAA0C;QAC1C,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAE5C,uEAAuE;QACvE,MAAM,aAAa,GAAmB,OAAO,CAAC,CAAC,CAAE,CAAC,OAAO,CAAC;QAC1D,MAAM,CAAC,aAAa,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;QAC5D,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE;YACnC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ,CAAC,4DAA4D,EAAE,GAAG,EAAE;QAC1E,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,aAAa,CACjB,+CAA+C,EAC/C,QAAQ,CACT,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;YAC/E,MAAM,OAAO,GAAG,qBAAqB,CACnC,SAAS,EACT,SAAS,EACT,KAAK,CACN,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE5B,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,2DAA2D,EAAE,GAAG,EAAE;QACzE,MAAM,UAAU,GAAG,IAAI,CAAC;QACxB,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,aAAa,CAAC,8CAA8C,EAAE,IAAI,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE,KAAK,IAAI,EAAE;YACrF,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,UAAU,CAAC;YAE7B,MAAM,OAAO,GAAG,qBAAqB,CACnC,SAAS,EACT,SAAS,EACT,KAAK,CACN,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE5B,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;YACvC,MAAM,aAAa,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAC1D,2DAA2D,UAAU,IAAI,CACzE,CAAC;YACH,MAAM,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,CAChD,GAAG,UAAU,6CAA6C,UAAU,IAAI,CACzE,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,sDAAsD,EAAE,GAAG,EAAE;QACpE,IAAI,SAAuB,CAAC;QAC5B,IAAI,SAAuB,CAAC;QAE5B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,aAAa,CACjB,8CAA8C,EAC9C,KAAK,CACN,CAAC;YACF,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAChD,6CAA6C,CAC3B,CAAC;YACrB,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACrB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACvC,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAChD,kCAAkC,CACnB,CAAC;YAClB,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAChD,kCAAkC,CACnB,CAAC;YAClB,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;QAC7B,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;YACjF,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;YACvB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAC9B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5C,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;YACvB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAC9B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,mEAAmE,EAAE,KAAK,IAAI,EAAE;YACjF,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;YACvB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAC9B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC5C,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC;YACvB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAC9B,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,yDAAyD,EAAE,GAAG,EAAE;QACvE,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,aAAa,CACjB,8CAA8C,EAC9C,KAAK,CACN,CAAC;QACJ,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAChD,6CAA6C,CAC3B,CAAC;YACrB,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACrB,MAAM,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,qEAAqE,EAAE,GAAG,EAAE;QACnF,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,aAAa,CACjB,8CAA8C,EAC9C,QAAQ,CACT,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;YAC/E,MAAM,OAAO,GAAG,qBAAqB,CACnC,SAAS,EACT,SAAS,EACT,KAAK,CACN,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE5B,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,2FAA2F,EAAE,GAAG,EAAE;QACzG,MAAM,iBAAiB,GAAG,IAAI,CAAC;QAC/B,MAAM,iBAAiB,GAAG,IAAI,CAAC;QAE/B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,aAAa,CACjB,8CAA8C,EAC9C,QAAQ,CACT,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8FAA8F,EAAE,GAAG,EAAE;YACtG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,iBAAiB,CAAC;YACpC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,iBAAiB,CAAC;YAEpC,MAAM,OAAO,GAAG,qBAAqB,CACnC,SAAS,EACT,SAAS,EACT,IAAI,CACL,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE5B,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0BAA0B,EAAE,KAAK,IAAI,EAAE;YACxC,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CACtD,qCAAqC,CACnB,CAAC;YACrB,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAE3B,MAAM,SAAS,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CACtD,qCAAqC,CACnB,CAAC;YACrB,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAE3B,MAAM,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC;YACvC,MAAM,cAAc,GAAG,SAAS,CAAC,KAAK,CAAC;YAEvC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAC7B,GAAG,iBAAiB,6CAA6C,iBAAiB,IAAI,CACvF,CAAC;YACF,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAC7B,GAAG,iBAAiB,6CAA6C,iBAAiB,IAAI,CACvF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,2FAA2F,EAAE,KAAK,IAAI,EAAE;YACzG,MAAM,aAAa,GAAG,OAAO,CAAC,QAAQ,CAAC,MAAO,CAAC,aAAa,CAC1D,+BAA+B,CAC/B,CAAC;YACH,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC9B,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,OAAO,GAAG,qBAAqB,CACnC,SAAS,EACT,SAAS,EACT,IAAI,CACL,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,CAAC;YAE5B,mBAAmB,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../../src/addons/Wizards.js';\n\nimport {\n  ComplexAction,\n  isCreate,\n  isSimple,\n  WizardAction,\n  WizardInputElement,\n} from '../../../../../src/foundation.js';\n\nimport { WizardSelect } from '../../../../../src/wizard-select.js';\nimport { WizardTextField } from '../../../../../src/wizard-textfield.js';\n\nimport {\n  createAddressesAction,\n  createAddressesWizard,\n} from '../../../../../src/editors/protocol104/wizards/createAddresses.js';\n\nimport { fetchDoc } from '../../../wizards/test-support.js';\nimport { Switch } from '@material/mwc-switch';\n\ndescribe('Wizards for preparing 104 Address Creation', () => {\n  let doc: XMLDocument;\n  let lnElement: Element;\n  let doElement: Element;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  beforeEach(async () => {\n    doc = await fetchDoc('/test/testfiles/104/valid-empty-addresses.scd');\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n  });\n\n  async function prepareWizard(\n    queryLnSelector: string,\n    doName: string\n  ): Promise<void> {\n    lnElement = doc.querySelector(queryLnSelector)!;\n    const lnType = lnElement.getAttribute('lnType')!;\n    doElement = doc.querySelector(\n      `LNodeType[id=\"${lnType}\"] > DO[name=\"${doName}\"]`\n    )!;\n\n    const wizard = createAddressesWizard(lnElement, doElement);\n    element.workflow.push(() => wizard);\n    await element.requestUpdate();\n    inputs = Array.from(element.wizardUI.inputs);\n  }\n\n  function expectCreateActions(\n    actions: WizardAction[],\n    expectedCreateActions: number\n  ): void {\n    // We always first expect a ComplexAction.\n    expect(actions).to.have.length(1);\n    expect(actions[0]).to.not.satisfy(isSimple);\n\n    // Next check the number of Actions and if they are all Create Actions.\n    const createActions = (<ComplexAction>actions[0]).actions;\n    expect(createActions).to.have.length(expectedCreateActions);\n    createActions.forEach(createAction => {\n      expect(createAction).to.satisfy(isCreate);\n    });\n  }\n\n  describe('show prepare 104 Address creation (single monitor TI only)', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN0[lnType=\"SE_LLN0_SET_V001\"]',\n        'MltLev'\n      );\n    });\n\n    it('when processing the request, the expected Create Actions are returned', () => {\n      const actions = createAddressesAction(\n        lnElement,\n        doElement,\n        false\n      )(inputs, element.wizardUI);\n\n      expectCreateActions(actions, 1);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('show prepare 104 Address creation (multi monitor TI only)', () => {\n    const newTiValue = '39';\n    beforeEach(async () => {\n      await prepareWizard('IED[name=\"B1\"] LN[lnType=\"SE_GAPC_SET_V001\"]', 'Op');\n    });\n\n    it('when processing the request, the expected Create Actions are returned', async () => {\n      inputs[3].value = newTiValue;\n\n      const actions = createAddressesAction(\n        lnElement,\n        doElement,\n        false\n      )(inputs, element.wizardUI);\n\n      expectCreateActions(actions, 1);\n    });\n\n    it('TI contains description', async () => {\n      const tiDescription = element.wizardUI.dialog!.querySelector(\n        `wizard-select[label=\"monitorTi\"] > mwc-list-item[value='${newTiValue}']`\n      )!;\n      expect(tiDescription.textContent?.trim()).to.equal(\n        `${newTiValue} ([protocol104.values.signalNames.tiNumber${newTiValue}])`\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('show prepare 104 Address creation with enc cdc value', () => {\n    let monitorTi: WizardSelect;\n    let controlTi: WizardSelect;\n\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"]',\n        'Mod'\n      );\n      const cdc = element.wizardUI.dialog!.querySelector(\n        'wizard-textfield[label=\"Common Data Class\"]'\n      ) as WizardTextField;\n      expect(cdc).to.exist;\n      expect(cdc.maybeValue).to.equal('ENC');\n      monitorTi = element.wizardUI.dialog!.querySelector(\n        'wizard-select[label=\"monitorTi\"]'\n      ) as WizardSelect;\n      controlTi = element.wizardUI.dialog!.querySelector(\n        'wizard-select[label=\"controlTi\"]'\n      ) as WizardSelect;\n      expect(monitorTi).to.exist;\n      expect(controlTi).to.exist;\n    });\n    it('controlTi should change to correct value when selecting monitorTi', async () => {\n      monitorTi.value = '30';\n      await element.requestUpdate();\n      expect(controlTi.maybeValue).to.equal('58');\n      monitorTi.value = '35';\n      await element.requestUpdate();\n      expect(controlTi.maybeValue).to.equal('62');\n    });\n    it('monitorTi should change to correct value when selecting controlTi', async () => {\n      controlTi.value = '58';\n      await element.requestUpdate();\n      expect(monitorTi.maybeValue).to.equal('30');\n      controlTi.value = '62';\n      await element.requestUpdate();\n      expect(monitorTi.maybeValue).to.equal('35');\n    });\n  });\n\n  describe('show prepare 104 Address creation with mapped cdc value', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_MMXU_SET_V001\"]',\n        'PPV'\n      );\n    });\n    it('should have mappedCmv translation value in helper field', async () => {\n      const cdc = element.wizardUI.dialog!.querySelector(\n        'wizard-textfield[label=\"Common Data Class\"]'\n      ) as WizardTextField;\n      expect(cdc).to.exist;\n      await expect(cdc.helper).to.equal('[protocol104.mappedCmv]');\n    });\n  });\n\n  describe('show prepare 104 Address creation (single monitor TI with CtlModel)', () => {\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"]',\n        'SPCSO1'\n      );\n    });\n\n    it('when processing the request, the expected Create Actions are returned', () => {\n      const actions = createAddressesAction(\n        lnElement,\n        doElement,\n        false\n      )(inputs, element.wizardUI);\n\n      expectCreateActions(actions, 1);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('show prepare 104 Address creation (single monitor TI and single control TI with CtlModel)', () => {\n    const newMonitorTiValue = '30';\n    const newControlTiValue = '58';\n\n    beforeEach(async () => {\n      await prepareWizard(\n        'IED[name=\"B1\"] LN[lnType=\"SE_GGIO_SET_V002\"]',\n        'SPCSO2'\n      );\n    });\n\n    it('when processing the request without Check Selected, the expected Create Actions are returned', () => {\n      inputs[3].value = newMonitorTiValue;\n      inputs[5].value = newControlTiValue;\n\n      const actions = createAddressesAction(\n        lnElement,\n        doElement,\n        true\n      )(inputs, element.wizardUI);\n\n      expectCreateActions(actions, 2);\n    });\n\n    it('TIs contain descriptions', async () => {\n      const monitorTi = element.wizardUI.dialog!.querySelector(\n        'wizard-textfield[label=\"monitorTi\"]'\n      ) as WizardTextField;\n      expect(monitorTi).to.exist;\n\n      const controlTi = element.wizardUI.dialog!.querySelector(\n        `wizard-textfield[label=\"controlTi\"]`\n      ) as WizardTextField;\n      expect(controlTi).to.exist;\n\n      const monitorTiValue = monitorTi.value;\n      const controlTiValue = controlTi.value;\n\n      expect(monitorTiValue).to.equal(\n        `${newMonitorTiValue} ([protocol104.values.signalNames.tiNumber${newMonitorTiValue}])`\n      );\n      expect(controlTiValue).to.equal(\n        `${newControlTiValue} ([protocol104.values.signalNames.tiNumber${newControlTiValue}])`\n      );\n    });\n\n    it('when processing the request with Check Selected, the expected Create Actions are returned', async () => {\n      const switchElement = element.wizardUI.dialog!.querySelector<Switch>(\n        `mwc-switch[id=\"controlCheck\"]`\n      )!;\n      switchElement.selected = true;\n      await element.requestUpdate();\n\n      const actions = createAddressesAction(\n        lnElement,\n        doElement,\n        true\n      )(inputs, element.wizardUI);\n\n      expectCreateActions(actions, 3);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n});\n"]}