{"version":3,"file":"connectedap.test.js","sourceRoot":"","sources":["../../../../../../test/unit/editors/protocol104/wizards/connectedap.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../../../src/addons/Wizards.js';\n\nimport { Checkbox } from '@material/mwc-checkbox';\nimport {\n  createConnectedApWizard,\n  editConnectedApWizard,\n} from '../../../../../src/editors/protocol104/wizards/connectedap.js';\nimport {\n  ComplexAction,\n  Create,\n  Delete,\n  isCreate,\n  isDelete,\n  WizardInputElement,\n} from '../../../../../src/foundation.js';\nimport { WizardTextField } from '../../../../../src/wizard-textfield.js';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\ndescribe('Wizards for SCL element ConnectedAP', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n  let input: WizardInputElement | undefined;\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/104/valid-subnetwork.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('include an edit wizard that', () => {\n    beforeEach(async () => {\n      const wizard = editConnectedApWizard(\n        doc.querySelector('SubNetwork[type=\"104\"] > ConnectedAP[apName=\"AP2\"]')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('does not edit any P element with unchanged wizard inputs', async () => {\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('does not trigger a complex editor action to update P elements(s) when not all fields are filled in', async () => {\n      input = <WizardTextField>inputs.find(input => input.label === 'IP');\n      input.value = '';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('triggers a complex action as combination of delete and create with prior existing Address field', async () => {\n      input = <WizardTextField>inputs.find(input => input.label === 'IP');\n      input.value = '192.128.0.1';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n      expect(complexAction.actions).to.have.lengthOf(2);\n      expect(complexAction.actions[0]).to.satisfy(isDelete);\n      expect(complexAction.actions[1]).to.satisfy(isCreate);\n    });\n\n    it('properly updates a P element of type IP', async () => {\n      input = <WizardTextField>inputs.find(input => input.label === 'IP');\n      input.value = '192.168.210.158';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n\n      const oldAddress = <Element>(\n        (<Delete>complexAction.actions[0]).old.element\n      );\n      const newAddress = <Element>(\n        (<Create>complexAction.actions[1]).new.element\n      );\n\n      expect(\n        oldAddress.querySelector<Element>('P[type=\"IP\"]')?.textContent\n      ).to.equal('192.128.0.11');\n      expect(\n        newAddress.querySelector<Element>('P[type=\"IP\"]')?.textContent\n      ).to.equal('192.168.210.158');\n    });\n\n    it('adds type restrictions with selected option type restriction', async () => {\n      (<Checkbox>(\n        element.wizardUI.shadowRoot?.querySelector('#typeRestriction')\n      )).checked = true;\n      await element.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n\n      const oldAddress = <Element>(\n        (<Delete>complexAction.actions[0]).old.element\n      );\n      const newAddress = <Element>(\n        (<Create>complexAction.actions[1]).new.element\n      );\n\n      const oldIP = oldAddress.querySelector<Element>('P[type=\"IP\"]');\n      const newIP = newAddress.querySelector<Element>('P[type=\"IP\"]');\n\n      expect(\n        oldIP?.getAttributeNS(\n          'http://www.w3.org/2001/XMLSchema-instance',\n          'type'\n        )\n      ).to.not.exist;\n      expect(\n        newIP?.getAttributeNS(\n          'http://www.w3.org/2001/XMLSchema-instance',\n          'type'\n        )\n      ).to.exist;\n    });\n  });\n\n  describe('include a create wizard that', () => {\n    beforeEach(async () => {\n      const wizard = createConnectedApWizard(\n        doc.querySelector('SubNetwork[type=\"104\"] > ConnectedAP[apName=\"AP2\"]')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n\n    it('does not allow to add connected AccessPoints', () => {\n      const disabledItems = Array.from(\n        element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n          'mwc-check-list-item'\n        )\n      ).filter(item => item.disabled);\n\n      for (const item of disabledItems) {\n        const [iedName, apName] = item.value.split('>');\n        expect(\n          doc.querySelector(\n            `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"]`\n          )\n        ).to.exist;\n      }\n    });\n\n    it('allows to add unconnected AccessPoints', () => {\n      const enabledItems = Array.from(\n        element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n          'mwc-check-list-item'\n        )\n      ).filter(item => !item.disabled);\n\n      for (const item of enabledItems) {\n        const [iedName, apName] = item.value.split('>');\n        expect(\n          doc.querySelector(\n            `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"]`\n          )\n        ).to.not.exist;\n      }\n    });\n\n    it('shows all AccessPoint in the project', async () => {\n      expect(\n        element.wizardUI.dialog?.querySelectorAll('mwc-check-list-item').length\n      ).to.equal(doc.querySelectorAll(':root > IED > AccessPoint').length);\n    });\n\n    it('triggers a create editor action on primary action', async () => {\n      Array.from(\n        element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n          'mwc-check-list-item'\n        )\n      )\n        .filter(item => !item.disabled)[0]\n        .click();\n      await element.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      expect(actionEvent).to.be.calledOnce;\n      expect(actionEvent.args[0][0].detail.action).to.satisfy(isCreate);\n    });\n  });\n});\n"]}