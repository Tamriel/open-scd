{"version":3,"file":"connectedap-container.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/protocol104/connectedap-container.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAE,GAAG,EAAE,MAAM,OAAO,CAAC;AAE5B,OAAO,2DAA2D,CAAA;AAGlE,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;IACtC,IAAI,OAA6B,CAAC;IAClC,IAAI,QAAqB,CAAC;IAC1B,IAAI,WAAoB,CAAC;IAEzB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,QAAQ,GAAG,MAAM,KAAK,CAAC,0CAA0C,CAAC;aAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAExE,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,sCAAsC,CAAE,CAAC;QAE9E,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAC;mBACQ,WAAW;gCACE,CAC3B,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;QACrD,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;QAExC,CAAC,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,wBAAwB,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;QACrF,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC/E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;QACxE,MAAM,WAAW,GAAG,GAAG,EAAE,CAAC;QAC1B,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;QAEjC,CAAC,OAAO,CAAC,UAAU,EAAE,aAAa,CAAC,sBAAsB,CAAC,CAAE,CAAC,KAAK,EAAE,CAAC;QACnF,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC;QAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC3E,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IACpF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\nimport { spy } from 'sinon';\n\nimport '../../../../src/editors/protocol104/connectedap-editor.js'\nimport { ConnectedAP104Editor } from '../../../../src/editors/protocol104/connectedap-editor.js';\n\ndescribe('connectedap-104-editor', () => {\n  let element: ConnectedAP104Editor;\n  let document: XMLDocument;\n  let connectedAP: Element;\n\n  beforeEach(async () => {\n    document = await fetch('/test/testfiles/104/valid-subnetwork.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    connectedAP = document.querySelector('SubNetwork[type=\"104\"] > ConnectedAP')!;\n\n    element = await fixture(\n      html `<connectedap-104-editor\n        .element=${connectedAP}>\n      </connectedap-104-editor>`\n    );\n  });\n\n  it('looks like the latest snapshot', async () => {\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n  \n  it('has a mwc-fab which deletes the ConnectedAP', () => {\n    const editorEvent = spy();\n    window.addEventListener('editor-action', editorEvent);\n\n    (<HTMLElement>(element.shadowRoot?.querySelector('mwc-fab[icon=\"delete\"]'))).click();\n    expect(editorEvent).to.have.be.calledOnce;\n    expect(editorEvent.args[0][0].detail.action.old.element).to.eql(connectedAP);\n  });\n  \n  it('has a mwc-fab which creates an edit wizard for the ConnectedAP', () => {\n    const wizardEvent = spy();\n    window.addEventListener('wizard', wizardEvent);\n\n    (<HTMLElement>(element.shadowRoot?.querySelector('mwc-fab[icon=\"edit\"]'))).click();\n    expect(wizardEvent).to.have.be.calledOnce;\n    expect(wizardEvent.args[0][0].detail.wizard()[0].title).to.contain('edit');\n    expect(wizardEvent.args[0][0].detail.wizard()[0].element).to.contain(connectedAP);\n  });\n});\n"]}