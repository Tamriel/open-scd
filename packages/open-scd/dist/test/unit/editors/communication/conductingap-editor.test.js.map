{"version":3,"file":"conductingap-editor.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/communication/conductingap-editor.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../../src/editors/communication/connectedap-editor.js';\nimport { ConnectedAPEditor } from '../../../../src/editors/communication/connectedap-editor.js';\nimport { isDelete } from '../../../../src/foundation.js';\n\ndescribe('A component to visualize SCL element ConnectedAP', () => {\n  let element: ConnectedAPEditor;\n  let validSCL: XMLDocument;\n\n  let wizardEvent: SinonSpy;\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    validSCL = await fetch('/test/testfiles/communication/communication.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    element = <ConnectedAPEditor>(\n      await fixture(\n        html`<connectedap-editor\n          .element=${validSCL.querySelector(\n            'SubNetwork[name=\"StationBus\"] > ConnectedAP'\n          )}\n        ></connectedap-editor>`\n      )\n    );\n\n    wizardEvent = spy();\n    window.addEventListener('wizard', wizardEvent);\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  it('looks like the latest snapshot', async () =>\n    await expect(element).shadowDom.to.equalSnapshot());\n\n  it('renders label UNDEFINED in case ConnectedAP apName attribute is missing', async () => {\n    const connAp = validSCL.querySelector('ConnectedAP');\n    connAp?.removeAttribute('apName');\n    await element.requestUpdate();\n\n    expect(element).to.have.property('apName', 'UNDEFINED');\n  });\n\n  it('triggers edit wizard for ConnectedAP element on action button click', async () => {\n    (<HTMLElement>(\n      element.shadowRoot?.querySelector('mwc-fab[icon=\"edit\"]')\n    )).click();\n\n    await element.requestUpdate();\n\n    expect(wizardEvent).to.have.be.calledOnce;\n    expect(wizardEvent.args[0][0].detail.wizard()[0].title).to.contain('edit');\n  });\n\n  it('triggers remove action on action button click', async () => {\n    (<HTMLElement>(\n      element.shadowRoot?.querySelector('mwc-fab[icon=\"delete\"]')\n    )).click();\n\n    await element.requestUpdate();\n\n    expect(wizardEvent).to.not.have.been.called;\n    expect(actionEvent).to.have.been.calledOnce;\n    expect(actionEvent.args[0][0].detail.action).to.satisfy(isDelete);\n  });\n});\n"]}