{"version":3,"file":"transformer-winding-editor.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/substation/transformer-winding-editor.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,kEAAkE,CAAC;AAG1E,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;IAC1C,IAAI,OAAiC,CAAC;IACtC,IAAI,GAAgB,CAAC;IAErB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,GAAG,GAAG,MAAM,KAAK,CACf,0DAA0D,CAC3D;aACE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;YACrD,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;gBAC9C,OAAO,GAA6B,CAClC,MAAM,OAAO,CACX,IAAI,CAAA;yBACS,GAAG,CAAC,aAAa,CAAC,iCAAiC,CAAC;+BAC9C,IAAI;2CACQ,CAChC,CACF,CAAC;gBACF,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QACH,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;YAC/C,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;gBAC9C,OAAO,GAA6B,CAClC,MAAM,OAAO,CACX,IAAI,CAAA;yBACS,GAAG,CAAC,aAAa,CAAC,iCAAiC,CAAC;2CAClC,CAChC,CACF,CAAC;gBACF,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YACrD,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,kBAAkB,EAAE,GAAG,EAAE;QAChC,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,OAAO,GAA6B,CAClC,MAAM,OAAO,CACX,IAAI,CAAA;uBACS,GAAG,CAAC,aAAa,CAAC,kCAAkC,CAAC;yCACnC,CAChC,CACF,CAAC;YACF,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../../src/editors/substation/transformer-winding-editor.js';\nimport { TransformerWindingEditor } from '../../../../src/editors/substation/transformer-winding-editor.js';\n\ndescribe('transformer-winding-editor', () => {\n  let element: TransformerWindingEditor;\n  let doc: XMLDocument;\n\n  beforeEach(async () => {\n    doc = await fetch(\n      'test/testfiles/editors/substation/TransformerWinding.scd'\n    )\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('with children', () => {\n    describe('when EqFunction elements are rendered', () => {\n      it('looks like the latest snapshot', async () => {\n        element = <TransformerWindingEditor>(\n          await fixture(\n            html`<transformer-winding-editor\n              .element=${doc.querySelector('TransformerWinding[name=\"some\"]')}\n              .showfunctions=${true}\n            ></transformer-winding-editor>`\n          )\n        );\n        await expect(element).shadowDom.to.equalSnapshot();\n      });\n    });\n    describe('when hiding EqFunction elements', () => {\n      it('looks like the latest snapshot', async () => {\n        element = <TransformerWindingEditor>(\n          await fixture(\n            html`<transformer-winding-editor\n              .element=${doc.querySelector('TransformerWinding[name=\"some\"]')}\n            ></transformer-winding-editor>`\n          )\n        );\n        await expect(element).shadowDom.to.equalSnapshot();\n      });\n    });\n  });\n\n  describe('without children', () => {\n    it('looks like the latest snapshot', async () => {\n      element = <TransformerWindingEditor>(\n        await fixture(\n          html`<transformer-winding-editor\n            .element=${doc.querySelector('TransformerWinding[name=\"empty\"]')}\n          ></transformer-winding-editor>`\n        )\n      );\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}