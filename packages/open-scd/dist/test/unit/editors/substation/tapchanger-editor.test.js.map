{"version":3,"file":"tapchanger-editor.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/substation/tapchanger-editor.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,yDAAyD,CAAC;AAGjE,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;IAC1D,IAAI,OAAyB,CAAC;IAC9B,IAAI,GAAgB,CAAC;IAErB,QAAQ,CAAC,yCAAyC,EAAE,GAAG,EAAE;QACvD,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,GAAG,GAAG,MAAM,KAAK,CAAC,mDAAmD,CAAC;iBACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;YACxE,OAAO,GAAqB,CAC1B,MAAM,OAAO,CACX,IAAI,CAAA;uBACS,GAAG,CAAC,aAAa,CAAC,iCAAiC,CAAC;gCAC3C,CACvB,CACF,CAAC;YACF,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;YAC7B,MAAM,OAAO,CAAC,cAAc,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE,GAAG,EAAE;QACtC,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,GAAG,GAAG,MAAM,KAAK,CAAC,mDAAmD,CAAC;iBACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;YACxE,OAAO,GAAqB,CAC1B,MAAM,OAAO,CACX,IAAI,CAAA;uBACS,GAAG,CAAC,aAAa,CAAC,mCAAmC,CAAC;gCAC7C,CACvB,CACF,CAAC;YACF,OAAO,CAAC,aAAa,GAAG,IAAI,CAAC;YAC7B,MAAM,OAAO,CAAC,cAAc,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../../src/editors/substation/tapchanger-editor.js';\nimport { TapChangerEditor } from '../../../../src/editors/substation/tapchanger-editor.js';\n\ndescribe('web component rendering TapChanger element', () => {\n  let element: TapChangerEditor;\n  let doc: XMLDocument;\n\n  describe('rendering LNode and EqFunction children', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/editors/substation/TapChanger.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      element = <TapChangerEditor>(\n        await fixture(\n          html`<tapchanger-editor\n            .element=${doc.querySelector('TapChanger[name=\"tapChComplet\"]')}\n          ></tapchanger-editor>`\n        )\n      );\n      element.showfunctions = true;\n      await element.updateComplete;\n    });\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('rendering SubEquipment', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/editors/substation/TapChanger.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      element = <TapChangerEditor>(\n        await fixture(\n          html`<tapchanger-editor\n            .element=${doc.querySelector('TapChanger[name=\"tapChangerHalf\"]')}\n          ></tapchanger-editor>`\n        )\n      );\n      element.showfunctions = true;\n      await element.updateComplete;\n    });\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}