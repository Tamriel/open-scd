{"version":3,"file":"redirectionUI.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/substation/redirectionUI.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport { Dialog } from '@material/mwc-dialog';\nimport { Select } from '@material/mwc-select';\n\nimport '../../../../src/editors/substation/bay-editor.js';\nimport '../../../../src/editors/substation/substation-editor.js';\nimport '../../../../src/editors/substation/voltage-level-editor.js';\nimport { BayEditor } from '../../../../src/editors/substation/bay-editor.js';\nimport { SubstationEditor } from '../../../../src/editors/substation/substation-editor.js';\nimport { VoltageLevelEditor } from '../../../../src/editors/substation/voltage-level-editor.js';\nimport { WizardTextField } from '../../../../src/wizard-textfield.js';\n\nasync function loadAndClone(\n  cloneEntity: BayEditor | VoltageLevelEditor | SubstationEditor,\n  file: string\n): Promise<void> {\n  const doc = await fetch('/test/testfiles/zeroline/clone/' + file)\n    .then(response => response.text())\n    .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n  cloneEntity.doc = doc;\n  cloneEntity.element = doc.querySelector(cloneEntity.element.tagName)!;\n  await cloneEntity.updateComplete;\n\n  (\n    cloneEntity.shadowRoot!.querySelector(\n      'mwc-icon-button[icon=\"content_copy\"]'\n    ) as HTMLElement\n  ).click();\n\n  await cloneEntity.updateComplete;\n}\n\nasync function setUpAndTriggerRedirectUI(\n  redirectUI: Dialog,\n  name: string,\n  redirects?: Record<string, string>\n): Promise<void> {\n  if (!redirectUI) return;\n\n  redirectUI.querySelector<WizardTextField>('wizard-textfield')!.value = name;\n\n  if (redirects) {\n    Object.entries(redirects).forEach(([oldIed, newIed]) => {\n      const select = <Select>(\n        redirectUI.querySelector(`mwc-select[label=\"${oldIed}\"]`)\n      );\n\n      if (select) select.value = newIed;\n    });\n  }\n\n  redirectUI\n    .querySelector<HTMLElement>('mwc-button[icon=\"content_copy\"]')\n    ?.click();\n  await redirectUI.updateComplete;\n}\n\ndescribe('Clone Redirection UI', () => {\n  describe('triggered by bay-editor', () => {\n    let element: BayEditor;\n\n    let actionEvent: SinonSpy;\n\n    beforeEach(async () => {\n      const bay = new DOMParser().parseFromString(\n        '<Bay name=\"someName\" />',\n        'application/xml'\n      ).documentElement;\n\n      element = <BayEditor>(\n        await fixture(html`<bay-editor .element=${bay}></bay-editor>`)\n      );\n\n      actionEvent = spy();\n      window.addEventListener('editor-action', actionEvent);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await loadAndClone(element, 'validRedirect.scd');\n\n      expect(element.dialog).to.exist;\n      expect(actionEvent).to.not.have.been.called;\n      await expect(element.dialog).to.equalSnapshot();\n    });\n\n    it('checks for name uniqueness ', async () => {\n      await loadAndClone(element, 'validRedirect.scd');\n      await setUpAndTriggerRedirectUI(element.dialog, 'Q01');\n\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('only redirect selected IEDs', async () => {\n      await loadAndClone(element, 'validRedirect.scd');\n      await setUpAndTriggerRedirectUI(element.dialog, 'Q02', {\n        IED1: 'IED3',\n        IED2: 'No',\n      });\n\n      const cloneEntity = actionEvent.args[0][0].detail.action.new.element;\n      expect(cloneEntity.querySelectorAll('LNode').length).to.equal(2);\n      expect(\n        cloneEntity.querySelectorAll('LNode:not([iedName=\"IED3\"])').length\n      ).to.equal(0);\n    });\n\n    it('checks reference validity before redirect', async () => {\n      await loadAndClone(element, 'validRedirect.scd');\n      await setUpAndTriggerRedirectUI(element.dialog, 'Q02', {\n        IED1: 'No',\n        IED2: 'IED4',\n      });\n\n      const cloneEntity = actionEvent.args[0][0].detail.action.new.element;\n      expect(cloneEntity.querySelectorAll('LNode[lnClass=\"CSWI\"]')).to.not\n        .exist;\n    });\n\n    describe('is not visible to the user', () => {\n      it('in specification phase (LNode=\"None\")', async () => {\n        await loadAndClone(element, 'specificationOnly.scd');\n\n        expect(element.dialog).to.not.exist;\n        expect(actionEvent).to.have.been.called;\n      });\n\n      it('in case LNode are all in use', async () => {\n        await loadAndClone(element, 'noUnusedLNode.scd');\n\n        expect(element.dialog).to.not.exist;\n        expect(actionEvent).to.have.been.called;\n      });\n\n      it('in case LNode are not present in all other IEDs', async () => {\n        await loadAndClone(element, 'refMissmatch.scd');\n\n        expect(element.dialog).to.not.exist;\n        expect(actionEvent).to.have.been.called;\n      });\n    });\n  });\n\n  describe('triggered by voltage-level-editor', () => {\n    let element: VoltageLevelEditor;\n\n    beforeEach(async () => {\n      const voltageLevel = new DOMParser().parseFromString(\n        '<VoltageLevel name=\"someName\" />',\n        'application/xml'\n      ).documentElement;\n\n      element = <VoltageLevelEditor>(\n        await fixture(\n          html`<voltage-level-editor\n            .element=${voltageLevel}\n          ></voltage-level-editor>`\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await loadAndClone(element, 'validRedirect.scd');\n\n      expect(element.dialog).to.exist;\n      await expect(element.dialog).to.equalSnapshot();\n    });\n  });\n\n  describe('triggered by substation-editor', () => {\n    let element: SubstationEditor;\n\n    beforeEach(async () => {\n      const substation = new DOMParser().parseFromString(\n        '<Substation name=\"someName\" />',\n        'application/xml'\n      ).documentElement;\n\n      element = <SubstationEditor>(\n        await fixture(\n          html`<substation-editor .element=${substation}></substation-editor>`\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await loadAndClone(element, 'validRedirect.scd');\n\n      expect(element.dialog).to.exist;\n      await expect(element.dialog).to.equalSnapshot();\n    });\n  });\n});\n"]}