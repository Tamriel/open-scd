{"version":3,"file":"sub-equipment-editor.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/substation/sub-equipment-editor.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,4DAA4D,CAAC;AAGpE,QAAQ,CAAC,sBAAsB,EAAE,GAAG,EAAE;IACpC,IAAI,OAA2B,CAAC;IAChC,IAAI,GAAgB,CAAC;IAErB,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,GAAG,GAAG,MAAM,KAAK,CAAC,kCAAkC,CAAC;aAClD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;QACxE,OAAO,GAAuB,CAC5B,MAAM,OAAO,CACX,IAAI,CAAA;qBACS,GAAG,CAAC,aAAa,CAAC,cAAc,CAAC;iCACrB,CAC1B,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,GAAG,GAAG,MAAM,KAAK,CAAC,kCAAkC,CAAC;iBAClD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;YACxE,OAAO,GAAuB,CAC5B,MAAM,OAAO,CACX,IAAI,CAAA;uBACS,GAAG,CAAC,aAAa,CAAC,6BAA6B,CAAC;mCACpC,CAC1B,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,GAAG,GAAG,MAAM,KAAK,CAAC,kCAAkC,CAAC;iBAClD,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;YACxE,OAAO,GAAuB,CAC5B,MAAM,OAAO,CACX,IAAI,CAAA;uBACS,GAAG,CAAC,aAAa,CAAC,4BAA4B,CAAC;mCACnC,CAC1B,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../../src/editors/substation/sub-equipment-editor.js';\nimport { SubEquipmentEditor } from '../../../../src/editors/substation/sub-equipment-editor.js';\n\ndescribe('sub-equipment-editor', () => {\n  let element: SubEquipmentEditor;\n  let doc: XMLDocument;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/SubEquipment.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n    element = <SubEquipmentEditor>(\n      await fixture(\n        html`<sub-equipment-editor\n          .element=${doc.querySelector('SubEquipment')}\n        ></sub-equipment-editor>`\n      )\n    );\n  });\n\n  it('looks like the latest snapshot', async () => {\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  describe('With children', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/SubEquipment.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      element = <SubEquipmentEditor>(\n        await fixture(\n          html`<sub-equipment-editor\n            .element=${doc.querySelector('SubEquipment[name=\"addEqi\"]')}\n          ></sub-equipment-editor>`\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n  describe('without description and state', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/SubEquipment.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      element = <SubEquipmentEditor>(\n        await fixture(\n          html`<sub-equipment-editor\n            .element=${doc.querySelector('SubEquipment[name=\"other\"]')}\n          ></sub-equipment-editor>`\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n});\n"]}