{"version":3,"file":"zeroline-pane.test.js","sourceRoot":"","sources":["../../../../../test/unit/editors/substation/zeroline-pane.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../../src/editors/substation/zeroline-pane.js';\nimport { ZerolinePane } from '../../../../src/editors/substation/zeroline-pane.js';\nimport {\n  attachedIeds,\n  getAttachedIeds,\n} from '../../../../src/editors/substation/foundation.js';\n\ndescribe('zeroline-pane', () => {\n  let doc: XMLDocument;\n\n  let substation1: Element;\n  let substation2: Element;\n\n  let voltageLevel1: Element;\n  let voltageLevel2: Element;\n\n  let bay1: Element;\n  let bay2: Element;\n\n  let remainingIeds: Set<Element>;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/zeroline/iedalloctest.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    substation1 = doc.querySelector('Substation[name=\"AA1\"]')!;\n    substation2 = doc.querySelector('Substation[name=\"AA2\"]')!;\n\n    voltageLevel1 = doc.querySelector('VoltageLevel[name=\"E1\"]')!;\n    voltageLevel2 = doc.querySelector('VoltageLevel[name=\"J1\"]')!;\n\n    bay1 = doc.querySelector('Bay[name=\"Bay1\"]')!;\n    bay2 = doc.querySelector('Bay[name=\"Bay2\"]')!;\n\n    remainingIeds = new Set(Array.from(doc.querySelectorAll('IED')));\n  });\n\n  it('per default looks like the latest snapshot', async () => {\n    const element: ZerolinePane = await fixture(\n      html`<zeroline-pane\n        .doc=${doc}\n        .getAttachedIeds=\"${undefined}\"\n      ></zeroline-pane>`\n    );\n\n    if (element.showieds.on) await element.showieds.click();\n    if (element.showfunctions.on) await element.showfunctions.click();\n\n    await new Promise(resolve => setTimeout(resolve, 2000)); // await animation\n\n    await expect(element).shadowDom.to.equalSnapshot();\n  }).timeout(5000);\n\n  it('showieds looks like the latest snapshot', async () => {\n    const element: ZerolinePane = await fixture(\n      html`<zeroline-pane\n        .doc=${doc}\n        .getAttachedIeds=${getAttachedIeds(doc)}\n      ></zeroline-pane>`\n    );\n\n    if (!element.showieds.on) await element.showieds.click();\n    if (element.showfunctions.on) await element.showfunctions.click();\n\n    await new Promise(resolve => setTimeout(resolve, 2000)); // await IEDs are rendered\n\n    await expect(element).shadowDom.to.equalSnapshot();\n  }).timeout(5000);\n\n  describe('attachedIeds', () => {\n    it('returns IEDs that cannot be allocated to any element', async () => {\n      const ieds = await attachedIeds(doc.documentElement!, remainingIeds);\n\n      expect(ieds.length).to.equal(2);\n      expect(ieds[0].getAttribute('name')).to.equal('IED6');\n      expect(ieds[1].getAttribute('name')).to.equal('IED8');\n    });\n    describe('return IEDs for Bay elements that', () => {\n      it('are connected itself or underlaying conduncting equipment', async () => {\n        const ieds = await attachedIeds(bay1, remainingIeds);\n\n        expect(ieds.length).to.equal(2);\n        expect(ieds[0].getAttribute('name')).to.equal('IED1');\n        expect(ieds[1].getAttribute('name')).to.equal('IED4');\n      });\n\n      it('are not connected to another Bay as well', async () => {\n        expect((await attachedIeds(bay2, remainingIeds)).length).to.equal(0);\n      });\n    });\n    describe('return IEDs for VoltageLevel elements that', () => {\n      it('are connected itself or underlaying elements', async () => {\n        const ieds = await attachedIeds(voltageLevel1, remainingIeds);\n\n        expect(ieds.length).to.equal(2);\n        expect(ieds[0].getAttribute('name')).to.equal('IED2');\n        expect(ieds[1].getAttribute('name')).to.equal('IED5');\n      });\n\n      it('are not connected to another Bay ass well', async () => {\n        expect(\n          (await attachedIeds(voltageLevel2, remainingIeds)).length\n        ).to.equal(0);\n      });\n    });\n    describe('return IEDs for Substation elements that', () => {\n      it('are connected itself or underlaying elements', async () => {\n        const ieds = await attachedIeds(substation1, remainingIeds);\n\n        expect(ieds.length).to.equal(2);\n        expect(ieds[0].getAttribute('name')).to.equal('IED3');\n        expect(ieds[1].getAttribute('name')).to.equal('IED7');\n      });\n      it('are not connected to another Substation ass well', async () => {\n        expect(\n          (await attachedIeds(substation2, remainingIeds)).length\n        ).to.equal(0);\n      });\n    });\n  });\n\n  it('both the functions return every IED only once', async () => {\n    const numSub1 = (await attachedIeds(substation1, remainingIeds)).length;\n    const numSub2 = (await attachedIeds(substation2, remainingIeds)).length;\n    const numVolt1 = (await attachedIeds(voltageLevel1, remainingIeds)).length;\n    const numVolt2 = (await attachedIeds(voltageLevel2, remainingIeds)).length;\n    const numBay1 = (await attachedIeds(bay1, remainingIeds)).length;\n    const numBay2 = (await attachedIeds(bay2, remainingIeds)).length;\n\n    const numUnRef = (await attachedIeds(doc.documentElement, remainingIeds))\n      .length;\n\n    const sumIeds =\n      numBay1 + numBay2 + numVolt1 + numVolt2 + numSub1 + numSub2 + numUnRef;\n\n    expect(sumIeds).to.equal(doc.querySelectorAll('IED').length);\n  });\n}).timeout(10000);\n"]}