{"version":3,"file":"VirtualTemplateIED.test.js","sourceRoot":"","sources":["../../../../test/unit/menu/VirtualTemplateIED.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport { Create, isCreate } from '../../../src/foundation.js';\nimport VirtualTemplateIED from '../../../src/menu/VirtualTemplateIED.js';\nimport { CheckListItem } from '@material/mwc-list/mwc-check-list-item';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\n\ndescribe('Plugin that creates with some user input a virtual template IED - SPECIFICATION', () => {\n  if (customElements.get('virtual-template-i-e-d') === undefined)\n    customElements.define('virtual-template-i-e-d', VirtualTemplateIED);\n\n  let doc: XMLDocument;\n  let element: VirtualTemplateIED;\n\n  let manufacturer: WizardTextField;\n  let apName: WizardTextField;\n\n  let primaryAction: HTMLElement;\n  let checkItems: CheckListItem[];\n\n  let editorAction: SinonSpy;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/virtualied/specificfromfunctions.ssd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    element = await fixture(html`\n      <virtual-template-i-e-d .doc=${doc}></virtual-template-i-e-d>\n    `);\n\n    editorAction = spy();\n    window.addEventListener('editor-action', editorAction);\n\n    element.run();\n    await element.requestUpdate();\n\n    checkItems = Array.from(\n      element.dialog.querySelectorAll('mwc-check-list-item') ?? []\n    );\n    manufacturer = element.dialog.querySelector<WizardTextField>(\n      'wizard-textfield[label=\"manufacturer\"]'\n    )!;\n    apName = element.dialog.querySelector<WizardTextField>(\n      'wizard-textfield[label=\"AccessPoint name\"]'\n    )!;\n\n    primaryAction = <HTMLElement>(\n      element.dialog.querySelector('mwc-button[slot=\"primaryAction\"]')\n    );\n  });\n\n  it('looks like the latest snapshot', async () =>\n    await expect(element.dialog).dom.to.equalSnapshot());\n\n  it('shows all LNode that is not class LLN0 as check list items', () =>\n    expect(checkItems.length).to.equal(\n      doc.querySelectorAll('LNode[iedName=\"None\"]:not([lnClass=\"LLN0\"])').length\n    ));\n\n  it('does not trigger any actions with missing input fields', () => {\n    primaryAction.click();\n\n    expect(editorAction).to.not.have.been.called;\n  });\n\n  it('does not trigger any actions with missing input fields', () => {\n    manufacturer.value = 'SomeCompanyName';\n    apName.value = 'P1';\n\n    primaryAction.click();\n\n    expect(editorAction).to.not.have.been.called;\n  });\n\n  it('does trigger an create actions if at least one LNode is selected', async () => {\n    manufacturer.value = 'SomeCompanyName';\n    apName.value = 'P1';\n\n    checkItems[1].selected = true;\n\n    await element.requestUpdate();\n\n    primaryAction.click();\n\n    expect(editorAction).to.have.been.calledOnce;\n  });\n\n  it('allows to add more than one SPECIFICATION type IED to the document', async () => {\n    manufacturer.value = 'SomeCompanyName';\n    apName.value = 'P1';\n\n    checkItems[1].selected = true;\n\n    await element.requestUpdate();\n\n    primaryAction.click();\n\n    const action = editorAction.args[0][0].detail.action;\n    expect(action).to.satisfy(isCreate);\n\n    const createAction = <Create>action;\n    expect(createAction.checkValidity).to.exist;\n    expect(createAction.checkValidity!()).to.be.true;\n  });\n\n  it('enables primary action button only with required information', async () => {\n    expect(primaryAction).to.have.attribute('disabled');\n\n    manufacturer.value = 'SomeCompanyName';\n    apName.value = 'P1';\n    await element.requestUpdate();\n\n    expect(primaryAction).to.have.attribute('disabled');\n\n    checkItems[1].selected = true;\n    await element.requestUpdate();\n\n    expect(primaryAction).to.not.have.attribute('disabled');\n  });\n\n  it('IEDs data model show selected logical nodes and its structure', async () => {\n    manufacturer.value = 'SomeCompanyName';\n    apName.value = 'P1';\n\n    checkItems[1].selected = true;\n    checkItems[10].selected = true;\n    checkItems[15].selected = true;\n\n    await element.requestUpdate();\n\n    primaryAction.click();\n\n    const action = editorAction.args[0][0].detail.action;\n    expect(action).to.satisfy(isCreate);\n\n    const createAction = <Create>action;\n    await expect(createAction.new.element).dom.to.equalSnapshot();\n  });\n});\n"]}