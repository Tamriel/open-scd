{"version":3,"file":"SclHistory.test.js","sourceRoot":"","sources":["../../../../test/unit/menu/SclHistory.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport SclHistoryPlugin from '../../../src/menu/SclHistory.js';\n\ndescribe('testing sclHistory dialog', () => {\n  if (customElements.get('scl-history') === undefined)\n    customElements.define('scl-history', SclHistoryPlugin);\n  let plugin: SclHistoryPlugin;\n  let doc: XMLDocument;\n\n  describe('with a document loaded containing SCL history items', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/history.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      plugin = await fixture(html` <scl-history .doc=${doc}></scl-history> `);\n      plugin.run();\n      await plugin.requestUpdate();\n    });\n\n    it('looks like its latest snapshot', async () => {\n      await expect(plugin.historyLog).to.equalSnapshot();\n    });\n\n    it('has 7 items in the history list', () => {\n      expect(plugin.sclHistory.length).to.be.equal(7);\n    });\n\n    describe('testing createMessage function', () => {\n      it('creates a message with two valid strings', () => {\n        expect(plugin['createMessage']('string who', 'string why')).to.be.equal(\n          'string who : string why'\n        );\n      });\n\n      it('creates a message with one valid string or returns undefined', () => {\n        expect(plugin['createMessage']('string who', null)).to.be.equal(\n          'string who'\n        );\n        expect(plugin['createMessage'](null, 'string why')).to.be.equal(\n          'string why'\n        );\n        expect(plugin['createMessage'](null, null)).to.be.undefined;\n      });\n    });\n  });\n\n  describe('with no document', () => {\n    beforeEach(async () => {\n      plugin = await fixture(html` <scl-history></scl-history> `);\n      plugin.run();\n      await plugin.requestUpdate();\n    });\n    it('looks like its latest snapshot', async () => {\n      await expect(plugin.historyLog).to.equalSnapshot();\n    });\n    it('has no items in the history list', () => {\n      expect(plugin.sclHistory).to.be.empty;\n    });\n  });\n\n  describe('with a document without SCL history items', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/no-history.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      plugin = await fixture(html` <scl-history .doc=${doc}></scl-history> `);\n      plugin.run();\n      await plugin.requestUpdate();\n    });\n    it('looks like its latest snapshot', async () => {\n      await expect(plugin.historyLog).to.equalSnapshot();\n    });\n    it('has no items in the history list', () => {\n      expect(plugin.sclHistory).to.be.empty;\n    });\n  });\n});\n"]}