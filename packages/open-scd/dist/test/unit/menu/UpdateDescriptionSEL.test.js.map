{"version":3,"file":"UpdateDescriptionSEL.test.js","sourceRoot":"","sources":["../../../../test/unit/menu/UpdateDescriptionSEL.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../mock-open-scd.js';\n\nimport { ComplexAction, isSimple, isReplace } from '../../../src/foundation.js';\nimport UpdateDescriptionSel from '../../../src/menu/UpdateDescriptionSEL.js';\n\ndescribe('Update method for desc attributes in SEL IEDs', () => {\n  if (customElements.get('update-description-sel') === undefined)\n    customElements.define('update-description-sel', UpdateDescriptionSel);\n\n  let parent: MockOpenSCD;\n  let element: UpdateDescriptionSel;\n\n  let wizardAction: SinonSpy;\n  let editorAction: SinonSpy;\n\n  let signalList: string;\n\n  beforeEach(async () => {\n    parent = await fixture(html`\n      <mock-open-scd\n        ><update-description-sel></update-description-sel\n      ></mock-open-scd>\n    `);\n\n    element = <UpdateDescriptionSel>(\n      parent.querySelector('update-description-sel')!\n    );\n    await element.requestUpdate();\n\n    editorAction = spy();\n    window.addEventListener('editor-action', editorAction);\n    wizardAction = spy();\n    window.addEventListener('wizard', wizardAction);\n  });\n\n  it('allows to select signal list only as csv file', async () => {\n    expect(element.pluginFileUI).to.have.property('accept', '.csv');\n    expect(element.pluginFileUI).to.have.property('type', 'file');\n  });\n\n  it('allows to select signal list as csv file', async () => {\n    await element.run();\n  });\n\n  describe('working on SCL files without manufacturer SEL', () => {\n    beforeEach(async () => {\n      const doc = await fetch('test/testfiles/validators/zeroissues.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      element.doc = doc;\n\n      signalList = await fetch(\n        'test/testfiles/updatedesc/testSignalListSemicolon.csv'\n      ).then(response => response.text());\n\n      element.processSignalList(signalList);\n      await parent.requestUpdate();\n    });\n\n    it('cannot find any desc fields to update', async () => {\n      expect(wizardAction).to.have.been.calledOnce;\n      expect(parent.wizardUI.dialog?.querySelector('mwc-checked-list-item')).to\n        .be.null;\n    });\n  });\n\n  describe('working on SCL files containing manufacturer SEL', () => {\n    beforeEach(async () => {\n      const doc = await fetch('test/testfiles/updatedesc/updatedescSEL.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      element.doc = doc;\n    });\n\n    describe('using a semicolon separated file', () => {\n      beforeEach(async () => {\n        signalList = await fetch(\n          'test/testfiles/updatedesc/testSignalListSemicolon.csv'\n        ).then(response => response.text());\n\n        element.processSignalList(signalList);\n        await parent.requestUpdate();\n      });\n\n      it('creates filtered list with all proposed desc attribute updates', async () => {\n        await expect(parent.wizardUI.dialog).dom.to.equalSnapshot();\n      });\n\n      it('allows to update selected desc attributes updates', async () => {\n        parent.wizardUI?.dialog\n          ?.querySelector<HTMLElement>('mwc-button[slot=\"primaryAction\"]')!\n          .click();\n\n        await parent.updateComplete;\n        expect(editorAction).to.have.been.calledOnce;\n        expect(editorAction.args[0][0].detail.action).to.not.satisfy(isSimple);\n        const complexAction = <ComplexAction>(\n          editorAction.args[0][0].detail.action\n        );\n        expect(complexAction.actions.length).to.equal(7);\n        for (const action of complexAction.actions)\n          expect(action).to.satisfy(isReplace);\n      });\n    });\n\n    describe('using a comma separated (CSV) file', () => {\n      beforeEach(async () => {\n        signalList = await fetch(\n          'test/testfiles/updatedesc/testSignalListComma.csv'\n        ).then(response => response.text());\n\n        element.processSignalList(signalList);\n        await parent.requestUpdate();\n      });\n\n      it('creates filtered list with all proposed desc attribute updates', async () => {\n        await expect(parent.wizardUI.dialog).dom.to.equalSnapshot();\n      });\n\n      it('allows to update selected desc attributes updates', async () => {\n        parent.wizardUI?.dialog\n          ?.querySelector<HTMLElement>('mwc-button[slot=\"primaryAction\"]')!\n          .click();\n\n        await parent.updateComplete;\n        expect(editorAction).to.have.been.calledOnce;\n        expect(editorAction.args[0][0].detail.action).to.not.satisfy(isSimple);\n        const complexAction = <ComplexAction>(\n          editorAction.args[0][0].detail.action\n        );\n        expect(complexAction.actions.length).to.equal(7);\n        for (const action of complexAction.actions)\n          expect(action).to.satisfy(isReplace);\n      });\n    });\n  });\n});\n"]}