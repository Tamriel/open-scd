{"version":3,"file":"SubscriberInfo.test.js","sourceRoot":"","sources":["../../../../test/unit/menu/SubscriberInfo.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '@open-wc/testing';\n\nimport { createMissingIEDNameSubscriberInfo } from '../../../src/menu/SubscriberInfo.js';\nimport { Create, isCreate, SimpleAction } from '../../../src/foundation.js';\n\ndescribe('menu plugin adding subscriber info', () => {\n  describe('for Edition2 and higher files', () => {\n    let doc: Document;\n    let actions: SimpleAction[];\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/subscriberinfo2007.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      actions = createMissingIEDNameSubscriberInfo(doc);\n    });\n\n    it('does create one action per necessary IEDName creation', () => {\n      expect(actions.length).to.equal(4);\n    });\n\n    it('creates correct IEDName element referencing LN0 element', () => {\n      expect(actions[0]).to.satisfy(isCreate);\n      expect(\n        (<Element>(<Create>actions[0]).new.element).getAttribute('apRef')\n      ).to.equal('P1');\n      expect(\n        (<Element>(<Create>actions[0]).new.element).getAttribute('ldInst')\n      ).to.equal('CBSW');\n      expect(\n        (<Element>(<Create>actions[0]).new.element).getAttribute('prefix')\n      ).to.equal('');\n      expect(\n        (<Element>(<Create>actions[0]).new.element).getAttribute('lnClass')\n      ).to.equal('LLN0');\n      expect(\n        (<Element>(<Create>actions[0]).new.element).getAttribute('lnInst')\n      ).to.equal(null);\n      expect((<Create>actions[0]).new.element.textContent).to.equal('IED2');\n    });\n\n    it('creates correct IEDName element referencing LN element', () => {\n      expect(actions[1]).to.satisfy(isCreate);\n      expect(\n        (<Element>(<Create>actions[1]).new.element).getAttribute('apRef')\n      ).to.equal('P1');\n      expect(\n        (<Element>(<Create>actions[1]).new.element).getAttribute('ldInst')\n      ).to.equal('CBSW');\n      expect(\n        (<Element>(<Create>actions[1]).new.element).getAttribute('prefix')\n      ).to.equal('');\n      expect(\n        (<Element>(<Create>actions[1]).new.element).getAttribute('lnClass')\n      ).to.equal('XSWI');\n      expect(\n        (<Element>(<Create>actions[1]).new.element).getAttribute('lnInst')\n      ).to.equal('1');\n      expect((<Create>actions[1]).new.element.textContent).to.equal('IED2');\n    });\n\n    it('creates correct IEDName element referencing LN element', () => {\n      expect(actions[2]).to.satisfy(isCreate);\n      expect(\n        (<Element>(<Create>actions[2]).new.element).getAttribute('apRef')\n      ).to.equal('P1');\n      expect(\n        (<Element>(<Create>actions[2]).new.element).getAttribute('ldInst')\n      ).to.equal('Disconnectors');\n      expect(\n        (<Element>(<Create>actions[2]).new.element).getAttribute('prefix')\n      ).to.equal('DC');\n      expect(\n        (<Element>(<Create>actions[2]).new.element).getAttribute('lnClass')\n      ).to.equal('CSWI');\n      expect(\n        (<Element>(<Create>actions[2]).new.element).getAttribute('lnInst')\n      ).to.equal('1');\n      expect((<Create>actions[2]).new.element.textContent).to.equal('IED1');\n    });\n\n    it('creates correct IEDName element referencing LN element', () => {\n      expect(actions[3]).to.satisfy(isCreate);\n      expect(\n        (<Element>(<Create>actions[3]).new.element).getAttribute('apRef')\n      ).to.equal('P1');\n      expect(\n        (<Element>(<Create>actions[3]).new.element).getAttribute('ldInst')\n      ).to.equal('Disconnectors');\n      expect(\n        (<Element>(<Create>actions[3]).new.element).getAttribute('prefix')\n      ).to.equal('');\n      expect(\n        (<Element>(<Create>actions[3]).new.element).getAttribute('lnClass')\n      ).to.equal('CSWI');\n      expect(\n        (<Element>(<Create>actions[3]).new.element).getAttribute('lnInst')\n      ).to.equal('2');\n      expect((<Create>actions[3]).new.element.textContent).to.equal('IED1');\n    });\n  });\n\n  describe('for Edition1 files', () => {\n    let doc: Document;\n    let actions: SimpleAction[];\n\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/subscriberinfo2003.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      actions = createMissingIEDNameSubscriberInfo(doc);\n    });\n\n    it('does create one action per necessary IEDName creation', () => {\n      expect(actions.length).to.equal(2);\n    });\n\n    it('creates correct IEDName element', () => {\n      expect(actions[0]).to.satisfy(isCreate);\n      expect((<Create>actions[0]).new.element.textContent).to.equal('IED1');\n    });\n\n    it('creates correct IEDName element', () => {\n      expect(actions[1]).to.satisfy(isCreate);\n      expect((<Create>actions[1]).new.element.textContent).to.equal('IED1');\n    });\n\n    it('does not add Edition2 attributes into the IEDName element', () => {\n      actions.forEach(action => {\n        expect((<Element>(<Create>action).new.element).getAttribute('apRef')).to\n          .be.null;\n        expect((<Element>(<Create>action).new.element).getAttribute('ldInst'))\n          .to.be.null;\n        expect((<Element>(<Create>action).new.element).getAttribute('prefix'))\n          .to.be.null;\n        expect((<Element>(<Create>action).new.element).getAttribute('lnClass'))\n          .to.be.null;\n        expect((<Element>(<Create>action).new.element).getAttribute('lnInst'))\n          .to.be.null;\n      });\n    });\n  });\n});\n"]}