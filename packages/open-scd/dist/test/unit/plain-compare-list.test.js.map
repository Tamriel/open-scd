{"version":3,"file":"plain-compare-list.test.js","sourceRoot":"","sources":["../../../test/unit/plain-compare-list.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAEzD,OAAO,8BAA8B,CAAC;AAGtC,QAAQ,CAAC,oBAAoB,EAAE,GAAG,EAAE;IAClC,IAAI,OAAyB,CAAC;IAE9B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,2CAA2C,CAChD,CAAC;QACF,MAAM,OAAO,CAAC,cAAc,CAAC;IAC/B,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IACH,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;QAC1B,IAAI,GAAgB,CAAC;QACrB,IAAI,QAAqB,CAAC;QAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;YAClB,GAAG,GAAG,MAAM,KAAK,CAAC,8CAA8C,CAAC;iBAC5D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;YAC1E,QAAQ,GAAG,MAAM,KAAK,CAAC,+CAA+C,CAAC;iBAClE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;iBACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;YAE1E,OAAO,CAAC,cAAc;gBAClB,GAAG,CAAC,aAAa,CAAC,oCAAoC,CAAE,CAAC;YAC7D,OAAO,CAAC,eAAe;gBACnB,QAAQ,CAAC,aAAa,CAAC,oCAAoC,CAAE,CAAC;YAElE,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;YACtC,OAAO,CAAC,cAAc,GAAI,cAAc,CAAC;YAEzC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC5C,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,oDAAoD,EAAE,KAAK,IAAI,EAAE;YAChE,OAAO,CAAC,gBAAgB,GAAG,UAAU,CAAC;YACtC,OAAO,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;YAE7C,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACvD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AAEL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../src/plain-compare-list';\nimport { PlainCompareList } from '../../src/plain-compare-list.js';\n\ndescribe('Plain Compare List', () => {\n  let element: PlainCompareList;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<plain-compare-list></plain-compare-list>`\n    );\n    await element.updateComplete;\n  });\n  describe('Empty list', () => {\n    it('looks like the latest snapshot', async () => {\n      await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n  describe('Basic List', () => {\n    let doc: XMLDocument;\n    let template: XMLDocument;\n\n    beforeEach(async () => {\n        doc = await fetch('/test/testfiles/menu/compare-ied-changed.scd')\n            .then(response => response.text())\n            .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n        template = await fetch('/test/testfiles/menu/compare-ied-original.scd')\n            .then(response => response.text())\n            .then(str => new DOMParser().parseFromString(str, 'application/xml'));   \n            \n        element.leftHandObject =\n            doc.querySelector('IED[name=\"FieldC_QA1_QB1_QB2_QC9\"]')!;\n        element.rightHandObject =\n            template.querySelector('IED[name=\"FieldC_QA1_QB1_QB2_QC9\"]')!;\n\n        element.leftHandTitle = 'Project doc';\n        element.rightHandTitle =  'Template doc';\n\n        await element.requestUpdate();\n    });\n\n    it('looks like the latest snapshot', async () => {\n        await expect(element).shadowDom.to.equalSnapshot();\n    });\n\n    it('Has a subtitlte, so looks like the latest snapshot', async () => {\n        element.leftHandSubtitle = 'subtitle';\n        element.rightHandSubtitle = 'right subtitle';\n\n        await element.requestUpdate();\n\n        await expect(element).shadowDom.to.equalSnapshot();\n    });\n  });\n\n});\n"]}