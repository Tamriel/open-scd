{"version":3,"file":"smv.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/smv.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\nimport fc, { hexaString, integer } from 'fast-check';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport {\n  ComplexAction,\n  Create,\n  Delete,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport { editSMvWizard } from '../../../src/wizards/smv.js';\nimport { invertedRegex, MAC, regExp } from '../../foundation.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\n\ndescribe('Wizards for SCL element SMV', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n  let input: WizardInputElement | undefined;\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('include an edit wizard that', () => {\n    beforeEach(async () => {\n      doc = await fetch('/test/testfiles/wizards/sampledvaluecontrol.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      const wizard = editSMvWizard(doc.querySelector('SMV')!);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      inputs = Array.from(element.wizardUI.inputs);\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n\n    describe('contains an input to edit P element of type MAC-Address', () => {\n      beforeEach(() => {\n        input = inputs.find(input => input.label === 'MAC-Address');\n      });\n\n      it('is always rendered', () => expect(input).to.exist);\n\n      it('allow to edit for valid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(MAC(), async testValue => {\n            input!.value = testValue.toUpperCase();\n            await element.requestUpdate();\n            expect(input!.checkValidity()).to.be.true;\n          })\n        ));\n\n      it('does not allow to edit for invalid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(invertedRegex(regExp.MAC), async testValue => {\n            input!.value = testValue;\n            await element.requestUpdate();\n            expect(input!.checkValidity()).to.be.false;\n          })\n        ));\n    });\n\n    describe('contains an input to edit P element of type APPID', () => {\n      beforeEach(() => {\n        input = inputs.find(input => input.label === 'APPID');\n      });\n\n      it('is always rendered', () => expect(input).to.exist);\n\n      it('allow to edit for valid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            hexaString({ minLength: 4, maxLength: 4 }),\n            async testValue => {\n              input!.value = testValue.toUpperCase();\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.true;\n            }\n          )\n        ));\n\n      it('does not allow to edit for invalid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(hexaString({ minLength: 5 }), async testValue => {\n            input!.value = testValue.toUpperCase();\n            await element.requestUpdate();\n            expect(input!.checkValidity()).to.be.false;\n          })\n        ));\n\n      it('does not allow to edit characters < 4', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            hexaString({ minLength: 0, maxLength: 3 }),\n            async testValue => {\n              input!.value = testValue.toUpperCase();\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.false;\n            }\n          )\n        ));\n    });\n\n    describe('contains an input to edit P element of type VLAN-ID', () => {\n      beforeEach(() => {\n        input = inputs.find(input => input.label === 'VLAN-ID');\n      });\n\n      it('is always rendered', () => expect(input).to.exist);\n\n      it('allow to edit for valid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            hexaString({ minLength: 3, maxLength: 3 }),\n            async testValue => {\n              input!.value = testValue.toUpperCase();\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.true;\n            }\n          )\n        ));\n\n      it('does not allow to edit for invalid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(hexaString({ minLength: 4 }), async testValue => {\n            input!.value = testValue.toUpperCase();\n            await element.requestUpdate();\n            expect(input!.checkValidity()).to.be.false;\n          })\n        ));\n\n      it('does not allow to edit characters < 3', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            hexaString({ minLength: 0, maxLength: 2 }),\n            async testValue => {\n              input!.value = testValue.toUpperCase();\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.false;\n            }\n          )\n        ));\n    });\n\n    describe('contains an input to edit P element of type VLAN-PRIORITY', () => {\n      beforeEach(() => {\n        input = inputs.find(input => input.label === 'VLAN-PRIORITY');\n      });\n\n      it('is always rendered', () => expect(input).to.exist);\n\n      it('allow to edit for valid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            integer({ min: 0, max: 7 }).map(num => `${num}`),\n            async testValue => {\n              input!.value = testValue;\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.true;\n            }\n          )\n        ));\n\n      it('does not allow to edit for invalid input', async () =>\n        await fc.assert(\n          fc.asyncProperty(\n            integer({ min: 8 }).map(num => `${num}`),\n            async testValue => {\n              input!.value = testValue;\n              await element.requestUpdate();\n              expect(input!.checkValidity()).to.be.false;\n            }\n          )\n        ));\n    });\n\n    it('does not update SMV element when no P element has changed', async () => {\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent.notCalled).to.be.true;\n    });\n\n    it('properly updates a P element of type MAC-Address', async () => {\n      input = <WizardTextField>(\n        inputs.find(input => input.label === 'MAC-Address')\n      );\n      input.value = '01-0C-CD-01-01-00';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n\n      const oldAddress = <Element>(\n        (<Delete>complexAction.actions[0]).old.element\n      );\n      const newAddress = <Element>(\n        (<Create>complexAction.actions[1]).new.element\n      );\n\n      expect(\n        oldAddress.querySelector<Element>('P[type=\"MAC-Address\"]')?.textContent\n      ).to.equal('01-0C-CD-04-00-20');\n      expect(\n        newAddress.querySelector<Element>('P[type=\"MAC-Address\"]')?.textContent\n      ).to.equal('01-0C-CD-01-01-00');\n    });\n\n    it('properly updates a P element of type APPID', async () => {\n      input = <WizardTextField>inputs.find(input => input.label === 'APPID');\n      input.value = '001A';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n\n      const oldAddress = <Element>(\n        (<Delete>complexAction.actions[0]).old.element\n      );\n      const newAddress = <Element>(\n        (<Create>complexAction.actions[1]).new.element\n      );\n\n      expect(\n        oldAddress.querySelector<Element>('P[type=\"APPID\"]')?.textContent\n      ).to.equal('4002');\n      expect(\n        newAddress.querySelector<Element>('P[type=\"APPID\"]')?.textContent\n      ).to.equal('001A');\n    });\n\n    it('properly updates a P element of type VLAN-ID', async () => {\n      input = <WizardTextField>inputs.find(input => input.label === 'VLAN-ID');\n      input.value = '07D';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n\n      const oldAddress = <Element>(\n        (<Delete>complexAction.actions[0]).old.element\n      );\n      const newAddress = <Element>(\n        (<Create>complexAction.actions[1]).new.element\n      );\n\n      expect(\n        oldAddress.querySelector<Element>('P[type=\"VLAN-ID\"]')?.textContent\n      ).to.equal('007');\n      expect(\n        newAddress.querySelector<Element>('P[type=\"VLAN-ID\"]')?.textContent\n      ).to.equal('07D');\n    });\n\n    it('properly updates a P element of type VLAN-PRIORITY', async () => {\n      input = <WizardTextField>(\n        inputs.find(input => input.label === 'VLAN-PRIORITY')\n      );\n      input.value = '3';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n\n      const complexAction = <ComplexAction>actionEvent.args[0][0].detail.action;\n\n      const oldAddress = <Element>(\n        (<Delete>complexAction.actions[0]).old.element\n      );\n      const newAddress = <Element>(\n        (<Create>complexAction.actions[1]).new.element\n      );\n\n      expect(\n        oldAddress.querySelector<Element>('P[type=\"VLAN-PRIORITY\"]')\n          ?.textContent\n      ).to.equal('4');\n      expect(\n        newAddress.querySelector<Element>('P[type=\"VLAN-PRIORITY\"]')\n          ?.textContent\n      ).to.equal('3');\n    });\n  });\n});\n"]}