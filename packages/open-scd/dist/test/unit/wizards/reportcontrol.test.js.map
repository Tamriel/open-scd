{"version":3,"file":"reportcontrol.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/reportcontrol.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAY,GAAG,EAAE,MAAM,OAAO,CAAC;AACtC,OAAO,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAEzC,OAAO,gCAAgC,CAAC;AAGxC,OAAO,EAIL,QAAQ,EACR,QAAQ,EACR,QAAQ,GAGT,MAAM,4BAA4B,CAAC;AAEpC,OAAO,EACL,2BAA2B,EAC3B,yBAAyB,EACzB,uBAAuB,EACvB,yBAAyB,EACzB,yBAAyB,EACzB,8BAA8B,GAC/B,MAAM,uCAAuC,CAAC;AAC/C,OAAO,EAAE,aAAa,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAC;AAKzE,QAAQ,CAAC,uCAAuC,EAAE,GAAG,EAAE;IACrD,IAAI,GAAgB,CAAC;IACrB,IAAI,OAAgB,CAAC;IACrB,IAAI,MAA4B,CAAC;IAEjC,IAAI,aAA0B,CAAC;IAE/B,IAAI,WAAqB,CAAC;IAE1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,uBAAuB,QAAQ,kBAAkB,CACtD,CAAC;QACF,GAAG,GAAG,MAAM,KAAK,CAAC,0CAA0C,CAAC;aAC1D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;aACjC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,SAAS,EAAE,CAAC,eAAe,CAAC,GAAG,EAAE,iBAAiB,CAAC,CAAC,CAAC;QAExE,WAAW,GAAG,GAAG,EAAE,CAAC;QACpB,MAAM,CAAC,gBAAgB,CAAC,eAAe,EAAE,WAAW,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,4BAA4B,EAAE,GAAG,EAAE;QAC1C,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;YAClD,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,MAAM,MAAM,GAAG,uBAAuB,CACpC,GAAG,CAAC,aAAa,CAAC,eAAe,CAAE,CACpC,CAAC;gBACF,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAE9B,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBAE7C,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;gBAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,+BAA+B;YACzE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;gBAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YAC/D,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAEjB,EAAE,CAAC,4CAA4C,EAAE,KAAK,IAAI,EAAE;gBAC1D,MAAM,EAAE,CAAC,MAAM,CACb,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,KAAK,EAAC,IAAI,EAAC,EAAE;oBAClE,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;oBACvB,MAAwB,MAAM,CAAC,CAAC,CAAE,CAAC,aAAa,EAAE,CAAC;oBACnD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC/C,CAAC,CAAC,CACH,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;gBAC7D,MAAM,EAAE,CAAC,MAAM,CACb,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,KAAK,EAAC,IAAI,EAAC,EAAE;oBAC/D,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC;oBACvB,MAAwB,MAAM,CAAC,CAAC,CAAE,CAAC,aAAa,EAAE,CAAC;oBACnD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBAChD,CAAC,CAAC,CACH,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;gBAC7D,MAAM,EAAE,CAAC,MAAM,CACb,EAAE,CAAC,aAAa,CACd,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EACxC,KAAK,EAAC,OAAO,EAAC,EAAE;oBACd,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC;oBAC1B,MAAwB,MAAM,CAAC,CAAC,CAAE,CAAC,aAAa,EAAE,CAAC;oBACnD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC/C,CAAC,CACF,CACF,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,kEAAkE,EAAE,KAAK,IAAI,EAAE;gBAChF,MAAM,EAAE,CAAC,MAAM,CACb,EAAE,CAAC,aAAa,CACd,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,EAClC,KAAK,EAAC,OAAO,EAAC,EAAE;oBACd,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,OAAO,CAAC;oBAC1B,MAAwB,MAAM,CAAC,CAAC,CAAE,CAAC,aAAa,EAAE,CAAC;oBACnD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBAChD,CAAC,CACF,CACF,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;gBAC5D,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;gBAC1B,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,MAAM,EAAE,CAAC,MAAM,CACb,EAAE,CAAC,aAAa,CACd,OAAO,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EACxC,KAAK,EAAC,MAAM,EAAC,EAAE;oBACb,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;oBACrB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;oBAC5B,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC3C,CAAC,CACF,CACF,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,iEAAiE,EAAE,KAAK,IAAI,EAAE;gBAC/E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;gBAC1B,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,MAAM,EAAE,CAAC,MAAM,CACb,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE,KAAK,EAAC,MAAM,EAAC,EAAE;oBAClE,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;oBACrB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;oBAC5B,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBAC5C,CAAC,CAAC,CACH,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,iFAAiF,EAAE,KAAK,IAAI,EAAE;gBAC/F,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC3C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,iEAAiE,EAAE,KAAK,IAAI,EAAE;gBAC/E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,KAAK,GAAG,aAAa,CAAC;gBAC5B,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBACvE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAChD,MAAM,EACN,aAAa,CACd,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,iEAAiE,EAAE,KAAK,IAAI,EAAE;gBAC/E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;gBAC1B,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;gBACvB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAC/D,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;gBAC3E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,KAAK,GAAG,cAAc,CAAC;gBAC7B,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAChD,OAAO,EACP,WAAW,CACZ,CAAC;gBACF,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAChD,OAAO,EACP,cAAc,CACf,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;gBAC7E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC;gBAC3B,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;gBACtE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACzE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,+DAA+D,EAAE,KAAK,IAAI,EAAE;gBAC7E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;gBACnB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACrE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACtE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE;gBAC5E,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;gBAC1B,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBACrB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACvE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;gBACxE,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;gBACzC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;gBAClB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;gBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;gBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;gBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAExC,MAAM,YAAY,GAA4B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACjE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBAChE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;gBAChE,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBAC/D,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACjE,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;gBAC7C,UAAU,CAAC,KAAK,IAAI,EAAE;oBACpB,MAAM,MAAM,GAAG,uBAAuB,CACpC,GAAG,CAAC,aAAa,CAAC,iCAAiC,CAAE,CACtD,CAAC;oBACF,OAAO,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;oBAC5B,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;oBAE9B,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;oBACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;oBAE9B,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBAE7C,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;oBAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,+BAA+B;gBACzE,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,yBAAyB,EAAE,GAAG,EAAE;oBACjC,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;oBACzC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;gBACtC,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;oBACrE,GAAG,CAAC,aAAa,CAAC,0BAA0B,CAAE,CAAC,MAAM,EAAE,CAAC;oBAExD,MAAM,KAAK,GAAoB,MAAM,CAAC,CAAC,CAAC,CAAC;oBACzC,KAAK,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;oBAC1B,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;oBAClB,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;oBAE5B,aAAa,CAAC,KAAK,EAAE,CAAC;oBACtB,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;oBAC9B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;oBAErC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;oBACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM,CAAiB,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBAEhE,MAAM,YAAY,GAA2B,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBAChE,MAAM,CAAW,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAC1D,YAAY,CACb,CAAC;oBACF,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACjE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;gBAC7C,MAAM,OAAO,GAAY,IAAI,SAAS,EAAE,CAAC,eAAe,CACtD;;;;;mBAKS,EACT,iBAAiB,CAClB,CAAC,eAAe,CAAC;gBAElB,MAAM,OAAO,GAAY,IAAI,SAAS,EAAE,CAAC,eAAe,CACtD;;;;qBAIW,EACX,iBAAiB,CAClB,CAAC,eAAe,CAAC;gBAElB,MAAM,MAAM,GAAY,IAAI,SAAS,EAAE,CAAC,eAAe,CACrD;;;;uBAIa,EACb,iBAAiB,CAClB,CAAC,eAAe,CAAC;gBAElB,MAAM,OAAO,GAAY,IAAI,SAAS,EAAE,CAAC,eAAe,CACtD;;;;mBAIS,EACT,iBAAiB,CAClB,CAAC,eAAe,CAAC;gBAElB,MAAM,aAAa,GAAY,CAC7B,IAAI,SAAS,EAAE,CAAC,eAAe,CAC7B,mDAAmD,EACnD,iBAAiB,CAClB,CAAC,eAAe,CAClB,CAAC;gBAEF,EAAE,CAAC,yFAAyF,EAAE,GAAG,EAAE;oBACjG,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,eAAe,CAAE,CAAC;oBAC9D,MAAM,OAAO,GAAa,CACxB,yBAAyB,CAAC,aAAa,CAAE,CAAC,OAAO,CAClD,CAAC;oBACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;oBACvD,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CACrC,OAAO,CAAC,aAAa,CAAC,SAAS,CAAC,CACjC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,0EAA0E,EAAE,GAAG,EAAE;oBAClF,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,eAAe,CAAE,CAAC;oBAC9D,MAAM,OAAO,GAAa,CACxB,yBAAyB,CAAC,aAAa,CAAE,CAAC,OAAO,CAClD,CAAC;oBACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,uEAAuE,EAAE,GAAG,EAAE;oBAC/E,MAAM,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC,eAAe,CAAE,CAAC;oBAC7D,MAAM,OAAO,GAAa,CACxB,yBAAyB,CAAC,aAAa,CAAE,CAAC,OAAO,CAClD,CAAC;oBACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,gEAAgE,EAAE,GAAG,EAAE;oBACxE,MAAM,aAAa,GAAG,OAAO,CAAC,aAAa,CAAC,eAAe,CAAE,CAAC;oBAC9D,MAAM,OAAO,GAAa,CACxB,yBAAyB,CAAC,aAAa,CAAE,CAAC,OAAO,CAClD,CAAC;oBACF,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBACnC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;oBACxC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBACzD,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,6CAA6C,EAAE,GAAG,EAAE;oBACrD,MAAM,MAAM,GAAG,yBAAyB,CAAC,aAAa,CAAC,CAAC;oBACxD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;gBAC5B,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,sEAAsE,EAAE,GAAG,EAAE;YACpF,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,MAAM,GAAG,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CACzC,2DAA2D,EAC3D,iBAAiB,CAClB,CAAC;gBAEF,MAAM,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC,eAAe,CAAE,CAAC;gBAE1D,MAAM,MAAM,GAAG,uBAAuB,CAAC,aAAa,CAAC,CAAC;gBACtD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;gBAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YAC/D,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,6BAA6B,EAAE,GAAG,EAAE;QAC3C,QAAQ,CAAC,qCAAqC,EAAE,GAAG,EAAE;YACnD,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,MAAM,MAAM,GAAG,yBAAyB,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;gBAC9D,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAE9B,MAAM,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,+BAA+B;YACzE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE,CAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,OAAO,CACrE,IAAI,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;YACnC,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,MAAM,MAAM,GAAG,yBAAyB,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAE,CAAC,CAAC;gBACnE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;gBACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;gBAE9B,MAAM,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,+BAA+B;YACzE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE,CAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,OAAO,CACrE,IAAI,CACL,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,8BAA8B,EAAE,GAAG,EAAE;QAC5C,IAAI,UAAsB,CAAC;QAE3B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,MAAM,GAAG,yBAAyB,CAAC,GAAG,CAAC,aAAa,CAAC,KAAK,CAAE,CAAC,CAAC;YACpE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAE7C,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,aAAa,CACxC,kCAAkC,CACnC,CACF,CAAC;YAEF,UAAU,GAAe,CACvB,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,aAAa,CAAC,CAC1D,CAAC;YAEF,MAAM,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,+BAA+B;QACzE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gBAAgB,EAAE,GAAG,EAAE,CACxB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAEvD,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEjB,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEjB,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEjB,EAAE,CAAC,+CAA+C,EAAE,KAAK,IAAI,EAAE;YAC7D,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QACnE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEjB,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC;YACrC,MAAM,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACpD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;YAC5D,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,CAAW,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAC1D,eAAe,CAChB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE,KAAK,IAAI,EAAE;YACjE,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,CAAW,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC1E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4DAA4D,EAAE,KAAK,IAAI,EAAE;YAC1E,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,YAAY,GAAW,CACX,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CACjE,CAAC;YACF,MAAM,CAAW,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;QACnE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;YAC/D,MAAM,IAAI,GAAG;gBACX,iBAAiB;gBACjB,mCAAmC;gBACnC,+BAA+B;gBAC/B,qBAAqB;gBACrB,2BAA2B;aAC5B,CAAC;YAEF,UAAU,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;YAC1B,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,YAAY,GAAW,CACX,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CACjE,CAAC;YACF,MAAM,CAAW,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC;YACrE,MAAM,CAAW,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC3E,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE;YACvE,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,SAAS,GAAa,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,aAAa,CACjE,WAAW,CACZ,CAAC;YACF,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC3B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,uDAAuD,EAAE,KAAK,IAAI,EAAE;YACrE,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,MAAM,GAAa,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,aAAa,CAC9D,QAAQ,CACT,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YACjD,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,sFAAsF,EAAE,KAAK,IAAI,EAAE;YACpG,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,UAAU,GAAa,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,aAAa,CAClE,YAAY,CACb,CAAC;YACF,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kFAAkF,EAAE,KAAK,IAAI,EAAE;YAChG,MAAM,GAAG,GAAoB,CAC3B,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CACvC,uCAAuC,CACxC,CACF,CAAC;YACF,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,CAAC;YACxB,MAAM,GAAG,CAAC,aAAa,EAAE,CAAC;YAE1B,MAAM,aAAa,CAAC,KAAK,EAAE,CAAC;YAE5B,MAAM,OAAO,GAAmB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,MAAO;iBAClE,OAAO,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC1B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpC,MAAM,YAAY,GAAW,MAAM,CAAC;YACpC,MAAM,UAAU,GAAa,YAAY,CAAC,GAAG,CAAC,OAAQ,CAAC,aAAa,CAClE,YAAY,CACb,CAAC;YACF,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,uDAAuD,EAAE,GAAG,EAAE;QACrE,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,MAAM,GAAG,2BAA2B,CAAC,GAAG,CAAC,CAAC;YAChD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,MAAM,OAAO,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC,CAAC,+BAA+B;QACzE,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,mCAAmC,EAAE,GAAG,EAAE;QACjD,IAAI,UAAwB,CAAC;QAC7B,IAAI,QAAsB,CAAC;QAE3B,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,MAAM,mBAAmB,GAAG,GAAG,CAAC,aAAa,CAC3C,iDAAiD,CACjD,CAAC;YACH,MAAM,MAAM,GAAG,8BAA8B,CAAC,mBAAmB,CAAC,CAAC;YACnE,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;YACpC,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAE9B,UAAU,GAAiB,CACzB,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CAAC,eAAe,CAAC,CACxD,CAAC;YAEF,aAAa,GAAgB,CAC3B,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,aAAa,CACpC,kCAAkC,CACnC,CACF,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;YAC9C,MAAM,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC/D,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAEjB,EAAE,CAAC,wCAAwC,EAAE,GAAG,EAAE,CAChD,MAAM,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAEvC,QAAQ,CAAC,2DAA2D,EAAE,GAAG,EAAE;YACzE,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,QAAQ,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAE,CAAC;gBACvE,MAAM,OAAO,CAAC,aAAa,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE,CAChC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAE5C,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;gBACtC,QAAQ,CAAC,KAAK,EAAE,CAAC;gBACjB,aAAa,CAAC,KAAK,EAAE,CAAC;gBACtB,MAAM,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;YAC1C,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\nimport fc, { integer } from 'fast-check';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport {\n  ComplexAction,\n  Create,\n  Delete,\n  isCreate,\n  isDelete,\n  isSimple,\n  Replace,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  reportControlParentSelector,\n  createReportControlWizard,\n  editReportControlWizard,\n  removeReportControlAction,\n  selectReportControlWizard,\n  reportControlCopyToIedSelector,\n} from '../../../src/wizards/reportcontrol.js';\nimport { inverseRegExp, regExp, regexString } from '../../foundation.js';\nimport { FinderList } from '../../../src/finder-list.js';\nimport { FilteredList } from '../../../src/filtered-list.js';\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\ndescribe('Wizards for SCL ReportControl element', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    doc = await fetch('test/testfiles/wizards/reportcontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('define an edit wizard that', () => {\n    describe('for complete ReportControl element', () => {\n      beforeEach(async () => {\n        const wizard = editReportControlWizard(\n          doc.querySelector('ReportControl')!\n        );\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        inputs = Array.from(element.wizardUI.inputs);\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('edits name attribute only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.tAsciName, 1, 32), async name => {\n            inputs[0].value = name;\n            await (<WizardTextField>inputs[0]).requestUpdate();\n            expect(inputs[0].checkValidity()).to.be.true;\n          })\n        );\n      });\n\n      it('rejects name attribute starting with decimals', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.decimal, 1, 1), async name => {\n            inputs[0].value = name;\n            await (<WizardTextField>inputs[0]).requestUpdate();\n            expect(inputs[0].checkValidity()).to.be.false;\n          })\n        );\n      });\n\n      it('edits bufTime attribute only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(\n            integer({ min: 0 }).map(num => `${num}`),\n            async bufTime => {\n              inputs[6].value = bufTime;\n              await (<WizardTextField>inputs[6]).requestUpdate();\n              expect(inputs[6].checkValidity()).to.be.true;\n            }\n          )\n        );\n      });\n\n      it('rejects bufTime attribute starting with not being a unsigned int', async () => {\n        await fc.assert(\n          fc.asyncProperty(\n            regexString(inverseRegExp.uint, 1),\n            async bufTime => {\n              inputs[6].value = bufTime;\n              await (<WizardTextField>inputs[6]).requestUpdate();\n              expect(inputs[6].checkValidity()).to.be.false;\n            }\n          )\n        );\n      });\n\n      it('edits intgPd attribute only for valid inputs', async () => {\n        const input = <WizardTextField>inputs[7];\n        input.nullSwitch?.click();\n        await input.requestUpdate();\n\n        await fc.assert(\n          fc.asyncProperty(\n            integer({ min: 0 }).map(num => `${num}`),\n            async intgPd => {\n              input.value = intgPd;\n              await input.requestUpdate();\n              expect(input.checkValidity()).to.be.true;\n            }\n          )\n        );\n      });\n\n      it('rejects intgPd attribute starting with not being a unsigned int', async () => {\n        const input = <WizardTextField>inputs[7];\n        input.nullSwitch?.click();\n        await input.requestUpdate();\n\n        await fc.assert(\n          fc.asyncProperty(regexString(inverseRegExp.uint, 1), async intgPd => {\n            input.value = intgPd;\n            await input.requestUpdate();\n            expect(input.checkValidity()).to.be.false;\n          })\n        );\n      });\n\n      it('does not update the ReportControl element when no attribute nor Val has changed', async () => {\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent.notCalled).to.be.true;\n      });\n\n      it('update a ReportControl element when only name attribute changed', async () => {\n        const input = <WizardTextField>inputs[0];\n        input.value = 'myNewCbName';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.old.element).to.have.attribute('name', 'ReportCb');\n        expect(updateAction.new.element).to.have.attribute(\n          'name',\n          'myNewCbName'\n        );\n      });\n\n      it('update a ReportControl element when only desc attribute changed', async () => {\n        const input = <WizardTextField>inputs[1];\n        input.nullSwitch?.click();\n        input.value = 'myDesc';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.old.element).to.not.have.attribute('desc');\n        expect(updateAction.new.element).to.have.attribute('desc', 'myDesc');\n      });\n\n      it('update a ReportControl element when rptID attribute changed', async () => {\n        const input = <WizardTextField>inputs[3];\n        input.value = 'myNewType/ID';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.old.element).to.have.attribute(\n          'rptID',\n          'reportCb1'\n        );\n        expect(updateAction.new.element).to.have.attribute(\n          'rptID',\n          'myNewType/ID'\n        );\n      });\n\n      it('update a ReportControl element when indexed attribute changed', async () => {\n        const input = <WizardTextField>inputs[4];\n        input.maybeValue = 'false';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.old.element).to.have.attribute('indexed', 'true');\n        expect(updateAction.new.element).to.have.attribute('indexed', 'false');\n      });\n\n      it('update a ReportControl element when bufTime attribute changed', async () => {\n        const input = <WizardTextField>inputs[6];\n        input.value = '54';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.old.element).to.have.attribute('bufTime', '100');\n        expect(updateAction.new.element).to.have.attribute('bufTime', '54');\n      });\n\n      it('update a ReportControl element when intgPd attribute changed', async () => {\n        const input = <WizardTextField>inputs[7];\n        input.nullSwitch?.click();\n        input.value = '1000';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.old.element).to.not.have.attribute('intgPd');\n        expect(updateAction.new.element).to.have.attribute('intgPd', '1000');\n      });\n\n      it('updates the RptEnable element with changed max attribute', async () => {\n        const input = <WizardTextField>inputs[5];\n        input.value = '6';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n\n        const updateAction = <Replace>(<ComplexAction>action).actions[0];\n        expect(updateAction.new.element.tagName).to.equal('RptEnabled');\n        expect(updateAction.old.element.tagName).to.equal('RptEnabled');\n        expect(updateAction.old.element).to.have.attribute('max', '5');\n        expect(updateAction.new.element).to.have.attribute('max', '6');\n      });\n\n      describe('with missing RptEnabled child', () => {\n        beforeEach(async () => {\n          const wizard = editReportControlWizard(\n            doc.querySelector('ReportControl[name=\"ReportCb2\"]')!\n          );\n          element.workflow.length = 0;\n          await element.requestUpdate();\n\n          element.workflow.push(() => wizard);\n          await element.requestUpdate();\n\n          inputs = Array.from(element.wizardUI.inputs);\n\n          primaryAction = <HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          );\n\n          await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n        });\n\n        it('nulles max Client input', () => {\n          const input = <WizardTextField>inputs[5];\n          expect(input.maybeValue).to.be.null;\n        });\n\n        it('creates a RptEnable element when max Client activated', async () => {\n          doc.querySelector('ReportControl>RptEnabled')!.remove();\n\n          const input = <WizardTextField>inputs[5];\n          input.nullSwitch?.click();\n          input.value = '6';\n          await input.requestUpdate();\n\n          primaryAction.click();\n          await element.requestUpdate();\n          expect(actionEvent).to.be.calledOnce;\n\n          const action = actionEvent.args[0][0].detail.action;\n          expect(action).to.not.satisfy(isSimple);\n          expect((<ComplexAction>action).actions[0]).to.satisfy(isCreate);\n\n          const updateAction = <Create>(<ComplexAction>action).actions[0];\n          expect((<Element>updateAction.new.element).tagName).to.equal(\n            'RptEnabled'\n          );\n          expect(updateAction.new.element).to.have.attribute('max', '6');\n        });\n      });\n\n      describe('contains a remove button that', () => {\n        const ln01gse = <Element>new DOMParser().parseFromString(\n          `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n                <DataSet name=\"myDataSet\"/>\n                <DataSet name=\"myDataSet2\"/>\n                <ReportControl name=\"myName\" datSet=\"myDataSet\"/>\n                <ReportControl name=\"myName2\" datSet=\"myDataSet2\"/>\n            </LN0>`,\n          'application/xml'\n        ).documentElement;\n\n        const ln02gse = <Element>new DOMParser().parseFromString(\n          `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n                  <DataSet name=\"myDataSet\"/>\n                  <ReportControl name=\"myName\" datSet=\"myDataSet\"/>\n                  <ReportControl name=\"myName2\" datSet=\"myDataSet\"/>\n              </LN0>`,\n          'application/xml'\n        ).documentElement;\n\n        const ln02rp = <Element>new DOMParser().parseFromString(\n          `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n                    <DataSet name=\"myDataSet\"/>\n                    <ReportControl name=\"myName\" datSet=\"myDataSet\"/>\n                    <GSEControl name=\"myName2\" datSet=\"myDataSet\"/>\n                </LN0>`,\n          'application/xml'\n        ).documentElement;\n\n        const ln02smv = <Element>new DOMParser().parseFromString(\n          `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n                <DataSet name=\"myDataSet\"/>\n                <ReportControl name=\"myName\" datSet=\"myDataSet\"/>\n                <SampledValueControl name=\"myName2\" datSet=\"myDataSet\"/>\n            </LN0>`,\n          'application/xml'\n        ).documentElement;\n\n        const missingparent = <Element>(\n          new DOMParser().parseFromString(\n            `<ReportControl name=\"myName\" datSet=\"myDataSet\"/>`,\n            'application/xml'\n          ).documentElement\n        );\n\n        it('removes ReportControl and its referenced DataSet if no other ReportControl are assigned', () => {\n          const reportControl = ln01gse.querySelector('ReportControl')!;\n          const actions = <Delete[]>(\n            removeReportControlAction(reportControl)!.actions\n          );\n          expect(actions.length).to.equal(2);\n          expect(actions[0]).to.satisfy(isDelete);\n          expect(actions[0].old.element).to.equal(reportControl);\n          expect(actions[1]).to.satisfy(isDelete);\n          expect(actions[1].old.element).to.equal(\n            ln01gse.querySelector('DataSet')\n          );\n        });\n\n        it('does not remove if another ReportControl is assigned to the same DataSet', () => {\n          const reportControl = ln02gse.querySelector('ReportControl')!;\n          const actions = <Delete[]>(\n            removeReportControlAction(reportControl)!.actions\n          );\n          expect(actions.length).to.equal(1);\n          expect(actions[0]).to.satisfy(isDelete);\n          expect(actions[0].old.element).to.equal(reportControl);\n        });\n\n        it('does not remove if another GSEControl is assigned to the same DataSet', () => {\n          const reportControl = ln02rp.querySelector('ReportControl')!;\n          const actions = <Delete[]>(\n            removeReportControlAction(reportControl)!.actions\n          );\n          expect(actions.length).to.equal(1);\n          expect(actions[0]).to.satisfy(isDelete);\n          expect(actions[0].old.element).to.equal(reportControl);\n        });\n\n        it('does not remove if another SMV is assigned to the same DataSet', () => {\n          const reportControl = ln02smv.querySelector('ReportControl')!;\n          const actions = <Delete[]>(\n            removeReportControlAction(reportControl)!.actions\n          );\n          expect(actions.length).to.equal(1);\n          expect(actions[0]).to.satisfy(isDelete);\n          expect(actions[0].old.element).to.equal(reportControl);\n        });\n\n        it('does not remove with missing parent element', () => {\n          const action = removeReportControlAction(missingparent);\n          expect(action).to.be.null;\n        });\n      });\n    });\n\n    describe('for ReportControl with missing child elements and referenced DataSet', () => {\n      beforeEach(async () => {\n        const ln0 = new DOMParser().parseFromString(\n          '<LN0 lnClass=\"LNN0\"><ReportControl name=\"testName\"/><LN0>',\n          'application/xml'\n        );\n\n        const reportControl = ln0.querySelector('ReportControl')!;\n\n        const wizard = editReportControlWizard(reportControl);\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n      }).timeout(5000);\n    });\n  });\n\n  describe('define a select wizard that', () => {\n    describe('with existing ReportControl element', () => {\n      beforeEach(async () => {\n        const wizard = selectReportControlWizard(doc.documentElement);\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).dom.to.equalSnapshot()).timeout(\n        5000\n      );\n    });\n\n    describe('with invalid parent', () => {\n      beforeEach(async () => {\n        const wizard = selectReportControlWizard(doc.querySelector('DO')!);\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).dom.to.equalSnapshot()).timeout(\n        5000\n      );\n    });\n  });\n\n  describe('define an create wizard that', () => {\n    let dataPicker: FinderList;\n\n    beforeEach(async () => {\n      const wizard = createReportControlWizard(doc.querySelector('LN0')!);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialogs[3]?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      dataPicker = <FinderList>(\n        element.wizardUI.dialogs[3]?.querySelector('finder-list')\n      );\n\n      await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n    });\n\n    it('has four pages', () =>\n      expect(element.wizardUI.dialogs.length).to.equal(4));\n\n    it('the first page looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialogs[0]).dom.to.equalSnapshot();\n    }).timeout(5000);\n\n    it('the second page looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialogs[1]).dom.to.equalSnapshot();\n    }).timeout(5000);\n\n    it('the third page looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialogs[2]).dom.to.equalSnapshot();\n    }).timeout(5000);\n\n    it('the forth page looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialogs[3]).dom.to.equalSnapshot();\n    }).timeout(5000);\n\n    it('triggers complex action on primary action click', async () => {\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.not.satisfy(isSimple);\n    });\n\n    it('complex action carries ReportControl element', async () => {\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[0];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      expect((<Element>createAction.new.element).tagName).to.equal(\n        'ReportControl'\n      );\n    });\n\n    it('add default confRev to the ReportControlElement', async () => {\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[0];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      expect(createAction.new.element).has.attribute('confRev', '1');\n    });\n\n    it('complex action carries referenced DataSet element', async () => {\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[1];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      expect((<Element>createAction.new.element).tagName).to.equal('DataSet');\n    });\n\n    it('referenced DataSet element not having any FCDA per default', async () => {\n      await primaryAction.click();\n\n      const createAction = <Create>(\n        (<ComplexAction>actionEvent.args[0][0].detail.action).actions[1]\n      );\n      expect((<Element>createAction.new.element).children).to.be.empty;\n    });\n\n    it('referenced DataSet element saving selected FCDA', async () => {\n      const path = [\n        'Server: IED2>P1',\n        'LDevice: IED2>>CircuitBreaker_CB1',\n        'LN0: IED2>>CircuitBreaker_CB1',\n        'DO: #Dummy.LLN0>Beh',\n        'DA: #Dummy.LLN0.Beh>stVal',\n      ];\n\n      dataPicker.paths = [path];\n      await element.requestUpdate();\n\n      await primaryAction.click();\n\n      const createAction = <Create>(\n        (<ComplexAction>actionEvent.args[0][0].detail.action).actions[1]\n      );\n      expect((<Element>createAction.new.element).children).to.not.be.empty;\n      expect((<Element>createAction.new.element).children).to.have.lengthOf(1);\n    });\n\n    it('complex action adding OptField element as child element', async () => {\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[0];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      const optFields = (<Element>createAction.new.element).querySelector(\n        'OptFields'\n      );\n      expect(optFields).to.exist;\n      expect(optFields).to.have.attribute('seqNum', 'true');\n    });\n\n    it('complex action adding TrgOps element as child element', async () => {\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[0];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      const trgOps = (<Element>createAction.new.element).querySelector(\n        'TrgOps'\n      );\n      expect(trgOps).to.exist;\n      expect(trgOps).to.have.attribute('dchg', 'true');\n      expect(trgOps).to.have.attribute('gi', 'false');\n    });\n\n    it('complex action adding RptEnabled element as child element with non nulled max Client', async () => {\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[0];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      const rptEnabled = (<Element>createAction.new.element).querySelector(\n        'RptEnabled'\n      );\n      expect(rptEnabled).to.exist;\n      expect(rptEnabled).to.have.attribute('max', '5');\n    });\n\n    it('complex action adding RptEnabled element as child element with nulled max Client', async () => {\n      const max = <WizardTextField>(\n        element.wizardUI.dialogs[0].querySelector(\n          'wizard-textfield[label=\"max Clients\"]'\n        )\n      );\n      max.nullSwitch?.click();\n      await max.requestUpdate();\n\n      await primaryAction.click();\n\n      const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n        .actions;\n      expect(actions.length).to.equal(2);\n      const action = actions[0];\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n      const rptEnabled = (<Element>createAction.new.element).querySelector(\n        'RptEnabled'\n      );\n      expect(rptEnabled).to.not.exist;\n    });\n  });\n\n  describe('define a wizard to select the control block reference', () => {\n    beforeEach(async () => {\n      const wizard = reportControlParentSelector(doc);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    }).timeout(5000);\n  });\n\n  describe('define copy to other IED selector', () => {\n    let iedsPicker: FilteredList;\n    let listItem: ListItemBase;\n\n    beforeEach(async () => {\n      const sourceReportControl = doc.querySelector(\n        'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"]'\n      )!;\n      const wizard = reportControlCopyToIedSelector(sourceReportControl);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      iedsPicker = <FilteredList>(\n        element.wizardUI.dialog?.querySelector('filtered-list')\n      );\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    }).timeout(5000);\n\n    it('allows to copy to multiple IED at once', () =>\n      expect(iedsPicker.multi).to.be.true);\n\n    describe('with a sink IED not meeting partially the data references', () => {\n      beforeEach(async () => {\n        listItem = iedsPicker.items.find(item => item.value.includes('IED5'))!;\n        await element.requestUpdate();\n      });\n\n      it('disabled the list item', () =>\n        expect(listItem.disabled).to.not.be.true);\n\n      it('does copy the control block ', () => {\n        listItem.click();\n        primaryAction.click();\n        expect(actionEvent).to.have.been.called;\n      });\n    });\n  });\n});\n"]}