{"version":3,"file":"voltagelevel.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/voltagelevel.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { fixture, html, expect } from '@open-wc/testing';\n\nimport '../../../src/wizard-textfield.js';\nimport {\n  WizardInputElement,\n  isCreate,\n  isReplace,\n  isDelete,\n  isSimple,\n  ComplexAction,\n  WizardActor,\n} from '../../../src/foundation.js';\nimport {\n  createAction,\n  updateAction,\n} from '../../../src/wizards/voltagelevel.js';\n\ndescribe('VoltageLevelEditor', () => {\n  const noOp = () => {\n    return;\n  };\n  const newWizard = (done = noOp) => {\n    const element = document.createElement('mwc-dialog');\n    element.close = done;\n    return element;\n  };\n\n  let inputs: WizardInputElement[];\n  beforeEach(async () => {\n    inputs = await Promise.all(\n      ['name', 'desc', 'nomFreq', 'numPhases', 'Voltage'].map(\n        label =>\n          <Promise<WizardInputElement>>(\n            fixture(\n              html`<wizard-textfield label=${label}></wizard-textfield>`\n            )\n          )\n      )\n    );\n  });\n\n  function getAndValidComplexAction(wizardActor: WizardActor): ComplexAction {\n    const editorActions = wizardActor(inputs, newWizard());\n    expect(editorActions.length).to.equal(1);\n    expect(editorActions[0]).to.not.satisfy(isSimple);\n    return <ComplexAction>editorActions[0];\n  }\n\n  describe('with no nulled properties', () => {\n    describe('has a createAction that', () => {\n      let parent: Element;\n      beforeEach(() => {\n        parent = new DOMParser().parseFromString(\n          '<Substation></Substation>',\n          'application/xml'\n        ).documentElement;\n      });\n\n      it('returns a WizardAction which returns a Create EditorAction', () => {\n        const wizardAction = createAction(parent);\n        expect(wizardAction(inputs, newWizard())[0]).to.satisfy(isCreate);\n      });\n    });\n\n    describe('has an updateAction that', () => {\n      describe('with missing child element Voltage', () => {\n        let element: Element;\n        beforeEach(() => {\n          element = new DOMParser().parseFromString(\n            '<VoltageLevel></VoltageLevel>',\n            'application/xml'\n          ).documentElement;\n        });\n\n        it('returns a WizardAction which returns two EditorActions', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions.length).to.equal(2);\n        });\n\n        it('returns a WizardAction with the first returned EditorAction being an Update', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[0]).to.satisfy(isReplace);\n        });\n\n        it('returns a WizardAction with the second returned EditorAction being a Create', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[1]).to.satisfy(isCreate);\n        });\n      });\n\n      describe('with present child element Voltage', () => {\n        let element: Element;\n        beforeEach(() => {\n          element = new DOMParser().parseFromString(\n            `<VoltageLevel>\n              <Voltage unit=\"V\" multiplier=\"k\">110</Voltage>\n              </VoltageLevel>`,\n            'application/xml'\n          ).documentElement;\n        });\n\n        it('returns a WizardAction which returns two EditorActions', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions.length).to.equal(2);\n        });\n\n        it('returns a WizardAction with the first returned EditorAction being an Update', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[0]).to.satisfy(isReplace);\n        });\n\n        it('returns a WizardAction with the second returned EditorAction being a Update', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[1]).to.satisfy(isReplace);\n        });\n      });\n\n      describe('with no change in element VoltageLevel but changes in the child element Voltage', () => {\n        let element: Element;\n        beforeEach(() => {\n          element = new DOMParser().parseFromString(\n            `<VoltageLevel name=\"\" desc=\"\" nomFreq=\"\" numPhases=\"\">\n              <Voltage unit=\"V\" multiplier=\"k\">110</Voltage>\n              </VoltageLevel>`,\n            'application/xml'\n          ).documentElement;\n        });\n\n        it('returns a WizardAction which returns one EditorActions', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions.length).to.equal(1);\n        });\n\n        it('returns a WizardAction with the first returned EditorAction beeing an Update', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[0]).to.satisfy(isReplace);\n        });\n      });\n\n      describe('with no change in VoltageLevel nor Voltage', () => {\n        let element: Element;\n        beforeEach(() => {\n          element = new DOMParser().parseFromString(\n            '<VoltageLevel name=\"\" desc=\"\" nomFreq=\"\" numPhases=\"\"><Voltage unit=\"V\"></Voltage></VoltageLevel>',\n            'application/xml'\n          ).documentElement;\n        });\n\n        it('returns a WizardAction with an empty EditorActions array', () => {\n          const wizardAction = updateAction(element);\n          expect(wizardAction(inputs, newWizard()).length).to.equal(0);\n        });\n      });\n    });\n  });\n\n  describe('with nulled properties', () => {\n\n    describe('has an updateAction that', () => {\n      describe('with present child element Voltage', () => {\n        let element: Element;\n        beforeEach(async () => {\n          element = new DOMParser().parseFromString(\n            `<VoltageLevel>\n              <Voltage unit=\"V\" multiplier=\"k\">110</Voltage>\n              </VoltageLevel>`,\n            'application/xml'\n          ).documentElement;\n\n          inputs[4] = await fixture(html`<wizard-textfield\n            label=\"Voltage\"\n            nullable\n            .maybeValue=\"${null}\"\n            unit=\"V\"\n            .multipliers=${[null, 'G', 'M', 'k', '', 'm']}\n            multiplier=\"k\"\n          ></wizard-textfield>`);\n        });\n\n        it('returns a WizardAction which returns two EditorActions', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions.length).to.equal(2);\n        });\n\n        it('returns a WizardAction with the first returned EditorAction beeing an Update', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[0]).to.satisfy(isReplace);\n        });\n\n        it('returns a WizardAction with the second returned EditorAction beeing a Delete', () => {\n          const wizardAction = updateAction(element);\n          const complexAction = getAndValidComplexAction(wizardAction);\n          expect(complexAction.actions[1]).to.satisfy(isDelete);\n        });\n      });\n    });\n  });\n});\n"]}