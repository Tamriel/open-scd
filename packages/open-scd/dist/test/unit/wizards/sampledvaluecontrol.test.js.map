{"version":3,"file":"sampledvaluecontrol.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/sampledvaluecontrol.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport {\n  ComplexAction,\n  Create,\n  Delete,\n  isCreate,\n  isDelete,\n  isReplace,\n  isSimple,\n  Replace,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport {\n  createSampledValueControlWizard,\n  editSampledValueControlWizard,\n  removeSampledValueControlAction,\n  selectSampledValueControlWizard,\n} from '../../../src/wizards/sampledvaluecontrol.js';\nimport fc, { integer } from 'fast-check';\nimport { inverseRegExp, regExp, regexString } from '../../foundation.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport { WizardCheckbox } from '../../../src/wizard-checkbox.js';\nimport { FinderList } from '../../../src/finder-list.js';\n\ndescribe('Wizards for SCL element SampledValueControl', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    doc = await fetch('test/testfiles/wizards/sampledvaluecontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('define an edit wizard that', () => {\n    describe('with muticast attribute set to false - deprecated', () => {\n      beforeEach(async () => {\n        const wizard = editSampledValueControlWizard(\n          doc.querySelector('SampledValueControl[multicast=\"false\"]')!\n        );\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        inputs = Array.from(element.wizardUI.inputs);\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('update a SampledValueControl element when only multicast attribute changed', async () => {\n        (<WizardCheckbox>(<unknown>inputs[2])).checked = true;\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute(\n          'multicast',\n          'false'\n        );\n        expect(updateAction.new.element).to.have.attribute('multicast', 'true');\n      });\n    });\n\n    describe(' with multicast set to treu', () => {\n      beforeEach(async () => {\n        const wizard = editSampledValueControlWizard(\n          doc.querySelector('SampledValueControl[multicast=\"true\"]')!\n        );\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        inputs = Array.from(element.wizardUI.inputs);\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('edits name attribute only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.tAsciName, 1, 32), async name => {\n            inputs[0].value = name;\n            await (<WizardTextField>inputs[0]).requestUpdate();\n            expect(inputs[0].checkValidity()).to.be.true;\n          })\n        );\n      });\n\n      it('rejects name attribute starting with decimals', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.decimal, 1, 1), async name => {\n            inputs[0].value = name;\n            await (<WizardTextField>inputs[0]).requestUpdate();\n            expect(inputs[0].checkValidity()).to.be.false;\n          })\n        );\n      });\n\n      it('edits smpRate attribute only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(\n            integer({ min: 0 }).map(num => `${num}`),\n            async smpRate => {\n              inputs[4].value = smpRate;\n              await (<WizardTextField>inputs[4]).requestUpdate();\n              expect(inputs[4].checkValidity()).to.be.true;\n            }\n          )\n        );\n      });\n\n      it('rejects smpRate attribute in case input is not unsigned int', async () => {\n        await fc.assert(\n          fc.asyncProperty(\n            regexString(inverseRegExp.uint, 1),\n            async smpRate => {\n              inputs[4].value = smpRate;\n              await (<WizardTextField>inputs[4]).requestUpdate();\n              expect(inputs[4].checkValidity()).to.be.false;\n            }\n          )\n        );\n      });\n\n      it('edits nofASDU attribute only for valid inputs', async () => {\n        const input = <WizardTextField>inputs[5];\n        input.nullSwitch?.click();\n        await input.requestUpdate();\n\n        await fc.assert(\n          fc.asyncProperty(\n            integer({ min: 0 }).map(num => `${num}`),\n            async nofASDU => {\n              input.value = nofASDU;\n              await input.requestUpdate();\n              expect(input.checkValidity()).to.be.true;\n            }\n          )\n        );\n      });\n\n      it('rejects nofASDU attribute in case input is not unsigned int', async () => {\n        const input = <WizardTextField>inputs[5];\n        input.nullSwitch?.click();\n        await input.requestUpdate();\n\n        await fc.assert(\n          fc.asyncProperty(\n            regexString(inverseRegExp.uint, 1),\n            async nofASDU => {\n              input.value = nofASDU;\n              await input.requestUpdate();\n              expect(input.checkValidity()).to.be.false;\n            }\n          )\n        );\n      });\n\n      it('does not update the SampledValueControl element when no attribute has changed', async () => {\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent.notCalled).to.be.true;\n      });\n\n      it('update a SampledValueControl element when only name attribute changed', async () => {\n        const input = <WizardTextField>inputs[0];\n        input.value = 'myNewCbName';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute('name', 'MSVCB01');\n        expect(updateAction.new.element).to.have.attribute(\n          'name',\n          'myNewCbName'\n        );\n      });\n\n      it('update a SampledValueControl element when only desc attribute changed', async () => {\n        const input = <WizardTextField>inputs[1];\n        input.nullSwitch?.click();\n        input.value = 'myDesc';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.not.have.attribute('desc');\n        expect(updateAction.new.element).to.have.attribute('desc', 'myDesc');\n      });\n\n      it('update a SampledValueControl element when smvID attribute changed', async () => {\n        const input = <WizardTextField>inputs[2];\n        input.value = 'myNewType/ID';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute(\n          'smvID',\n          'some/reference'\n        );\n        expect(updateAction.new.element).to.have.attribute(\n          'smvID',\n          'myNewType/ID'\n        );\n      });\n\n      it('update a SampledValueControl element when smpMod attribute changed', async () => {\n        const input = <WizardTextField>inputs[3];\n        input.nullSwitch?.click();\n        input.value = 'SmpPerSec';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.not.have.attribute('smpMod');\n        expect(updateAction.new.element).to.have.attribute(\n          'smpMod',\n          'SmpPerSec'\n        );\n      });\n\n      it('update a SampledValueControl element when smpRate attribute changed', async () => {\n        const input = <WizardTextField>inputs[4];\n        input.value = '4000';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute('smpRate', '80');\n        expect(updateAction.new.element).to.have.attribute('smpRate', '4000');\n      });\n\n      it('update a SampledValueControl element when nofASDU attribute changed', async () => {\n        const input = <WizardTextField>inputs[5];\n        input.value = '2';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute('nofASDU', '1');\n        expect(updateAction.new.element).to.have.attribute('nofASDU', '2');\n      });\n\n      it('updates the SampledValueEnable element when securityEnabled changed', async () => {\n        const input = <WizardTextField>inputs[6];\n        input.nullSwitch?.click();\n        input.value = 'Signature';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.not.have.attribute(\n          'securityEnabled'\n        );\n        expect(updateAction.new.element).to.have.attribute(\n          'securityEnabled',\n          'Signature'\n        );\n      });\n    });\n\n    describe('contains a remove button that', () => {\n      const ln01smv = <Element>new DOMParser().parseFromString(\n        `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n              <DataSet name=\"myDataSet\"/>\n              <DataSet name=\"myDataSet2\"/>\n              <SampledValueControl name=\"myName\" datSet=\"myDataSet\"/>\n              <ReportControl name=\"myName2\" datSet=\"myDataSet2\"/>\n          </LN0>`,\n        'application/xml'\n      ).documentElement;\n\n      const ln02smv2 = <Element>new DOMParser().parseFromString(\n        `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n                <DataSet name=\"myDataSet\"/>\n                <SampledValueControl name=\"myName\" datSet=\"myDataSet\"/>\n                <SampledValueControl name=\"myName2\" datSet=\"myDataSet\"/>\n            </LN0>`,\n        'application/xml'\n      ).documentElement;\n\n      const ln02gse = <Element>new DOMParser().parseFromString(\n        `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n                  <DataSet name=\"myDataSet\"/>\n                  <SampledValueControl name=\"myName\" datSet=\"myDataSet\"/>\n                  <GSEControl name=\"myName2\" datSet=\"myDataSet\"/>\n              </LN0>`,\n        'application/xml'\n      ).documentElement;\n\n      const ln02rp = <Element>new DOMParser().parseFromString(\n        `<LN0 lnClass=\"LLN0\" lnType=\"myType\">\n              <DataSet name=\"myDataSet\"/>\n              <ReportControl name=\"myName\" datSet=\"myDataSet\"/>\n              <SampledValueControl name=\"myName2\" datSet=\"myDataSet\"/>\n          </LN0>`,\n        'application/xml'\n      ).documentElement;\n\n      const missingparent = <Element>(\n        new DOMParser().parseFromString(\n          `<SampledValueControl name=\"myName\" datSet=\"myDataSet\"/>`,\n          'application/xml'\n        ).documentElement\n      );\n\n      it('removes SampledValueControl and its referenced DataSet if no other SampledValueControl is assigned', () => {\n        const sampledValueControl = ln01smv.querySelector(\n          'SampledValueControl'\n        )!;\n        const actions = <Delete[]>(\n          removeSampledValueControlAction(sampledValueControl)?.actions\n        );\n        expect(actions.length).to.equal(2);\n        expect(actions[0]).to.satisfy(isDelete);\n        expect(actions[0].old.element).to.equal(sampledValueControl);\n        expect(actions[1]).to.satisfy(isDelete);\n        expect(actions[1].old.element).to.equal(\n          ln01smv.querySelector('DataSet')\n        );\n      });\n\n      it('does not remove DataSet with another SampledValueControl referenced', () => {\n        const sampledValueControl = ln02smv2.querySelector(\n          'SampledValueControl'\n        )!;\n        const actions = <Delete[]>(\n          removeSampledValueControlAction(sampledValueControl)?.actions\n        );\n        expect(actions.length).to.equal(1);\n        expect(actions[0]).to.satisfy(isDelete);\n        expect(actions[0].old.element).to.equal(sampledValueControl);\n      });\n\n      it('does not remove DataSet with another GSEControl referenced', () => {\n        const sampledValueControl = ln02gse.querySelector(\n          'SampledValueControl'\n        )!;\n        const actions = <Delete[]>(\n          removeSampledValueControlAction(sampledValueControl)?.actions\n        );\n        expect(actions.length).to.equal(1);\n        expect(actions[0]).to.satisfy(isDelete);\n        expect(actions[0].old.element).to.equal(sampledValueControl);\n      });\n\n      it('does not remove DataSet with another ReportControl referenced', () => {\n        const sampledValueControl = ln02rp.querySelector(\n          'SampledValueControl'\n        )!;\n        const actions = <Delete[]>(\n          removeSampledValueControlAction(sampledValueControl)?.actions\n        );\n        expect(actions.length).to.equal(1);\n        expect(actions[0]).to.satisfy(isDelete);\n        expect(actions[0].old.element).to.equal(sampledValueControl);\n      });\n\n      it('does not remove with missing parent element', () => {\n        const action = removeSampledValueControlAction(missingparent);\n        expect(action).to.be.null;\n      });\n\n      it('removes referenced SMV element in the Communication section', () => {\n        const sampledValueControl = doc.querySelector(\n          'IED[name=\"IED3\"] SampledValueControl'\n        )!;\n        const actions = <Delete[]>(\n          removeSampledValueControlAction(sampledValueControl)?.actions\n        );\n        expect(actions.length).to.equal(3);\n        expect(actions[0]).to.satisfy(isDelete);\n        expect(actions[0].old.element).to.equal(sampledValueControl);\n        expect(actions[1]).to.satisfy(isDelete);\n        expect(actions[2]).to.satisfy(isDelete);\n        expect(actions[2].old.element).to.equal(\n          doc.querySelector(\n            'Communication SMV[ldInst=\"MU01\"][cbName=\"MSVCB01\"]'\n          )\n        );\n      });\n    });\n  });\n\n  describe('define an create wizard that', () => {\n    let dataPicker: FinderList;\n\n    describe('with existing ConnectedAP element in the Communication section', () => {\n      beforeEach(async () => {\n        const wizard = createSampledValueControlWizard(\n          doc.querySelector('IED[name=\"IED3\"] LN0')!\n        );\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        (<WizardTextField>(\n          element.wizardUI.dialogs[0].querySelector(\n            'wizard-textfield[label=\"smvID\"]'\n          )\n        )).maybeValue = 'wer';\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialogs[3]?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        dataPicker = <FinderList>(\n          element.wizardUI.dialogs[3]?.querySelector('finder-list')\n        );\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('has fourth pages', () =>\n        expect(element.wizardUI.dialogs.length).to.equal(4));\n\n      it('the first page looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialogs[0]).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('the second page looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialogs[1]).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('the third page looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialogs[2]).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('the fourth page looks like the latest snapshot', async () => {\n        await expect(element.wizardUI.dialogs[3]).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('triggers complex action on primary action click', async () => {\n        await primaryAction.click();\n\n        expect(actionEvent).to.be.calledOnce;\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n      });\n\n      it('complex action carries SampledValueControl element', async () => {\n        await primaryAction.click();\n\n        const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n          .actions;\n        expect(actions.length).to.equal(3);\n        const action = actions[0];\n        expect(action).to.satisfy(isCreate);\n        const createAction = <Create>action;\n        expect((<Element>createAction.new.element).tagName).to.equal(\n          'SampledValueControl'\n        );\n      });\n\n      it('add default confRev to the SampledValueControl element', async () => {\n        await primaryAction.click();\n\n        const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n          .actions;\n        expect(actions.length).to.equal(3);\n        const action = actions[0];\n        expect(action).to.satisfy(isCreate);\n        const createAction = <Create>action;\n        expect(createAction.new.element).has.attribute('confRev', '1');\n      });\n\n      it('complex action carries referenced DataSet element', async () => {\n        await primaryAction.click();\n\n        const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n          .actions;\n        expect(actions.length).to.equal(3);\n        const action = actions[2];\n        expect(action).to.satisfy(isCreate);\n        const createAction = <Create>action;\n        expect((<Element>createAction.new.element).tagName).to.equal('DataSet');\n      });\n\n      it('referenced DataSet element not having any FCDA per default', async () => {\n        await primaryAction.click();\n\n        const createAction = <Create>(\n          (<ComplexAction>actionEvent.args[0][0].detail.action).actions[2]\n        );\n        expect((<Element>createAction.new.element).children).to.be.empty;\n      });\n\n      it('referenced DataSet element saving selected FCDA', async () => {\n        const path = [\n          'Server: IED3>P1',\n          'LDevice: IED3>>MU01',\n          'LN0: IED3>>MU01',\n          'DO: #DummyTCTR>Amp',\n          'DA: #DummySAV>instMag',\n          'BDA: #AnalogueValue_i>i',\n        ];\n\n        dataPicker.paths = [path];\n        await element.requestUpdate();\n\n        await primaryAction.click();\n\n        const createAction = <Create>(\n          (<ComplexAction>actionEvent.args[0][0].detail.action).actions[2]\n        );\n        expect((<Element>createAction.new.element).children).to.not.be.empty;\n        expect((<Element>createAction.new.element).children).to.have.lengthOf(\n          1\n        );\n      });\n\n      it('complex action adding SMV element in the Communication section', async () => {\n        await primaryAction.click();\n\n        const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n          .actions;\n        expect(actions.length).to.equal(3);\n        const action = actions[1];\n        expect(action).to.satisfy(isCreate);\n        const createAction = <Create>action;\n        expect((<Element>createAction.new.element).tagName).to.equal('SMV');\n      });\n    });\n\n    describe('with missing ConnectedAP element in the Communication section', () => {\n      beforeEach(async () => {\n        const wizard = createSampledValueControlWizard(\n          doc.querySelector('IED[name=\"IED4\"] LN0')!\n        );\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n\n        (<WizardTextField>(\n          element.wizardUI.dialogs[0].querySelector(\n            'wizard-textfield[label=\"smvID\"]'\n          )\n        )).maybeValue = 'wer';\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialogs[3]?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        dataPicker = <FinderList>(\n          element.wizardUI.dialogs[3]?.querySelector('finder-list')\n        );\n\n        await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n      });\n\n      it('has fourth pages', () =>\n        expect(element.wizardUI.dialogs.length).to.equal(4));\n\n      it('the third page having a warning message ', async () => {\n        await expect(element.wizardUI.dialogs[2]).dom.to.equalSnapshot();\n      }).timeout(5000);\n\n      it('triggers complex action on primary action click', async () => {\n        await primaryAction.click();\n\n        expect(actionEvent).to.be.calledOnce;\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.not.satisfy(isSimple);\n      });\n\n      it('complex action NOT adding SMV element in the Communication section', async () => {\n        await primaryAction.click();\n\n        const actions = (<ComplexAction>actionEvent.args[0][0].detail.action)\n          .actions;\n        expect(actions.length).to.equal(2);\n        const action = actions[1];\n        expect(action).to.satisfy(isCreate);\n        const createAction = <Create>action;\n        expect((<Element>createAction.new.element).tagName).to.equal('DataSet');\n      });\n    });\n  });\n\n  describe('define a select wizard that', () => {\n    beforeEach(async () => {\n      const wizard = selectSampledValueControlWizard(doc.documentElement);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    }).timeout(5000);\n  });\n});\n"]}