{"version":3,"file":"abstractda.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/abstractda.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport fc from 'fast-check';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardSelect } from '../../../src/wizard-select.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  Create,\n  isCreate,\n  isDelete,\n  isReplace,\n  Replace,\n} from '../../../src/foundation.js';\nimport {\n  getValAction,\n  wizardContent,\n} from '../../../src/wizards/abstractda.js';\nimport { regExp, regexString } from '../../foundation.js';\n\ndescribe('abstractda wizards', () => {\n  describe('getValAction', () => {\n    const abstractda = new DOMParser().parseFromString(\n      `<DA name=\"ctlModel\" bType=\"Enum\" type=\"\"></DA>`,\n      'application/xml'\n    ).documentElement;\n    const oldVal = new DOMParser().parseFromString(\n      `<Val>oldVal</Val>`,\n      'application/xml'\n    ).documentElement;\n\n    it('updates a Val child element when changed', () => {\n      const editorAction = getValAction(oldVal, 'newVal', abstractda);\n      expect(editorAction).to.satisfy(isReplace);\n    });\n\n    it('properly updates an new Val', () => {\n      const editorAction = <Replace>getValAction(oldVal, 'newVal', abstractda);\n      expect(editorAction.new.element.textContent?.trim()).to.equal('newVal');\n    });\n\n    it('creates a Val child element when missing', () => {\n      const editorAction = getValAction(null, 'newVal', abstractda);\n      expect(editorAction).to.satisfy(isCreate);\n    });\n\n    it('properly creates new Val', () => {\n      const editorAction = <Create>getValAction(null, 'newVal', abstractda);\n      expect(editorAction.new.element.textContent?.trim()).to.equal('newVal');\n    });\n\n    it('remove a Val child element if present', () => {\n      const editorAction = getValAction(oldVal, null, abstractda);\n      expect(editorAction).to.satisfy(isDelete);\n    });\n  });\n\n  describe('renderWizard', () => {\n    let doc: XMLDocument;\n    let data: Element;\n    let element: Wizards;\n    let enumTypes: string[];\n    let daTypes: string[];\n    let nameTextField: WizardTextField;\n    let valSelect: WizardSelect;\n    let valTextField: WizardTextField;\n    let bTypeSelect: WizardSelect;\n    let typeSelect: WizardSelect;\n\n    beforeEach(async () => {\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      doc = await fetch('/test/testfiles/wizards/abstractda.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      data = doc.querySelector('DataTypeTemplates')!;\n      const types = Array.from(data.querySelectorAll('DAType,EnumType'));\n      enumTypes = Array.from(data.querySelectorAll('EnumType')).map(\n        enumtype => enumtype.getAttribute('id')!\n      );\n      daTypes = Array.from(data.querySelectorAll('DAType')).map(\n        enumtype => enumtype.getAttribute('id')!\n      );\n      const wizard = [\n        {\n          title: 'title',\n          content: wizardContent(\n            '',\n            null,\n            'Enum',\n            types,\n            'Dummy_ctlModel',\n            null,\n            null,\n            null,\n            'status-only',\n            data\n          ),\n        },\n      ];\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      nameTextField = element.wizardUI.dialog!.querySelector<WizardTextField>(\n        'wizard-textfield[label=\"name\"]'\n      )!;\n      bTypeSelect = element.wizardUI.dialog!.querySelector<WizardSelect>(\n        'wizard-select[label=\"bType\"]'\n      )!;\n      valSelect = element.wizardUI.dialog!.querySelector<WizardSelect>(\n        'wizard-select[label=\"Val\"]'\n      )!;\n      valTextField = element.wizardUI.dialog!.querySelector<WizardTextField>(\n        'wizard-textfield[label=\"Val\"]'\n      )!;\n      typeSelect = element.wizardUI.dialog!.querySelector<WizardSelect>(\n        'wizard-select[label=\"type\"]'\n      )!;\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).to.equalSnapshot();\n    });\n\n    it('edits name attribute only for valid inputs', async () => {\n      await fc.assert(\n        fc.asyncProperty(\n          regexString(regExp.abstractDataAttributeName, 1, 32),\n          async name => {\n            nameTextField.value = name;\n            await nameTextField.requestUpdate();\n            expect(nameTextField.checkValidity()).to.be.true;\n          }\n        )\n      );\n    });\n\n    it('rejects name attribute starting with decimals', async () => {\n      await fc.assert(\n        fc.asyncProperty(regexString(regExp.decimal, 1, 1), async name => {\n          nameTextField.value = name;\n          await nameTextField.requestUpdate();\n          expect(nameTextField.checkValidity()).to.be.false;\n        })\n      );\n    });\n\n    it('disables the type field in case bType is not Enum nor Struct', async () => {\n      bTypeSelect.value = 'BOOLEAN';\n      await typeSelect.requestUpdate();\n      expect(typeSelect.disabled).to.be.true;\n    });\n\n    it('pre-selects the type in the type field in case bType is Enum or Struct', async () => {\n      await typeSelect.requestUpdate();\n      expect(typeSelect.value).to.be.equal('Dummy_ctlModel');\n    });\n\n    it('pre-selects the type in the type field bType has re-selected to the initial bType', async () => {\n      bTypeSelect.value = 'BOOLEAN';\n      await typeSelect.requestUpdate();\n      expect(typeSelect.value).to.not.be.equal('Dummy_ctlModel');\n      bTypeSelect.value = 'Enum';\n      await typeSelect.requestUpdate();\n      expect(typeSelect.value).to.be.equal('Dummy_ctlModel');\n    });\n\n    it('filters EnumType in the type field if bType is Enum ', async () => {\n      bTypeSelect.value = 'Enum';\n      await typeSelect.requestUpdate();\n      const typeList = typeSelect.items\n        .filter(item => !item.noninteractive)\n        .map(item => item.value);\n      expect(typeList.length).to.equal(enumTypes.length);\n    });\n\n    it('filters DAType in the type field if bType is Struct ', async () => {\n      bTypeSelect.value = 'Struct';\n      await typeSelect.requestUpdate();\n      const typeList = typeSelect.items\n        .filter(item => !item.noninteractive)\n        .map(item => item.value);\n      expect(typeList.length).to.equal(daTypes.length);\n    });\n\n    it('selects first DAType item when bType changes from enum to Struct', async () => {\n      bTypeSelect.value = 'Enum';\n      await typeSelect.requestUpdate();\n      bTypeSelect.value = 'Struct';\n      await typeSelect.requestUpdate();\n      expect(typeSelect.value).to.equal(daTypes[0]);\n    });\n\n    it('renders the Val field as wizard-select when bType is Enum', async () => {\n      bTypeSelect.value = 'Enum';\n      await valSelect.requestUpdate();\n      await valTextField.requestUpdate();\n      expect(valSelect.style.display).to.equal('');\n      expect(valTextField.style.display).to.equal('none');\n    });\n\n    it('does not render the Val field when bType is Struct', async () => {\n      bTypeSelect.value = 'Struct';\n      await valSelect.requestUpdate();\n      await valTextField.requestUpdate();\n      expect(valSelect.style.display).to.equal('none');\n      expect(valTextField.style.display).to.equal('none');\n    });\n\n    it('renders the Val field as wizard-textfield in all other cases', async () => {\n      bTypeSelect.value = 'Struct';\n      await valSelect.requestUpdate();\n      await valTextField.requestUpdate();\n      expect(valSelect.style.display).to.equal('none');\n      expect(valTextField.style.display).to.equal('none');\n    });\n\n    it('shows Val form the file in the Val fields', async () => {\n      await valSelect.requestUpdate();\n      expect(valSelect.value).to.equal('status-only');\n    });\n\n    it('filters Val selection for the initially loaded Enum', async () => {\n      await valSelect.requestUpdate();\n      expect(valSelect.items.length).to.equal(\n        data.querySelectorAll(`EnumType[id=\"${typeSelect.value}\"] > EnumVal`)\n          .length\n      );\n    });\n\n    it('filters Val selection for bType Enum and ctlModelKind', async () => {\n      bTypeSelect.value = 'Enum';\n      await valSelect.requestUpdate();\n      expect(valSelect.items.length).to.equal(\n        data.querySelectorAll(`EnumType[id=\"${typeSelect.value}\"] > EnumVal`)\n          .length\n      );\n    });\n\n    it('filters Val selection for bType Enum and HealthKind', async () => {\n      bTypeSelect.value = 'Enum';\n      typeSelect.value = 'Dummy_Health';\n      await valSelect.requestUpdate();\n      expect(valSelect.items.length).to.equal(\n        data.querySelectorAll(`EnumType[id=\"${typeSelect.value}\"] > EnumVal`)\n          .length\n      );\n    });\n\n    it('does not filters Val selection it bType is not Enum', async () => {\n      bTypeSelect.value = 'Struct';\n      typeSelect.value = 'Dummy_origin';\n      await valSelect.requestUpdate();\n      expect(valSelect.items.length).to.equal(0);\n    });\n  });\n});\n"]}