{"version":3,"file":"bda.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/bda.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardSelect } from '../../../src/wizard-select.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  Create,\n  isCreate,\n  isReplace,\n  Replace,\n  Wizard,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport { wizardContent } from '../../../src/wizards/abstractda.js';\nimport { createBDaAction, updateBDaAction } from '../../../src/wizards/bda.js';\n\ndescribe('bda wizards', () => {\n  describe('updateBDaAction', () => {\n    let doc: XMLDocument;\n    let data: Element;\n    let element: Wizards;\n\n    const bda = <Element>(\n      new DOMParser().parseFromString(\n        `<BDA name=\"orCat\" bType=\"Enum\" type=\"Dummy_orCategory\"></BDA>`,\n        'application/xml'\n      ).documentElement\n    );\n\n    let inputs: WizardInputElement[];\n    let wizard: Wizard;\n\n    const noOp = () => {\n      return;\n    };\n    const newWizard = (done = noOp) => {\n      const element = document.createElement('mwc-dialog');\n      element.close = done;\n      return element;\n    };\n\n    beforeEach(async () => {\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      doc = await fetch('/test/testfiles/wizards/abstractda.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      data = doc.querySelector('DataTypeTemplates')!;\n      const types = Array.from(data.querySelectorAll('DAType,EnumType'));\n      wizard = [\n        {\n          title: 'title',\n          content: wizardContent(\n            'orCat',\n            null,\n            'Enum',\n            types,\n            'Dummy_orCategory',\n            null,\n            null,\n            null,\n            null,\n            data\n          ),\n        },\n      ];\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n      await element.requestUpdate();\n    });\n\n    it('does not update a BDA element when no attribute nor Val has changed', () => {\n      const editorAction = updateBDaAction(bda);\n      expect(editorAction(inputs, newWizard())).to.be.empty;\n    });\n    it('update a BDA element when only name attribute changed', async () => {\n      inputs[0].value = 'myOrName';\n      await (<WizardTextField>inputs[0]).requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isReplace);\n    });\n    it('update a BDA element when only desc attribute changed', async () => {\n      const input = <WizardTextField>inputs[1];\n      input.nullSwitch?.click();\n      input.value = 'myDesc';\n      await input.requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isReplace);\n    });\n    it('update a BDA element when only bType attribute changed', async () => {\n      inputs[2].value = 'BOOLEAN';\n      await (<WizardSelect>inputs[2]).requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isReplace);\n    });\n    it('update a BDA element when type attribute changed to null', async () => {\n      inputs[2].value = 'BOOLEAN';\n      await (<WizardSelect>inputs[2]).requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isReplace);\n      const updateAction = <Replace>editorAction(inputs, newWizard())[0];\n      expect(updateAction.old.element).to.have.attribute('type');\n      expect(updateAction.new.element).to.not.have.attribute('type');\n    });\n    it('update a BDA element when sAddr attribute changed', async () => {\n      const input = <WizardTextField>inputs[4];\n      input.nullSwitch?.click();\n      input.value = 'mysAddr';\n      await input.requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      const updateActions = editorAction(inputs, newWizard());\n      expect(updateActions.length).to.equal(1);\n      expect(updateActions[0]).to.satisfy(isReplace);\n      const updateAction = <Replace>updateActions[0];\n      expect(updateAction.old.element).to.not.have.attribute('sAddr');\n      expect(updateAction.new.element).to.have.attribute('sAddr', 'mysAddr');\n    });\n    it('update a BDA element when valKind attribute changed', async () => {\n      const input = <WizardTextField>inputs[5];\n      input.nullSwitch?.click();\n      input.value = 'RO';\n      await input.requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      const updateActions = editorAction(inputs, newWizard());\n      expect(updateActions.length).to.equal(1);\n      expect(updateActions[0]).to.satisfy(isReplace);\n      const updateAction = <Replace>updateActions[0];\n      expect(updateAction.old.element).to.not.have.attribute('valKind');\n      expect(updateAction.new.element).to.have.attribute('valKind', 'RO');\n    });\n    it('update a BDA element when valImport attribute changed', async () => {\n      const input = <WizardTextField>inputs[6];\n      input.nullSwitch?.click();\n      input.maybeValue = 'true';\n      await input.requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      const updateActions = editorAction(inputs, newWizard());\n      expect(updateActions.length).to.equal(1);\n      expect(updateActions[0]).to.satisfy(isReplace);\n      const updateAction = <Replace>updateActions[0];\n      expect(updateAction.old.element).to.not.have.attribute('valImport');\n      expect(updateAction.new.element).to.have.attribute('valImport', 'true');\n    });\n    it('creates a Val child Val attribute changes from null to something', async () => {\n      const input = <WizardTextField>inputs[7];\n      input.nullSwitch?.click();\n      input.value = 'bay-control';\n      await input.requestUpdate();\n      const editorAction = updateBDaAction(bda);\n      const updateActions = editorAction(inputs, newWizard());\n      expect(updateActions.length).to.equal(1);\n      expect(updateActions[0]).to.satisfy(isCreate);\n      const updateAction = <Create>updateActions[0];\n      expect(\n        (<Element>updateAction.new.element)\n          .querySelector('Val')\n          ?.textContent?.trim()\n      ).to.not.equal('bay-control');\n    });\n  });\n\n  describe('createBDaAction', () => {\n    let doc: XMLDocument;\n    let data: Element;\n    let element: Wizards;\n\n    const daType = <Element>(\n      new DOMParser().parseFromString(\n        `<DAType id=\"myID\"></DAType>`,\n        'application/xml'\n      ).documentElement\n    );\n\n    let inputs: WizardInputElement[];\n    let wizard: Wizard;\n\n    const noOp = () => {\n      return;\n    };\n    const newWizard = (done = noOp) => {\n      const element = document.createElement('mwc-dialog');\n      element.close = done;\n      return element;\n    };\n\n    beforeEach(async () => {\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      doc = await fetch('/test/testfiles/wizards/abstractda.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      data = doc.querySelector('DataTypeTemplates')!;\n      const types = Array.from(data.querySelectorAll('DAType,EnumType'));\n      wizard = [\n        {\n          title: 'title',\n          content: wizardContent(\n            'myNewBDA',\n            null,\n            'INT32',\n            types,\n            '',\n            null,\n            null,\n            null,\n            null,\n            data\n          ),\n        },\n      ];\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n      await element.requestUpdate();\n    });\n\n    it('creates a BDA element', () => {\n      const editorAction = createBDaAction(daType);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isCreate);\n      const createAction = <Create>editorAction(inputs, newWizard())[0];\n      expect(createAction.new.element).to.have.attribute('name', 'myNewBDA');\n      expect(createAction.new.element).to.not.have.attribute('desc');\n      expect(createAction.new.element).to.have.attribute('bType', 'INT32');\n      expect(createAction.new.element).to.not.have.attribute('type');\n      expect(createAction.new.element).to.not.have.attribute('sAddrs');\n      expect(createAction.new.element).to.not.have.attribute('valKind');\n      expect(createAction.new.element).to.not.have.attribute('valImport');\n    });\n    it('creates yet another BDA element with different attribute setting', async () => {\n      const desc = <WizardTextField>inputs[1];\n      const bType = <WizardSelect>inputs[2];\n      const sAddr = <WizardTextField>inputs[4];\n      const valKind = <WizardSelect>inputs[5];\n      const valImport = <WizardSelect>inputs[6];\n\n      desc.nullSwitch?.click();\n      desc.value = 'myDesc';\n      await desc.requestUpdate();\n      bType.value = 'Struct';\n      await bType.requestUpdate();\n      sAddr.nullSwitch?.click();\n      sAddr.value = 'mysAddr';\n      await sAddr.requestUpdate();\n      valKind.nullSwitch?.click();\n      valKind.value = 'Conf';\n      await valKind.requestUpdate();\n      valImport.nullSwitch?.click();\n      valImport.value = 'false';\n      await valImport.requestUpdate();\n\n      const editorAction = createBDaAction(daType);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isCreate);\n      const createAction = <Create>editorAction(inputs, newWizard())[0];\n      expect(createAction.new.element).to.have.attribute('name', 'myNewBDA');\n      expect(createAction.new.element).to.have.attribute('desc', 'myDesc');\n      expect(createAction.new.element).to.have.attribute('bType', 'Struct');\n      expect(createAction.new.element).to.have.attribute(\n        'type',\n        'AnalogueValue_i'\n      );\n      expect(createAction.new.element).to.have.attribute('sAddr', 'mysAddr');\n      expect(createAction.new.element).to.have.attribute('valKind', 'Conf');\n      expect(createAction.new.element).to.have.attribute('valImport', 'false');\n    });\n    it('creates Val childelement when checked', async () => {\n      const Val = <WizardTextField>inputs[8];\n\n      Val.nullSwitch?.click();\n      Val.value = '8123';\n      await Val.requestUpdate();\n\n      const editorAction = createBDaAction(daType);\n      expect(editorAction(inputs, newWizard()).length).to.equal(1);\n      expect(editorAction(inputs, newWizard())[0]).to.satisfy(isCreate);\n      const createAction = <Create>editorAction(inputs, newWizard())[0];\n      expect(\n        (<Element>createAction.new.element)\n          .querySelector('Val')\n          ?.textContent?.trim()\n      ).to.equal('8123');\n    });\n  });\n});\n"]}