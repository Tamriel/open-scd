{"version":3,"file":"powertransformer.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/powertransformer.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport { WizardInputElement } from '../../../src/foundation.js';\nimport { replaceNamingAction } from '../../../src/wizards/foundation/actions.js';\n\nimport {\n  createAction,\n  createPowerTransformerWizard,\n  editPowerTransformerWizard,\n} from '../../../src/wizards/powertransformer.js';\n\nimport {\n  executeWizardCreateAction,\n  executeWizardReplaceAction,\n  expectWizardNoUpdateAction,\n  fetchDoc,\n  setWizardTextFieldValue,\n} from './test-support.js';\n\ndescribe('Wizards for SCL element Power Transformer', () => {\n  let doc: XMLDocument;\n  let powerTransformer: Element;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  describe('edit existing Power Transformer', () => {\n    beforeEach(async () => {\n      doc = await fetchDoc('/test/testfiles/valid2007B4withSubstationXY.scd');\n      powerTransformer = doc.querySelector('PowerTransformer[name=\"TA1\"]')!;\n\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      const wizard = editPowerTransformerWizard(powerTransformer);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n    });\n\n    it('update name should be updated in document', async function () {\n      await setWizardTextFieldValue(<WizardTextField>inputs[0], 'OtherTA1');\n\n      const updateAction = executeWizardReplaceAction(\n        replaceNamingAction(powerTransformer),\n        element.wizardUI,\n        inputs\n      );\n      expect(updateAction.old.element).to.have.attribute('name', 'TA1');\n      expect(updateAction.new.element).to.have.attribute('name', 'OtherTA1');\n    });\n\n    it('update description should be updated in document', async function () {\n      await setWizardTextFieldValue(\n        <WizardTextField>inputs[1],\n        'Some description'\n      );\n\n      const updateAction = executeWizardReplaceAction(\n        replaceNamingAction(powerTransformer),\n        element.wizardUI,\n        inputs\n      );\n      expect(updateAction.old.element).to.not.have.attribute('desc');\n      expect(updateAction.new.element).to.have.attribute(\n        'desc',\n        'Some description'\n      );\n    });\n\n    it('when no fields changed there will be no update action', async function () {\n      expectWizardNoUpdateAction(\n        replaceNamingAction(powerTransformer),\n        element.wizardUI,\n        inputs\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('add new Power Transformer', () => {\n    let parent: Element;\n\n    beforeEach(async () => {\n      doc = await fetchDoc('/test/testfiles/valid2007B4withSubstationXY.scd');\n      parent = doc.querySelector('Substation[name=\"AA1\"]')!;\n\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      const wizard = createPowerTransformerWizard(parent);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n    });\n\n    it('create new Power Transformer', async function () {\n      await setWizardTextFieldValue(<WizardTextField>inputs[0], 'NewTA1');\n\n      const createAC = executeWizardCreateAction(\n        createAction(parent),\n        element.wizardUI,\n        inputs\n      );\n      expect(createAC.new.element).to.have.attribute('name', 'NewTA1');\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n});\n"]}