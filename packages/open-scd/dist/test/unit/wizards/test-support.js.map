{"version":3,"file":"test-support.js","sourceRoot":"","sources":["../../../../test/unit/wizards/test-support.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '@open-wc/testing';\n\nimport {\n  Create,\n  Delete,\n  isCreate,\n  isDelete,\n  isReplace,\n  isUpdate,\n  Replace,\n  SimpleAction,\n  Update,\n  WizardActor,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport { WizardSelect } from '../../../src/wizard-select.js';\n\nexport async function setWizardTextFieldValue(\n  field: WizardTextField,\n  value: string | null\n): Promise<void> {\n  if (field.nullSwitch && !field.nullSwitch.selected) {\n    field.nullSwitch?.click();\n  }\n  field.maybeValue = value;\n  await field.requestUpdate();\n}\n\nexport async function setWizardSelectValue(\n  field: WizardSelect,\n  value: string | null\n): Promise<void> {\n  if (field.nullSwitch && !field.nullSwitch.selected) {\n    field.nullSwitch?.click();\n  }\n  field.maybeValue = value;\n  await field.requestUpdate();\n}\n\nexport function executeWizardReplaceAction(\n  wizardActor: WizardActor,\n  wizard: Element,\n  inputs: WizardInputElement[]\n): Replace {\n  const replaceActions = wizardActor(inputs, wizard);\n  expect(replaceActions.length).to.equal(1);\n  expect(replaceActions[0]).to.satisfy(isReplace);\n  return <Replace>replaceActions[0];\n}\n\nexport function executeWizardCreateAction(\n  wizardActor: WizardActor,\n  wizard: Element,\n  inputs: WizardInputElement[]\n): Create {\n  const createActions = wizardActor(inputs, wizard);\n  expect(createActions.length).to.equal(1);\n  expect(createActions[0]).to.satisfy(isCreate);\n  return <Create>createActions[0];\n}\n\nexport function expectWizardNoUpdateAction(\n  wizardActor: WizardActor,\n  wizard: Element,\n  inputs: WizardInputElement[]\n): void {\n  const updateActions = wizardActor(inputs, wizard);\n  expect(updateActions).to.be.empty;\n}\n\nexport function expectReplaceAction(\n  simpleAction: SimpleAction,\n  tagName: string,\n  attributeName: string,\n  oldValue: string | null,\n  newValue: string | null\n): void {\n  expect(simpleAction).to.satisfy(isReplace);\n\n  expect((<Replace>simpleAction).old.element.tagName).to.be.equal(tagName);\n  if (oldValue === null) {\n    expect((<Replace>simpleAction).old.element).to.not.have.attribute(\n      attributeName\n    );\n  } else {\n    expect((<Replace>simpleAction).old.element).to.have.attribute(\n      attributeName,\n      oldValue\n    );\n  }\n\n  expect((<Replace>simpleAction).new.element.tagName).to.be.equal(tagName);\n  if (newValue === null) {\n    expect((<Replace>simpleAction).new.element).to.not.have.attribute(\n      attributeName\n    );\n  } else {\n    expect((<Replace>simpleAction).new.element).to.have.attribute(\n      attributeName,\n      newValue\n    );\n  }\n}\n\nexport function expectUpdateAction(\n  simpleAction: SimpleAction,\n  tagName: string,\n  attributeName: string,\n  oldValue: string | null,\n  newValue: string | null\n): void {\n  expect(simpleAction).to.satisfy(isUpdate);\n\n  expect((<Update>simpleAction).element.tagName).to.be.equal(tagName);\n  const oldAttributes = (<Update>simpleAction).oldAttributes;\n  if (oldValue === null) {\n    expect(Object.keys(oldAttributes)).to.not.contain(attributeName);\n  } else {\n    expect(Object.keys(oldAttributes)).to.contain(attributeName);\n    expect(Object.values(oldAttributes)).to.contain(oldValue);\n  }\n\n  const newAttributes = (<Update>simpleAction).newAttributes;\n  if (newValue === null) {\n    expect(Object.keys(newAttributes)).to.not.contain(attributeName);\n  } else {\n    expect(Object.keys(newAttributes)).to.contain(attributeName);\n    expect(Object.values(newAttributes)).to.contain(newValue);\n  }\n}\n\nexport function expectUpdateTextValue(\n  action: Replace,\n  parentTagName: string,\n  oldValue: string,\n  newValue: string\n): void {\n  expect(action.old.element.parentElement!.tagName).to.be.equal(parentTagName);\n  expect(action.old.element.textContent).to.be.equal(oldValue);\n  expect(action.new.element.textContent).to.be.equal(newValue);\n}\n\nexport async function fetchDoc(docName: string): Promise<XMLDocument> {\n  return await fetch(docName)\n    .then(response => response.text())\n    .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n}\n\nexport function expectDeleteAction(\n  simpleAction: SimpleAction,\n  tagName: string\n): void {\n  expect(simpleAction).to.satisfy(isDelete);\n\n  const oldElement = (<Delete>simpleAction).old.element;\n  expect((<Element>oldElement).tagName).to.be.equal(tagName);\n}\n"]}