{"version":3,"file":"dataset.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/dataset.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport { editDataSetWizard } from '../../../src/wizards/dataset.js';\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  Delete,\n  isDelete,\n  isReplace,\n  Replace,\n  Wizard,\n  WizardInputElement,\n} from '../../../src/foundation.js';\n\ndescribe('dataset wizards', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let wizardEvent: SinonSpy;\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    doc = await fetch('/test/testfiles/wizards/gsecontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('include a dataset edit wizard', () => {\n    beforeEach(async () => {\n      const wizard = editDataSetWizard(\n        doc.querySelector('IED[name=\"IED2\"] DataSet[name=\"GooseDataSet1\"]')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      wizardEvent = spy();\n      window.addEventListener('wizard', wizardEvent);\n      actionEvent = spy();\n      window.addEventListener('editor-action', actionEvent);\n    });\n\n    it('looks like the latest snapshot', async () =>\n      await expect(element.wizardUI.dialog).to.equalSnapshot()).timeout(5000);\n\n    it('allows to add a new FCDA on add FCDA button click', async () => {\n      const addButton = <HTMLElement>(\n        Array.from(\n          element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-menu > mwc-list-item'\n          )\n        ).find(item => item.innerHTML.includes('dataset.fcda.add'))\n      );\n      await addButton.click();\n      expect(wizardEvent).to.be.calledOnce;\n    });\n\n    describe('with stand alone DataSet', () => {\n      let dataSet: Element;\n      let wizard: Wizard;\n      let inputs: WizardInputElement[];\n      let primaryAction: HTMLElement;\n\n      beforeEach(async () => {\n        dataSet = <Element>(\n          new DOMParser().parseFromString(\n            `<DataSet name=\"myDS\"></DataSet>`,\n            'application/xml'\n          ).documentElement\n        );\n        wizard = editDataSetWizard(dataSet);\n        element.workflow.length = 0;\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n        inputs = Array.from(element.wizardUI.inputs);\n        await element.requestUpdate();\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n      });\n\n      it('does not update a DataSet element when no attribute has changed', async () => {\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent.notCalled).to.be.true;\n      });\n\n      it('update a DataSet element when only name attribute changed', async () => {\n        const input = <WizardTextField>inputs[0];\n        input.value = 'myNewDataSetName';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute('name', 'myDS');\n        expect(updateAction.new.element).to.have.attribute(\n          'name',\n          'myNewDataSetName'\n        );\n      });\n    });\n\n    describe('with connected DataSet', () => {\n      let dataSet: Element;\n      let wizard: Wizard;\n      let inputs: WizardInputElement[];\n      let primaryAction: HTMLElement;\n      let firstFCDA: HTMLElement;\n      let thirdFCDA: HTMLElement;\n\n      beforeEach(async () => {\n        dataSet = doc.querySelector(\n          'IED[name=\"IED2\"] DataSet[name=\"GooseDataSet1\"]'\n        )!;\n        wizard = editDataSetWizard(dataSet);\n        element.workflow.length = 0;\n        element.workflow.push(() => wizard);\n        await element.requestUpdate();\n        inputs = Array.from(element.wizardUI.inputs);\n        await element.requestUpdate();\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        firstFCDA = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'filtered-list>mwc-check-list-item'\n          )\n        );\n\n        thirdFCDA = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'filtered-list>mwc-check-list-item:nth-child(3)'\n          )\n        );\n      });\n\n      it('does not update a DataSet element when no attribute has changed', async () => {\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent.notCalled).to.be.true;\n      });\n\n      it('update a DataSet element when only name attribute changed', async () => {\n        const input = <WizardTextField>inputs[0];\n        input.value = 'myNewDataSetName';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledThrice;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.have.attribute(\n          'name',\n          'GooseDataSet1'\n        );\n        expect(updateAction.new.element).to.have.attribute(\n          'name',\n          'myNewDataSetName'\n        );\n      });\n\n      it('update a DataSet of all referenced control blocks', async () => {\n        const input = <WizardTextField>inputs[0];\n        input.value = 'myNewDataSetName';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledThrice;\n\n        for (let i = 1; i < actionEvent.args.length; i++) {\n          const action = actionEvent.args[i][0].detail.action;\n          expect(action).to.satisfy(isReplace);\n\n          const updateAction = <Replace>action;\n          expect(updateAction.old.element).to.have.attribute(\n            'datSet',\n            'GooseDataSet1'\n          );\n          expect(updateAction.new.element).to.have.attribute(\n            'datSet',\n            'myNewDataSetName'\n          );\n        }\n      });\n\n      it('update a DataSet element when only desc attribute changed', async () => {\n        const input = <WizardTextField>inputs[1];\n        input.nullSwitch?.click();\n        input.value = 'myDesc';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isReplace);\n\n        const updateAction = <Replace>action;\n        expect(updateAction.old.element).to.not.have.attribute('desc');\n        expect(updateAction.new.element).to.have.attribute('desc', 'myDesc');\n      });\n\n      it('removes all unselected FCDA child elements', async () => {\n        firstFCDA.click();\n        thirdFCDA.click();\n        await element.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledTwice;\n\n        const action = actionEvent.args[0][0].detail.action;\n        expect(action).to.satisfy(isDelete);\n\n        const updateAction = <Delete>action;\n        expect(updateAction.old.element).to.have.attribute('ldInst', 'CBSW');\n        expect(updateAction.old.element).to.have.attribute('prefix', '');\n        expect(updateAction.old.element).to.have.attribute('lnClass', 'XSWI');\n        expect(updateAction.old.element).to.have.attribute('lnInst', '2');\n        expect(updateAction.old.element).to.have.attribute('doName', 'Pos');\n        expect(updateAction.old.element).to.have.attribute('daName', 'stVal');\n      });\n\n      it('removes all unselected FCDA child elements', async () => {\n        firstFCDA.click();\n        thirdFCDA.click();\n        await element.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledTwice;\n\n        const action = actionEvent.args[1][0].detail.action;\n        expect(action).to.satisfy(isDelete);\n\n        const updateAction = <Delete>action;\n        expect(updateAction.old.element).to.have.attribute('ldInst', 'CBSW');\n        expect(updateAction.old.element).to.have.attribute('prefix', '');\n        expect(updateAction.old.element).to.have.attribute('lnClass', 'XSWI');\n        expect(updateAction.old.element).to.have.attribute('lnInst', '2');\n        expect(updateAction.old.element).to.have.attribute(\n          'doName',\n          'OpSlc.dsd'\n        );\n        expect(updateAction.old.element).to.have.attribute(\n          'daName',\n          'sasd.ads.asd'\n        );\n      });\n    });\n  });\n});\n"]}