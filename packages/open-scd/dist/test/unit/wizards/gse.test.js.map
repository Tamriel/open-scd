{"version":3,"file":"gse.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/gse.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  ComplexAction,\n  Create,\n  Delete,\n  isCreate,\n  isDelete,\n  isSimple,\n  isReplace,\n  Replace,\n  Wizard,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport {\n  editGseWizard,\n  getMTimeAction,\n  updateGSEAction,\n} from '../../../src/wizards/gse.js';\n\ndescribe('gse wizards', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    doc = await fetch('/test/testfiles/wizards/gsecontrol.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  describe('editGseWizard', () => {\n    beforeEach(async () => {\n      const wizard = editGseWizard(\n        doc.querySelector('GSE[ldInst=\"CircuitBreaker_CB1\"][cbName=\"GCB\"]')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n    });\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).to.equalSnapshot();\n    }).timeout(5000);\n  });\n\n  describe('updateGSEAction', () => {\n    let gse: Element;\n    let inputs: WizardInputElement[];\n    let wizard: Wizard;\n\n    const noOp = () => {\n      return;\n    };\n    const newWizard = (done = noOp) => {\n      const element = document.createElement('mwc-dialog');\n      element.close = done;\n      return element;\n    };\n\n    beforeEach(async () => {\n      gse = doc.querySelector(\n        'GSE[ldInst=\"CircuitBreaker_CB1\"][cbName=\"GCB\"]'\n      )!;\n      wizard = editGseWizard(\n        doc.querySelector('GSE[ldInst=\"CircuitBreaker_CB1\"][cbName=\"GCB\"]')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n      await element.requestUpdate();\n    });\n\n    it('does not update a GSE element when no attribute has changed', () => {\n      const editorAction = updateGSEAction(gse);\n      const actions = (<ComplexAction>editorAction(inputs, element.wizardUI)[0])\n        .actions;\n      expect(actions).to.be.empty;\n    });\n    it('update a GSE element when only MAC-Address attribute changed', async () => {\n      const input = <WizardTextField>inputs[0];\n      input.value = '01-0C-CD-01-00-11';\n      await input.requestUpdate();\n      const editorAction = updateGSEAction(gse);\n      const complexAction = editorAction(inputs, newWizard());\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n      const actions = (<ComplexAction>complexAction[0]).actions;\n      expect(actions.length).to.equal(2);\n      expect(actions[0]).to.satisfy(isDelete);\n      expect(actions[1]).to.satisfy(isCreate);\n      const oldElement = <Element>(<Delete>actions[0]).old.element;\n      const newElement = <Element>(<Create>actions[1]).new.element;\n      expect(\n        oldElement.querySelector('P[type=\"MAC-Address\"]')?.textContent?.trim()\n      ).to.equal('01-0C-CD-01-00-10');\n      expect(\n        newElement.querySelector('P[type=\"MAC-Address\"]')?.textContent?.trim()\n      ).to.equal('01-0C-CD-01-00-11');\n    });\n    it('update a GSE element when only APPID attribute changed', async () => {\n      const input = <WizardTextField>inputs[1];\n      input.value = '014';\n      await input.requestUpdate();\n      const editorAction = updateGSEAction(gse);\n      const complexAction = editorAction(inputs, newWizard());\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n      const actions = (<ComplexAction>complexAction[0]).actions;\n      expect(actions.length).to.equal(2);\n      expect(actions[0]).to.satisfy(isDelete);\n      expect(actions[1]).to.satisfy(isCreate);\n      const oldElement = <Element>(<Delete>actions[0]).old.element;\n      const newElement = <Element>(<Create>actions[1]).new.element;\n      expect(\n        oldElement.querySelector('P[type=\"APPID\"]')?.textContent?.trim()\n      ).to.equal('0010');\n      expect(\n        newElement.querySelector('P[type=\"APPID\"]')?.textContent?.trim()\n      ).to.equal('014');\n    });\n    it('update a GSE element when only VLAN-ID attribute changed', async () => {\n      const input = <WizardTextField>inputs[2];\n      input.maybeValue = '0F1';\n      await input.requestUpdate();\n      const editorAction = updateGSEAction(gse);\n      const complexAction = editorAction(inputs, newWizard());\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n      const actions = (<ComplexAction>complexAction[0]).actions;\n      expect(actions.length).to.equal(2);\n      expect(actions[0]).to.satisfy(isDelete);\n      expect(actions[1]).to.satisfy(isCreate);\n      const oldElement = <Element>(<Delete>actions[0]).old.element;\n      const newElement = <Element>(<Create>actions[1]).new.element;\n      expect(oldElement.querySelector('P[type=\"VLAN-ID\"]')?.textContent?.trim())\n        .to.be.undefined;\n      expect(\n        newElement.querySelector('P[type=\"VLAN-ID\"]')?.textContent?.trim()\n      ).to.equal('0F1');\n    });\n    it('update a GSE element when only VLAN-PRIORITY attribute changed', async () => {\n      const input = <WizardTextField>inputs[3];\n      input.value = '7';\n      await input.requestUpdate();\n      const editorAction = updateGSEAction(gse);\n      const complexAction = editorAction(inputs, newWizard());\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n      const actions = (<ComplexAction>complexAction[0]).actions;\n      expect(actions.length).to.equal(2);\n      expect(actions[0]).to.satisfy(isDelete);\n      expect(actions[1]).to.satisfy(isCreate);\n      const oldElement = <Element>(<Delete>actions[0]).old.element;\n      const newElement = <Element>(<Create>actions[1]).new.element;\n      expect(\n        oldElement.querySelector('P[type=\"VLAN-PRIORITY\"]')?.textContent?.trim()\n      ).to.equal('4');\n      expect(\n        newElement.querySelector('P[type=\"VLAN-PRIORITY\"]')?.textContent?.trim()\n      ).to.equal('7');\n    });\n    it('update a GSE element when only MinTime attribute changed', async () => {\n      const input = <WizardTextField>inputs[4];\n      input.value = '15';\n      await input.requestUpdate();\n      const editorAction = updateGSEAction(gse);\n      const complexAction = editorAction(inputs, newWizard());\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n      const actions = (<ComplexAction>complexAction[0]).actions;\n      expect(actions.length).to.equal(1);\n      expect(actions[0]).to.satisfy(isReplace);\n      const updateAction = <Replace>actions[0];\n      expect(updateAction.old.element.textContent?.trim()).to.equal('10');\n      expect(updateAction.new.element.textContent?.trim()).to.equal('15');\n    });\n    it('update a GSE element when only MaxTime attribute changed', async () => {\n      const input = <WizardTextField>inputs[5];\n      input.value = '65';\n      await input.requestUpdate();\n      const editorAction = updateGSEAction(gse);\n      const complexAction = editorAction(inputs, newWizard());\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n      const actions = (<ComplexAction>complexAction[0]).actions;\n      expect(actions.length).to.equal(1);\n      expect(actions[0]).to.satisfy(isReplace);\n      const updateAction = <Replace>actions[0];\n      expect(updateAction.old.element.textContent?.trim()).to.equal('10000');\n      expect(updateAction.new.element.textContent?.trim()).to.equal('65');\n    });\n  });\n\n  describe('getMTimeAction', () => {\n    const gse = new DOMParser().parseFromString(\n      `<GSE ldInst=\"myLdInst\" cbName=\"cbName\"></GSE>`,\n      'application/xml'\n    ).documentElement;\n    const oldMinTime = new DOMParser().parseFromString(\n      `<MinTime unit=\"s\" multiplier=\"m\">10</MinTime>`,\n      'application/xml'\n    ).documentElement;\n    const oldMaxTime = new DOMParser().parseFromString(\n      `<MaxTime unit=\"s\" multiplier=\"m\">10000</MaxTime>`,\n      'application/xml'\n    ).documentElement;\n\n    it('updates a MinTime child element when chenged', () => {\n      const editorAction = getMTimeAction('MinTime', oldMinTime, '654', gse);\n      expect(editorAction).to.satisfy(isReplace);\n      expect((<Replace>editorAction).new.element.textContent?.trim()).to.equal(\n        '654'\n      );\n    });\n    it('creates a MimTime child element when missing', () => {\n      const editorAction = getMTimeAction('MinTime', null, '654', gse);\n      expect(editorAction).to.satisfy(isCreate);\n      expect((<Create>editorAction).new.element.textContent?.trim()).to.equal(\n        '654'\n      );\n    });\n    it('remove a Val child element if present', () => {\n      const editorAction = getMTimeAction('MinTime', oldMinTime, null, gse);\n      expect(editorAction).to.satisfy(isDelete);\n    });\n\n    it('updates a MaxTime child element when chenged', () => {\n      const editorAction = getMTimeAction(\n        'MaxTime',\n        oldMaxTime,\n        '1234123',\n        gse\n      );\n      expect(editorAction).to.satisfy(isReplace);\n      expect((<Replace>editorAction).new.element.textContent?.trim()).to.equal(\n        '1234123'\n      );\n    });\n    it('creates a MaxTime child element when missing', () => {\n      const editorAction = getMTimeAction('MaxTime', null, '1234123', gse);\n      expect(editorAction).to.satisfy(isCreate);\n      expect((<Create>editorAction).new.element.textContent?.trim()).to.equal(\n        '1234123'\n      );\n    });\n    it('remove a MaxTime child element if present', () => {\n      const editorAction = getMTimeAction('MaxTime', oldMaxTime, null, gse);\n      expect(editorAction).to.satisfy(isDelete);\n    });\n  });\n});\n"]}