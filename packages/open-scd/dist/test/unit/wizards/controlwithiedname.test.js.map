{"version":3,"file":"controlwithiedname.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/controlwithiedname.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport '../../../src/editors/substation/zeroline-pane.js';\nimport { List } from '@material/mwc-list';\nimport { ZerolinePane } from '../../../src/editors/substation/zeroline-pane.js';\n\ndescribe('selectExtRefWizard', () => {\n  let doc: Document;\n  let parent: MockWizardEditor;\n  let element: ZerolinePane;\n  let commMappings: List;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/comm-map.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<mock-wizard-editor\n        ><zeroline-pane .doc=${doc}></zeroline-pane\n      ></mock-wizard-editor>`\n    );\n\n    element = <ZerolinePane>parent.querySelector('zeroline-pane')!;\n    await element.updateComplete;\n\n    element.commmap.click();\n    await parent.updateComplete;\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n    commMappings = <List>parent.wizardUI.dialog?.querySelector('filtered-list');\n  });\n\n  it('looks like the latest snapshot', async () => {\n    commMappings.items[3].click();\n    await parent.updateComplete;\n    await parent.wizardUI.updateComplete;\n\n    await expect(parent.wizardUI.dialog).to.equalSnapshot();\n  });\n\n  it('shows all ExtRefs', async () => {\n    commMappings.items[3].click();\n    await parent.updateComplete;\n    await parent.wizardUI.updateComplete;\n\n    expect(\n      parent.wizardUI.dialog?.querySelectorAll('mwc-check-list-item').length\n    ).to.equal(14);\n  });\n\n  it('removes selected ExtRefs in case no intAddr is present', async () => {\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED2\"] ExtRef[iedName=\"IED1\"][ldInst=\"Disconnectors\"][lnClass=\"XSWI\"][doName=\"Pos\"][daName=\"stVal\"]'\n      )\n    ).to.exist;\n    commMappings.items[3].click();\n    await parent.updateComplete;\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[2].click();\n    await parent.updateComplete;\n    (<HTMLElement>(\n      parent.wizardUI.dialog?.querySelector('mwc-button[slot=\"primaryAction\"]')\n    )).click();\n    await parent.updateComplete;\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED2\"] ExtREf[iedName=\"IED1\"][ldInst=\"Disconnectors\"][lnClass=\"XSWI\"][doName=\"Pos\"][daName=\"stVal\"]'\n      )\n    ).to.not.exist;\n  });\n\n  it('updates selected ExtRefs in case intAddr is present', async () => {\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED1\"] ExtRef[iedName=\"IED2\"][ldInst=\"CBSW\"][lnClass=\"XSWI\"]' +\n          '[doName=\"Pos\"][daName=\"stVal\"][intAddr=\"./stVal\"][serviceType=\"GOOSE\"][desc=\"testDesc\"]' +\n          '[pServT=\"GOOSE\"][pLN=\"XSWI\"][pDO=\"Pos\"][pDA=\"stVal\"]'\n      )\n    ).to.exist;\n    commMappings.items[4].click();\n    await parent.updateComplete;\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[0].click();\n    await parent.updateComplete;\n    (<HTMLElement>(\n      parent.wizardUI.dialog?.querySelector('mwc-button[slot=\"primaryAction\"]')\n    )).click();\n    await parent.updateComplete;\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED1\"] ExtRef:not([iedName]):not([ldInst]):not([lnClass]):not([doName]):not([daName])' +\n          '[intAddr=\"./stVal\"][serviceType=\"GOOSE\"][desc=\"testDesc\"]' +\n          '[pServT=\"GOOSE\"][pLN=\"XSWI\"][pDO=\"Pos\"][pDA=\"stVal\"]'\n      )\n    ).to.exist;\n  });\n  it('removes IEDName if all linked ExtRefs are removed/disconnected', async () => {\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED1\"] > AccessPoint > Server > ' +\n          'LDevice[inst=\"CircuitBreaker_CB1\"] > LN0 > GSEControl > ' +\n          'IEDName[apRef=\"P1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"CSWI\"]'\n      )\n    ).to.exist;\n    commMappings.items[5].click();\n    await parent.updateComplete;\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[0].click();\n    await parent.updateComplete;\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[1].click();\n    await parent.updateComplete;\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[2].click();\n    await parent.updateComplete;\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[3].click();\n    await parent.updateComplete;\n    (<HTMLElement>(\n      parent.wizardUI.dialog?.querySelector('mwc-button[slot=\"primaryAction\"]')\n    )).click();\n    await parent.updateComplete;\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED1\"] > AccessPoint > Server > ' +\n          'LDevice[inst=\"CircuitBreaker_CB1\"] > LN0 > GSEControl > ' +\n          'IEDName[apRef=\"P1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"CSWI\"]'\n      )\n    ).to.not.exist;\n  });\n  it('does not removes IEDName if linked ExtRefs`not completely removed/disconnected', async () => {\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED1\"] > AccessPoint > Server > ' +\n          'LDevice[inst=\"CircuitBreaker_CB1\"] > LN0 > GSEControl > ' +\n          'IEDName[apRef=\"P1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"CSWI\"]'\n      )\n    ).to.exist;\n    commMappings.items[5].click();\n    await parent.updateComplete;\n    await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[0].click();\n    await parent.updateComplete;\n    (<List>(\n      parent.wizardUI.dialog?.querySelector('filtered-list')\n    )).items[1].click();\n    await parent.updateComplete;\n    (<HTMLElement>(\n      parent.wizardUI.dialog?.querySelector('mwc-button[slot=\"primaryAction\"]')\n    )).click();\n    await parent.updateComplete;\n    expect(\n      doc.querySelector(\n        ':root > IED[name=\"IED1\"] > AccessPoint > Server > ' +\n          'LDevice[inst=\"CircuitBreaker_CB1\"] > LN0 > GSEControl > ' +\n          'IEDName[apRef=\"P1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"CSWI\"]'\n      )\n    ).to.exist;\n  });\n});\n"]}