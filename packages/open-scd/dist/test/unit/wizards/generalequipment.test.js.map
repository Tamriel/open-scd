{"version":3,"file":"generalequipment.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/generalequipment.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  Create,\n  isCreate,\n  isReplace,\n  Replace,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport {\n  createGeneralEquipmentWizard,\n  editGeneralEquipmentWizard,\n} from '../../../src/wizards/generalEquipment.js';\nimport { WizardCheckbox } from '../../../src/wizard-checkbox.js';\n\ndescribe('Wizards for SCL GeneralEquipment element', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    doc = await fetch('/test/testfiles/editors/substation/generalequipment.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('define an create wizard that', () => {\n    beforeEach(async () => {\n      const wizard = createGeneralEquipmentWizard(\n        doc.querySelector('Substation')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n    });\n\n    it('looks like the the latest snapshot', async () =>\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot());\n\n    it('does not accept empty name attribute', async () => {\n      await primaryAction.click();\n\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('allows to create required attributes name and type', async () => {\n      inputs[0].value = 'someNonEmptyName';\n      inputs[2].value = 'AXN';\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n\n      expect(createAction.new.element).to.have.attribute(\n        'name',\n        'someNonEmptyName'\n      );\n      expect(createAction.new.element).to.have.attribute('type', 'AXN');\n      expect(createAction.new.element).to.not.have.attribute('desc');\n    });\n\n    it('does not accept invalid type attribute', async () => {\n      inputs[0].value = 'someNonEmptyName';\n      inputs[2].value = 'notValidAXN';\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('allows to create non required attributes desc', async () => {\n      inputs[0].value = 'someNonEmptyName';\n      inputs[2].value = 'AXN';\n\n      (<WizardTextField>inputs[1]).nullSwitch?.click();\n      inputs[1].value = 'SomeDesc';\n\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n\n      expect(createAction.new.element).to.have.attribute(\n        'name',\n        'someNonEmptyName'\n      );\n      expect(createAction.new.element).to.have.attribute('desc', 'SomeDesc');\n      expect(createAction.new.element).to.have.attribute('type', 'AXN');\n    });\n\n    it('allows to create non required attributes virtual', async () => {\n      inputs[0].value = 'someNonEmptyName';\n      inputs[2].value = 'AXN';\n\n      (<WizardTextField>inputs[1]).nullSwitch?.click();\n      inputs[1].value = 'SomeDesc';\n\n      const virtualCheckbox = <WizardCheckbox>(\n        element.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"virtual\"]'\n        )\n      );\n\n      virtualCheckbox.nullSwitch!.click();\n      virtualCheckbox.maybeValue = 'true';\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isCreate);\n      const createAction = <Create>action;\n\n      expect(createAction.new.element).to.have.attribute(\n        'name',\n        'someNonEmptyName'\n      );\n      expect(createAction.new.element).to.have.attribute('desc', 'SomeDesc');\n      expect(createAction.new.element).to.have.attribute('type', 'AXN');\n      expect(createAction.new.element).to.have.attribute('virtual', 'true');\n    });\n  });\n\n  describe('define an edit wizard that', () => {\n    beforeEach(async () => {\n      const wizard = editGeneralEquipmentWizard(\n        doc.querySelector('GeneralEquipment')!\n      );\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = Array.from(element.wizardUI.inputs);\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n\n      await element.wizardUI.requestUpdate(); // make sure wizard is rendered\n    });\n\n    it('looks like the the latest snapshot', async () =>\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot());\n\n    it('does not accept empty name attribute', async () => {\n      inputs[0].value = '';\n      await element.requestUpdate();\n      await primaryAction.click();\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('triggers simple edit action on primary action click', async () => {\n      inputs[0].value = 'someNonEmptyName';\n\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n      const editAction = <Replace>action;\n\n      expect(editAction.new.element).to.have.attribute(\n        'name',\n        'someNonEmptyName'\n      );\n    });\n\n    it('allows to create non required attribute virtual', async () => {\n      const virtualCheckbox = <WizardCheckbox>(\n        element.wizardUI.dialog?.querySelector(\n          'wizard-checkbox[label=\"virtual\"]'\n        )\n      );\n\n      virtualCheckbox.nullSwitch!.click();\n      virtualCheckbox.maybeValue = 'true';\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n      const editAction = <Replace>action;\n\n      expect(editAction.new.element).to.have.attribute('virtual', 'true');\n    });\n\n    it('does not accept empty type attribute', async () => {\n      inputs[2].value = '';\n      await element.requestUpdate();\n      await primaryAction.click();\n      expect(actionEvent).to.not.have.been.called;\n    });\n    it('does not accept invalid type attribute', async () => {\n      inputs[2].value = 'notAXN';\n      await element.requestUpdate();\n      await primaryAction.click();\n      expect(actionEvent).to.not.have.been.called;\n    });\n\n    it('allows to create type attribute', async () => {\n      inputs[2].value = 'BAT';\n      await element.requestUpdate();\n      await primaryAction.click();\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n      const editAction = <Replace>action;\n\n      expect(editAction.new.element).to.have.attribute('type', 'BAT');\n    });\n\n    it('allows to create non required attribute desc', async () => {\n      inputs[1].value = 'someNonEmptyDesc';\n\n      await element.requestUpdate();\n      await primaryAction.click();\n\n      expect(actionEvent).to.be.calledOnce;\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n      const editAction = <Replace>action;\n\n      expect(editAction.new.element).to.have.attribute(\n        'desc',\n        'someNonEmptyDesc'\n      );\n    });\n  });\n});\n"]}