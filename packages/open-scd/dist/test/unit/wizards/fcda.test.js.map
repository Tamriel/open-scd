{"version":3,"file":"fcda.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/fcda.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { createFCDAsWizard } from '../../../src/wizards/fcda.js';\nimport { isCreate } from '../../../src/foundation.js';\nimport { FinderList } from '../../../src/finder-list.js';\n\ndescribe('create wizard for FCDA element', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let finder: FinderList;\n  let primaryAction: HTMLElement;\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    doc = await fetch('/test/testfiles/wizards/fcda.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('with a valid SCL file', () => {\n    beforeEach(async () => {\n      const wizard = createFCDAsWizard(doc.querySelector('DataSet')!);\n      element.workflow.push(() => wizard!);\n      await element.requestUpdate();\n      finder =\n        element.wizardUI.dialog!.querySelector<FinderList>('finder-list')!;\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the last snapshot', async () => {\n      await expect(element.wizardUI.dialog).to.equalSnapshot();\n    });\n\n    it('indicates error in case children cannot be determined', async () => {\n      finder.paths = [['some wrong path']];\n      await element.requestUpdate();\n      await finder.loaded;\n      expect(\n        element.wizardUI.dialog\n          ?.querySelector('finder-list')\n          ?.shadowRoot?.querySelector('p')?.innerText\n      ).to.equal('[error]');\n    });\n\n    describe('with a specific path', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>CircuitBreaker_CB1',\n        'LN0: IED1>>CircuitBreaker_CB1',\n        'DO: #Dummy.LLN0>Beh',\n        'DA: #Dummy.LLN0.Beh>stVal',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('returns a non empty create action on primary action click', () => {\n        expect(actionEvent).to.have.been.called;\n        expect(actionEvent.args[0][0].detail.action).to.satisfy(isCreate);\n      });\n\n      it('returns a create action that follows the definition of a FCDA', () => {\n        const newElement = <Element>(\n          actionEvent.args[0][0].detail.action.new.element\n        );\n        expect(newElement).to.have.attribute('ldInst', 'CircuitBreaker_CB1');\n        expect(newElement).to.have.attribute('prefix', '');\n        expect(newElement).to.have.attribute('lnClass', 'LLN0');\n        expect(newElement).to.not.have.attribute('lnInst');\n        expect(newElement).to.have.attribute('doName', 'Beh');\n        expect(newElement).to.have.attribute('daName', 'stVal');\n        expect(newElement).to.have.attribute('fc', 'ST');\n      });\n    });\n\n    describe('with a more complex path including SDOs and BDAs', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>Meas',\n        'LN: IED1>>Meas>My MMXU 1',\n        'DO: #Dummy.MMXU>A',\n        'SDO: #OpenSCD_WYE_phases>phsA',\n        'DA: #OpenSCD_CMV_db_i_MagAndAng>cVal',\n        'BDA: #OpenSCD_Vector_I_w_Ang>mag',\n        'BDA: #OpenSCD_AnalogueValue_INT32>i',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('returns a non empty create action on primary action click', () => {\n        expect(actionEvent).to.have.been.called;\n        expect(actionEvent.args[0][0].detail.action).to.satisfy(isCreate);\n      });\n\n      it('returns a create action that follows the definition of a FCDA', () => {\n        const newElement = <Element>(\n          actionEvent.args[0][0].detail.action.new.element\n        );\n        expect(newElement).to.have.attribute('ldInst', 'Meas');\n        expect(newElement).to.have.attribute('prefix', 'My');\n        expect(newElement).to.have.attribute('lnClass', 'MMXU');\n        expect(newElement).to.have.attribute('lnInst', '1');\n        expect(newElement).to.have.attribute('doName', 'A.phsA');\n        expect(newElement).to.have.attribute('daName', 'cVal.mag.i');\n        expect(newElement).to.have.attribute('fc', 'MX');\n      });\n    });\n\n    describe('with path being non leaf node', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>Meas',\n        'LN: IED1>>Meas>My MMXU 1',\n        'DO: #Dummy.MMXU>A',\n        'SDO: #OpenSCD_WYE_phases>phsA',\n        'DA: #OpenSCD_CMV_db_i_MagAndAng>cVal',\n        'BDA: #OpenSCD_Vector_I_w_Ang>mag',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('returns a non empty create action on primary action click', () =>\n        expect(actionEvent).to.not.have.been.called);\n    });\n\n    describe('with a incorrect logical node definition in the path', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>Meas',\n        'Ln: IED1>>Meas>My MMXU 1',\n        'DO: #Dummy.LLN0>Beh',\n        'DA: #Dummy.LLN0.Beh>stVal',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('does not return a empty action on primary action click', () =>\n        expect(actionEvent).to.not.have.been.called);\n    });\n\n    describe('with a incorrect logical node identity in the path', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>CircuitBreaker_CB1',\n        'LN0: some wrong identity',\n        'DO: #Dummy.LLN0>Beh',\n        'DA: #Dummy.LLN0.Beh>stVal',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('does not return a empty action on primary action click', () =>\n        expect(actionEvent).to.not.have.been.called);\n    });\n\n    describe('with a incorrect DO definition in the path', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>CircuitBreaker_CB1',\n        'LN0: IED1>>CircuitBreaker_CB1',\n        'DO: some wrong identity',\n        'DA: #Dummy.LLN0.Beh>stVal',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('does not return a empty action on primary action click', () =>\n        expect(actionEvent).to.not.have.been.called);\n    });\n\n    describe('with a missing fc definition in the DA in the SCL file', () => {\n      const path = [\n        'Server: IED1>P1',\n        'LDevice: IED1>>CircuitBreaker_CB1',\n        'LN: IED1>>CircuitBreaker_CB1> XCBR 1',\n        'DO: #Dummy.XCBR1>Pos',\n        'DA: #Dummy.XCBR1.Pos>stVal',\n      ];\n\n      beforeEach(async () => {\n        finder.paths = [path];\n        await element.requestUpdate();\n        await primaryAction.click();\n      });\n\n      it('does not return a empty action on primary action click', () =>\n        expect(actionEvent).to.not.have.been.called);\n    });\n  });\n});\n"]}