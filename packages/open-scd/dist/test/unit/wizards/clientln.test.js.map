{"version":3,"file":"clientln.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/clientln.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { List } from '@material/mwc-list';\nimport { ListItem } from '@material/mwc-list/mwc-list-item';\n\nimport '../../../src/editors/substation/zeroline-pane.js';\nimport { IedEditor } from '../../../src/editors/substation/ied-editor.js';\nimport { ZerolinePane } from '../../../src/editors/substation/zeroline-pane.js';\n\ndescribe('clientln wizards', () => {\n  let doc: Document;\n  let parent: MockWizardEditor;\n  let element: ZerolinePane;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/comm-map.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = await fixture(\n      html`<mock-wizard-editor\n        ><zeroline-pane .doc=${doc}></zeroline-pane\n      ></mock-wizard-editor>`\n    );\n\n    await parent.updateComplete;\n    element = <ZerolinePane>parent.querySelector('zeroline-pane')!;\n    await element.updateComplete;\n    element.showieds.click();\n    await element.requestUpdate();\n  });\n\n  describe('createClientLnWizard', () => {\n    let ied1: IedEditor;\n    let primaryAction: HTMLElement;\n    let reportCbs: ListItem[];\n    let logicalnodes: ListItem[];\n\n    beforeEach(async () => {\n      if (!element.showieds.on) element.showieds.click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      ied1 = element.shadowRoot!.querySelector('ied-editor')!;\n      ied1.connectReport.click();\n      await parent.updateComplete;\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n\n      primaryAction = parent.wizardUI.dialog!.querySelector<HTMLElement>(\n        'mwc-button[slot=\"primaryAction\"]'\n      )!;\n      reportCbs =\n        parent.wizardUI.dialog!.querySelector<List>('#sourcelist')!.items;\n\n      logicalnodes =\n        parent.wizardUI.dialog!.querySelector<List>('#sinklist')!.items;\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot();\n    }).timeout(5000);\n\n    it('add ClientLN referencing to logical nodes in AccessPoint', async () => {\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportEmpty\"] ClientLN'\n        )\n      )?.to.not.exist;\n      reportCbs[2].click();\n      logicalnodes[0].click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportEmpty\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][prefix=\"DC\"][lnClass=\"CILO\"][lnInst=\"1\"]'\n        )\n      )?.to.exist;\n    });\n    it('does not add an already existing ClientLN referencing to logical nodes in AccessPoint', async () => {\n      expect(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][prefix=\"DC\"][lnClass=\"CILO\"][lnInst=\"1\"]'\n        ).length\n      )?.to.equal(1);\n      reportCbs[0].click();\n      logicalnodes[0].click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][prefix=\"DC\"][lnClass=\"CILO\"][lnInst=\"1\"]'\n        ).length\n      )?.to.equal(1);\n    });\n    it('add ClientLN referencing to LN0', async () => {\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportEmpty\"] ClientLN'\n        )\n      )?.to.not.exist;\n      reportCbs[2].click();\n      logicalnodes[14].click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportEmpty\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][ldInst=\"Disconnectors\"][lnClass=\"LLN0\"]'\n        )\n      )?.to.exist;\n    });\n    it('does not add an already existing ClientLN referencing to LN0', async () => {\n      expect(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"] ' +\n            'ClientLN[iedName=\"IED3\"][apRef=\"P1\"][ldInst=\"Disconnectors\"][lnClass=\"LLN0\"]'\n        ).length\n      )?.to.equal(1);\n      reportCbs[0].click();\n      logicalnodes[14].click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"] ClientLN[iedName=\"IED3\"][apRef=\"P1\"][ldInst=\"Disconnectors\"][lnClass=\"LLN0\"]'\n        ).length\n      )?.to.equal(1);\n    });\n    it('add ClientLN referencing to logical nodes located in logical devices', async () => {\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportEmpty\"] ClientLN'\n        )\n      )?.to.not.exist;\n      reportCbs[2].click();\n      logicalnodes[5].click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportEmpty\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][ldInst=\"Disconnectors\"][prefix=\"DC\"][lnClass=\"XSWI\"][lnInst=\"1\"]'\n        )\n      )?.to.exist;\n    });\n    it('does not add an already existing ClientLN referencing to to logical nodes located in logical devices', async () => {\n      expect(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"XCBR\"][lnInst=\"1\"]'\n        ).length\n      )?.to.equal(1);\n      reportCbs[0].click();\n      logicalnodes[0].click();\n      await parent.updateComplete;\n      primaryAction.click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl[name=\"ReportCb\"] ClientLN[iedName=\"IED1\"][apRef=\"P1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"XCBR\"][lnInst=\"1\"]'\n        ).length\n      )?.to.equal(1);\n    });\n    it('disabled report control blocks when the number of ClientLns reach the max attribute', async () => {\n      expect(reportCbs[1]).to.have.attribute('disabled');\n    });\n  }).timeout(5000);\n\n  describe('selectClientLnWizard', () => {\n    let commMappings: List;\n\n    beforeEach(async () => {\n      element.commmap.click();\n      await parent.updateComplete;\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      commMappings = <List>(\n        parent.wizardUI.dialog?.querySelector('filtered-list')\n      );\n\n      commMappings.items[1].click();\n      await parent.updateComplete;\n      await parent.wizardUI.updateComplete;\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(parent.wizardUI.dialog).to.equalSnapshot();\n    });\n\n    it('filteres ClientLNs to one receiving IED', async () => {\n      expect(\n        parent.wizardUI.dialog?.querySelectorAll('mwc-check-list-item').length\n      ).to.equal(\n        doc.querySelectorAll(\n          'IED[name=\"IED2\"] ReportControl ClientLN[iedName=\"IED1\"]'\n        ).length\n      );\n    });\n\n    it('allowes to remove ClientLNs', async () => {\n      (<List>(\n        parent.wizardUI.dialog?.querySelector('filtered-list')\n      )).items[2].click();\n      await parent.updateComplete;\n      (<HTMLElement>(\n        parent.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      )).click();\n      await parent.updateComplete;\n      expect(\n        doc.querySelector(\n          'ClientLN[iedName=\"IED1\"][ldInst=\"CircuitBreaker_CB1\"][lnClass=\"CSWI\"]'\n        )\n      ).to.be.null;\n    });\n  });\n}).timeout(5000);\n"]}