{"version":3,"file":"lnode.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/lnode.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport fc from 'fast-check';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base';\n\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  Create,\n  isCreate,\n  newWizardEvent,\n  Replace,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport { regExp, regexString } from '../../foundation.js';\nimport { editLNodeWizard, lNodeWizard } from '../../../src/wizards/lnode.js';\n\ndescribe('Wizards for LNode element', () => {\n  let element: MockWizardEditor;\n  let doc: Document;\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n  let logEvent: SinonSpy;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/lnodewizard.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    element = <MockWizardEditor>(\n      await fixture(html`<mock-wizard-editor></mock-wizard-editor>`)\n    );\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n    logEvent = spy();\n    window.addEventListener('log', logEvent);\n  });\n\n  describe('contain a LNode instantiate wizard that', () => {\n    describe('with existing LLN0 and LPHD instances', () => {\n      beforeEach(async () => {\n        const wizard = lNodeWizard(\n          doc.querySelector('Function[name=\"parentFunction\"]')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n\n      describe('has a primary action that', () => {\n        let primaryAction: HTMLElement;\n        let listItems: ListItemBase[];\n\n        beforeEach(async () => {\n          const wizard = lNodeWizard(\n            doc.querySelector('SubFunction[name=\"disconnector\"]')!\n          );\n          element.dispatchEvent(newWizardEvent(wizard));\n          await element.requestUpdate();\n\n          primaryAction = <HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          );\n\n          listItems = Array.from(\n            element.wizardUI!.dialog!.querySelectorAll<ListItemBase>(\n              'mwc-check-list-item'\n            )\n          );\n        });\n\n        it('triggers error log massage when duplicate LLN0 classes are added', async () => {\n          listItems[0].selected = true;\n\n          primaryAction.click();\n\n          expect(logEvent).to.have.be.calledOnce;\n          expect(logEvent.args[0][0].detail.message).to.contain(\n            'lnode.log.uniqueln0'\n          );\n        });\n\n        it('triggers error log massage when duplicate LPHD classes are added', async () => {\n          listItems[1].selected = true;\n\n          primaryAction.click();\n\n          expect(logEvent).to.have.be.calledOnce;\n          expect(logEvent.args[0][0].detail.message).to.contain(\n            'lnode.log.uniqueln0'\n          );\n        });\n\n        it('trigger error log message when not unique lnInst can be find', async () => {\n          const parent = doc.querySelector('SubFunction[name=\"disconnector\"]')!\n            .parentElement!;\n          for (let i = 1; i <= 99; i++) {\n            const element = <Element>(\n              doc.createElementNS(doc.documentElement.namespaceURI, 'LNode')\n            );\n\n            element.setAttribute('lnClass', 'CILO');\n            element.setAttribute('lnInst', `${i}`);\n            parent.appendChild(element);\n          }\n\n          listItems[4].selected = true;\n\n          primaryAction.click();\n\n          expect(logEvent).to.have.be.calledOnce;\n          expect(logEvent.args[0][0].detail.message).to.contain(\n            'lnode.log.nonuniquelninst'\n          );\n        });\n      });\n    });\n\n    describe('with existing LLN0 but missing LPHD instances', () => {\n      beforeEach(async () => {\n        const wizard = lNodeWizard(\n          doc.querySelector('SubFunction[name=\"circuitBreaker\"]')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n    });\n\n    describe('with missing LLN0 and LPHD instances', () => {\n      beforeEach(async () => {\n        const wizard = lNodeWizard(\n          doc.querySelector('SubFunction[name=\"disconnector\"]')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n    });\n\n    describe('has a primary action that', () => {\n      let primaryAction: HTMLElement;\n      let listItems: ListItemBase[];\n\n      beforeEach(async () => {\n        const wizard = lNodeWizard(\n          doc.querySelector('SubFunction[name=\"disconnector\"]')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        listItems = Array.from(\n          element.wizardUI!.dialog!.querySelectorAll<ListItemBase>(\n            'mwc-check-list-item'\n          )\n        );\n      });\n\n      it('triggers Create action for all selected LNodeType', async () => {\n        listItems[1].selected = true;\n        listItems[2].selected = true;\n        listItems[3].selected = true;\n\n        await primaryAction.click();\n\n        expect(actionEvent).to.have.be.calledThrice;\n        expect(actionEvent.args[0][0].detail.action).to.satisfy(isCreate);\n        expect(actionEvent.args[1][0].detail.action).to.satisfy(isCreate);\n        expect(actionEvent.args[2][0].detail.action).to.satisfy(isCreate);\n      });\n\n      it('does set iedName, lnCalss, lnInst and lnType', async () => {\n        listItems[2].selected = true;\n\n        await primaryAction.click();\n\n        expect(actionEvent).to.have.be.calledOnce;\n        const action = <Create>actionEvent.args[0][0].detail.action;\n        expect(action.new.element).to.have.attribute('iedName', 'None');\n        expect(action.new.element).to.have.attribute('lnClass', 'XCBR');\n        expect(action.new.element).to.have.attribute('lnInst', '1');\n        expect(action.new.element).to.have.attribute('lnType', 'Dummy.XCBR1');\n      });\n\n      it('does not set ldInst and prefix', async () => {\n        listItems[4].selected = true;\n\n        await primaryAction.click();\n\n        expect(actionEvent).to.have.be.calledOnce;\n        const action = <Create>actionEvent.args[0][0].detail.action;\n        expect(action.new.element).to.not.have.attribute('ldInst');\n        expect(action.new.element).to.not.have.attribute('prefix');\n      });\n\n      it('makes sure that lnInst is unique in case lnClass is existing already', async () => {\n        listItems[4].selected = true;\n\n        await primaryAction.click();\n\n        expect(actionEvent).to.have.be.calledOnce;\n        const action = <Create>actionEvent.args[0][0].detail.action;\n        expect(action.new.element).to.have.attribute('lnInst', '2');\n      });\n\n      it('makes sure that lnInst is unique if several LNodeType with same lnClass are selected', async () => {\n        listItems[3].selected = true;\n        listItems[5].selected = true;\n\n        await primaryAction.click();\n\n        expect(actionEvent).to.have.be.calledTwice;\n        const action1 = <Create>actionEvent.args[0][0].detail.action;\n        const action2 = <Create>actionEvent.args[1][0].detail.action;\n        expect(action1.new.element).to.have.attribute('lnInst', '2');\n        expect(action2.new.element).to.have.attribute('lnInst', '4');\n      });\n\n      it('does add empty string to LNode with lnClass LLN0', async () => {\n        listItems[0].selected = true;\n\n        await primaryAction.click();\n\n        expect(actionEvent).to.have.be.calledOnce;\n        const action = <Create>actionEvent.args[0][0].detail.action;\n        expect(action.new.element).to.have.attribute('lnInst', '');\n      });\n    });\n  });\n\n  describe('contain a LNode reference create wizard that', () => {\n    describe('with references to existing logical nodes', () => {\n      beforeEach(async () => {\n        const wizard = lNodeWizard(\n          doc.querySelector('ConductingEquipment[name=\"QB1\"]')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n    });\n\n    describe('with missing references to existing logical nodes', () => {\n      beforeEach(async () => {\n        const wizard = lNodeWizard(doc.querySelector('Substation')!);\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n    });\n  });\n\n  describe('contain a edit wizard that', () => {\n    let inputs: WizardInputElement[];\n\n    describe('for a type reference', () => {\n      beforeEach(async () => {\n        const wizard = editLNodeWizard(\n          doc.querySelector('SubFunction[name=\"disconnector\"] > LNode')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n\n        inputs = Array.from(element.wizardUI.inputs);\n\n        primaryAction = <HTMLElement>(\n          element.wizardUI.dialog?.querySelector(\n            'mwc-button[slot=\"primaryAction\"]'\n          )\n        );\n\n        await element.updateComplete;\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n\n      it('edits prefix attribute only for valid inputs', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.tAsciName, 1, 11), async name => {\n            inputs[2].value = name;\n            await (<WizardTextField>inputs[2]).requestUpdate();\n            expect(inputs[2].checkValidity()).to.be.true;\n          })\n        );\n      });\n\n      it('rejects name attribute starting with decimals', async () => {\n        await fc.assert(\n          fc.asyncProperty(regexString(regExp.decimal, 1, 1), async name => {\n            inputs[2].value = name;\n            await (<WizardTextField>inputs[2]).requestUpdate();\n            expect(inputs[2].checkValidity()).to.be.false;\n          })\n        );\n      });\n\n      it('rejects negative integrers for lnInst attribute', async () => {\n        inputs[4].value = '-1';\n        await (<WizardTextField>inputs[4]).requestUpdate();\n        expect(inputs[4].checkValidity()).to.be.false;\n      });\n\n      it('rejects 0 for lnInst attribute', async () => {\n        inputs[4].value = '0';\n        await (<WizardTextField>inputs[4]).requestUpdate();\n        expect(inputs[4].checkValidity()).to.be.false;\n      });\n\n      it('rejects positve integrers bigger 100 for lnInst attribute', async () => {\n        inputs[4].value = '100';\n        await (<WizardTextField>inputs[4]).requestUpdate();\n        expect(inputs[4].checkValidity()).to.be.false;\n      });\n\n      it('rejects non unique lnInst attribute', async () => {\n        inputs[4].value = '3';\n        await (<WizardTextField>inputs[4]).requestUpdate();\n        expect(inputs[4].checkValidity()).to.be.false;\n      });\n\n      it('does not update the LNode element when no attribute has changed', async () => {\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent.notCalled).to.be.true;\n      });\n\n      it('update a LNode element on prefix attribute changed', async () => {\n        const input = <WizardTextField>inputs[2];\n\n        input.nullSwitch?.click();\n        input.value = 'somepref';\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = <Replace>actionEvent.args[0][0].detail.action;\n\n        expect(action.old.element).to.not.have.attribute('prefix');\n        expect(action.new.element).to.have.attribute('prefix', 'somepref');\n      });\n\n      it('update a ReportControl element when only desc attribute changed', async () => {\n        const input = <WizardTextField>inputs[4];\n        input.value = '34';\n        await input.requestUpdate();\n\n        primaryAction.click();\n        await element.requestUpdate();\n        expect(actionEvent).to.be.calledOnce;\n\n        const action = <Replace>actionEvent.args[0][0].detail.action;\n\n        expect(action.old.element).to.have.attribute('lnInst', '1');\n        expect(action.new.element).to.have.attribute('lnInst', '34');\n      });\n    });\n\n    describe('for a IED reference', () => {\n      beforeEach(async () => {\n        const wizard = editLNodeWizard(\n          doc.querySelector('Bay[name=\"COUPLING_BAY\"] > LNode')!\n        );\n        element.dispatchEvent(newWizardEvent(wizard));\n        await element.requestUpdate();\n      });\n\n      it('looks like the latest snapshot', async () =>\n        await expect(element.wizardUI.dialog).to.equalSnapshot());\n    });\n  });\n});\n"]}