{"version":3,"file":"connectedap-c.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/connectedap-c.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../mock-wizard-editor.js';\nimport { MockWizardEditor } from '../../mock-wizard-editor.js';\n\nimport { ListItemBase } from '@material/mwc-list/mwc-list-item-base.js';\n\nimport { createConnectedApWizard } from '../../../src/wizards/connectedap.js';\nimport { newWizardEvent } from '../../../src/foundation.js';\n\nfunction isAllMacUnique(parent: Element, serviceType: 'GSE' | 'SMV'): boolean {\n  const allMacs = Array.from(\n    parent.ownerDocument.querySelectorAll(\n      `${serviceType} > Address > P[type=\"MAC-Address\"]`\n    )\n  ).map(pType => pType.textContent!);\n\n  const set = new Set(allMacs);\n\n  return allMacs.length === set.size;\n}\n\nfunction isAllAppIdUnique(\n  parent: Element,\n  serviceType: 'GSE' | 'SMV'\n): boolean {\n  const allMacs = Array.from(\n    parent.ownerDocument.querySelectorAll(\n      `${serviceType} > Address > P[type=\"APPID\"]`\n    )\n  ).map(pType => pType.textContent!);\n\n  const set = new Set(allMacs);\n\n  return allMacs.length === set.size;\n}\n\nasync function clickListItem(\n  element: MockWizardEditor,\n  values: string[]\n): Promise<void> {\n  Array.from(values).forEach(value => {\n    element.wizardUI\n      .dialog!.querySelector<ListItemBase>(\n        `mwc-check-list-item[value=\"${value}\"]`\n      )\n      ?.click();\n  });\n\n  await element.updateComplete;\n\n  (<HTMLElement>(\n    element.wizardUI.dialog?.querySelector('mwc-button[slot=\"primaryAction\"]')\n  )).click();\n\n  await element.updateComplete;\n}\n\ndescribe('create wizard for ConnectedAP element', () => {\n  let doc: XMLDocument;\n  let element: MockWizardEditor;\n  let parent: Element;\n\n  beforeEach(async () => {\n    element = <MockWizardEditor>(\n      await fixture(html`<mock-wizard-editor></mock-wizard-editor>`)\n    );\n\n    doc = await fetch('/test/testfiles/wizards/communication.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    parent = doc.querySelector('SubNetwork')!;\n    const wizard = createConnectedApWizard(parent);\n    element.dispatchEvent(newWizardEvent(wizard));\n    await element.requestUpdate();\n\n    /*\n    inputs = Array.from(element.wizardUI.inputs);\n    */\n  });\n\n  it('looks like the latest snapshot', async () =>\n    await expect(element.wizardUI.dialog).dom.to.equalSnapshot());\n\n  it('it does not allow to add already connected access points', () => {\n    const disabledItems = Array.from(\n      element.wizardUI.dialog!.querySelectorAll<ListItemBase>(\n        'mwc-check-list-item'\n      )\n    ).filter(item => item.disabled);\n\n    for (const item of disabledItems) {\n      const [iedName, apName] = item.value.split('>');\n      expect(\n        doc.querySelector(\n          `ConnectedAP[iedName=\"${iedName}\"][apName=\"${apName}\"]`\n        )\n      ).to.exist;\n    }\n  });\n\n  describe('on connecting one new access point', () => {\n    it('adds a new ConnectedAP element', async () => {\n      await clickListItem(element, ['GOOSE_Publisher>AP2']);\n\n      expect(\n        parent.querySelector(\n          'ConnectedAP[iedName=\"GOOSE_Publisher\"][apName=\"AP2\"]'\n        )\n      ).to.exist;\n    });\n\n    describe('with publishing GSEControl or SampledValueControl', () => {\n      it('create unique GSE for each GSEControl', async () => {\n        await clickListItem(element, ['GOOSE_Publisher>AP2']);\n        expect(\n          parent.querySelectorAll(\n            'ConnectedAP[iedName=\"GOOSE_Publisher\"][apName=\"AP2\"] ' + '> GSE'\n          )\n        ).to.have.length(2);\n      });\n\n      it('adds uniques GSE MAC-Address and APPID', async () => {\n        const value = 'GOOSE_Publisher>AP2';\n        await clickListItem(element, [value]);\n\n        expect(isAllMacUnique(parent, 'GSE')).to.be.true;\n        expect(isAllAppIdUnique(parent, 'GSE')).to.be.true;\n      });\n\n      it('create unique SMV for each SampledValueControl', async () => {\n        await clickListItem(element, ['SMV_Publisher>AP1']);\n\n        expect(\n          parent.querySelectorAll(\n            'ConnectedAP[iedName=\"SMV_Publisher\"][apName=\"AP1\"] ' + '> SMV'\n          )\n        ).to.have.length(2);\n      });\n\n      it('adds uniques SMV MAC-Address and APPID', async () => {\n        const value = 'SMV_Publisher>AP1';\n        await clickListItem(element, [value]);\n\n        expect(isAllMacUnique(parent, 'SMV')).to.be.true;\n        expect(isAllAppIdUnique(parent, 'SMV')).to.be.true;\n      });\n    });\n  });\n\n  describe('on connecting multiple new access point', () => {\n    it('adds new ConnectedAP element for each selected acc p', async () => {\n      await clickListItem(element, [\n        'GOOSE_Publisher>AP2',\n        'GOOSE_Publisher>AP3',\n      ]);\n\n      expect(\n        parent.querySelector(\n          'ConnectedAP[iedName=\"GOOSE_Publisher\"][apName=\"AP2\"]'\n        )\n      ).to.exist;\n\n      expect(\n        parent.querySelector(\n          'ConnectedAP[iedName=\"GOOSE_Publisher\"][apName=\"AP3\"]'\n        )\n      ).to.exist;\n    });\n\n    describe('with publishing GSEControl or SampledValueControl', () => {\n      it('create unique GSE for each GSEControl', async () => {\n        await clickListItem(element, [\n          'GOOSE_Publisher>AP2',\n          'GOOSE_Publisher>AP3',\n        ]);\n        expect(\n          parent.ownerDocument.querySelectorAll(\n            'ConnectedAP[iedName=\"GOOSE_Publisher\"]' + '> GSE'\n          )\n        ).to.have.length(3);\n      });\n\n      it('adds uniques GSE MAC-Address and APPID', async () => {\n        await clickListItem(element, [\n          'GOOSE_Publisher>AP2',\n          'GOOSE_Publisher2>AP1',\n        ]);\n\n        expect(isAllMacUnique(parent, 'GSE')).to.be.true;\n        expect(isAllMacUnique(parent, 'GSE')).to.be.true;\n      });\n\n      it('create unique SMV for each SampledValueControl', async () => {\n        await clickListItem(element, [\n          'SMV_Publisher>AP1',\n          'SMV_Publisher>AP4',\n        ]);\n\n        expect(\n          parent.ownerDocument.querySelectorAll(\n            'ConnectedAP[iedName=\"SMV_Publisher\"] ' + '> SMV'\n          )\n        ).to.have.length(3);\n      });\n\n      it('adds uniques MAC-Address and APPID', async () => {\n        await clickListItem(element, [\n          'SMV_Publisher>AP1',\n          'SMV_Publisher2>AP1',\n        ]);\n\n        expect(isAllMacUnique(parent, 'SMV')).to.be.true;\n        expect(isAllAppIdUnique(parent, 'SMV')).to.be.true;\n      });\n    });\n  });\n});\n"]}