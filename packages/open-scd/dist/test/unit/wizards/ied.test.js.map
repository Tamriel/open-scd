{"version":3,"file":"ied.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/ied.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardTextField } from '../../../src/wizard-textfield.js';\nimport {\n  ComplexAction,\n  isSimple,\n  WizardInputElement,\n} from '../../../src/foundation.js';\nimport {\n  editIEDWizard,\n  removeIEDAndReferences,\n  removeIEDWizard,\n} from '../../../src/wizards/ied.js';\n\nimport {\n  expectDeleteAction,\n  expectReplaceAction,\n  expectUpdateAction,\n  expectWizardNoUpdateAction,\n  fetchDoc,\n  setWizardTextFieldValue,\n} from './test-support.js';\nimport { updateNamingAttributeWithReferencesAction } from '../../../src/wizards/foundation/actions.js';\n\ndescribe('Wizards for SCL element IED', () => {\n  let doc: XMLDocument;\n  let ied: Element;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n\n  beforeEach(async () => {\n    doc = await fetchDoc('/test/testfiles/wizards/ied.scd');\n  });\n\n  describe('edit IED', () => {\n    beforeEach(async () => {\n      ied = doc.querySelector('IED[name=\"IED3\"]')!;\n\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      const wizard = editIEDWizard(ied);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n    });\n    it('contains a wizard-textfield with a non-empty \"type\" value', async () => {\n      expect(\n        (<WizardTextField[]>inputs).find(textField => textField.label == 'type')\n          ?.value\n      ).to.be.equal(ied.getAttribute('type') || '-');\n    });\n    it('contains a wizard-textfield with a non-empty \"manufacturer\" value', async () => {\n      expect(\n        (<WizardTextField[]>inputs).find(\n          textField => textField.label == 'manufacturer'\n        )?.value\n      ).to.be.equal(ied.getAttribute('manufacturer') || '-');\n    });\n    it('contains a wizard-textfield with a non-empty \"configVersion\" value', async () => {\n      expect(\n        (<WizardTextField[]>inputs).find(\n          textField => textField.label == 'configVersion'\n        )?.value\n      ).to.be.equal(ied.getAttribute('configVersion') || '-');\n    });\n    it('contains a wizard-textfield with a non-empty \"originalSclVersion\" value', async () => {\n      expect(\n        (<WizardTextField[]>inputs).find(\n          textField => textField.label == 'originalSclVersion'\n        )?.value\n      ).to.contain(ied.getAttribute('originalSclVersion') || '-');\n    });\n    it('contains a wizard-textfield with an empty \"engRight\" value', async () => {\n      expect(\n        (<WizardTextField[]>inputs).find(\n          textField => textField.label == 'engRight'\n        )?.value\n      ).to.be.equal(ied.getAttribute('engRight') || '-');\n    });\n    it('contains a wizard-textfield with a non-empty \"owner\" value', async () => {\n      expect(\n        (<WizardTextField[]>inputs).find(\n          textField => textField.label == 'owner'\n        )?.value\n      ).to.be.equal(ied.getAttribute('owner') || '-');\n    });\n    it('update name should be updated in document', async function () {\n      await setWizardTextFieldValue(<WizardTextField>inputs[0], 'OtherIED3');\n\n      const complexAction = updateNamingAttributeWithReferencesAction(\n        ied,\n        'ied.action.updateied'\n      )(inputs, element.wizardUI);\n      expect(complexAction.length).to.equal(1);\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n\n      const simpleActions = (<ComplexAction>complexAction[0]).actions;\n      expect(simpleActions.length).to.equal(2);\n\n      expectUpdateAction(simpleActions[0], 'IED', 'name', 'IED3', 'OtherIED3');\n      expectReplaceAction(\n        simpleActions[1],\n        'ConnectedAP',\n        'iedName',\n        'IED3',\n        'OtherIED3'\n      );\n    });\n\n    it('update name should be unique in document', async function () {\n      await setWizardTextFieldValue(<WizardTextField>inputs[0], 'IED2');\n      expect(inputs[0].checkValidity()).to.be.false;\n    });\n\n    it('update description should be updated in document', async function () {\n      await setWizardTextFieldValue(\n        <WizardTextField>inputs[1],\n        'Some description'\n      );\n\n      const complexAction = updateNamingAttributeWithReferencesAction(\n        ied,\n        'ied.action.updateied'\n      )(inputs, element.wizardUI);\n      expect(complexAction.length).to.equal(1);\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n\n      const simpleActions = (<ComplexAction>complexAction[0]).actions;\n      expect(simpleActions.length).to.equal(1);\n\n      expectUpdateAction(\n        simpleActions[0],\n        'IED',\n        'desc',\n        null,\n        'Some description'\n      );\n    });\n\n    it('when no fields changed there will be no update action', async function () {\n      expectWizardNoUpdateAction(\n        updateNamingAttributeWithReferencesAction(ied, 'ied.action.updateied'),\n        element.wizardUI,\n        inputs\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n\n  describe('remove IED', () => {\n    beforeEach(async () => {\n      ied = doc.querySelector('IED[name=\"IED1\"]')!;\n\n      element = await fixture(\n        html`<oscd-wizards .host=${document}></oscd-wizards>`\n      );\n      const wizard = removeIEDWizard(ied);\n      element.workflow.push(() => wizard!);\n      await element.requestUpdate();\n      inputs = Array.from(element.wizardUI.inputs);\n    });\n\n    it('remove IED should return expected actions', async function () {\n      const complexAction = removeIEDAndReferences(ied)(\n        inputs,\n        element.wizardUI\n      );\n\n      expect(complexAction.length).to.equal(1);\n      expect(complexAction[0]).to.not.satisfy(isSimple);\n\n      const simpleActions = (<ComplexAction>complexAction[0]).actions;\n      expect(simpleActions.length).to.equal(12);\n\n      expectDeleteAction(simpleActions[0], 'IED');\n      expectDeleteAction(simpleActions[1], 'Association');\n      expectDeleteAction(simpleActions[2], 'ClientLN');\n      expectDeleteAction(simpleActions[11], 'Inputs');\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    });\n  });\n});\n"]}