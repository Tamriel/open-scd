{"version":3,"file":"conductingequipment.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/conductingequipment.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport {\n  Create,\n  isCreate,\n  WizardInputElement,\n} from '../../../src/foundation.js';\n\nimport { fetchDoc } from './test-support.js';\nimport { createConductingEquipmentWizard } from '../../../src/wizards/conductingequipment.js';\n\ndescribe('Wizards for SCL element ConductingEquipment', () => {\n  let doc: XMLDocument;\n  let element: Wizards;\n  let inputs: WizardInputElement[];\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  describe('defines a create wizard that', () => {\n    let parent: Element;\n\n    beforeEach(async () => {\n      doc = await fetchDoc('/test/testfiles/valid2007B.scd');\n\n      actionEvent = spy();\n      window.addEventListener('editor-action', actionEvent);\n    });\n\n    describe('when adding an earth switch', () => {\n      describe('with existing ground cNode in the same VoltageLevel', () => {\n        beforeEach(async () => {\n          parent = doc.querySelector('Bay')!;\n\n          element = await fixture(\n            html`<oscd-wizards .host=${document}></mock-wizards>`\n          );\n          const wizard = createConductingEquipmentWizard(parent);\n          element.workflow.push(() => wizard);\n          await element.requestUpdate();\n          inputs = Array.from(element.wizardUI.inputs);\n\n          primaryAction = <HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          );\n        });\n        it('does not create a new ConnectivityNode', async () => {\n          inputs[0].value = 'ERS';\n          inputs[1].value = 'QC9';\n\n          await element.requestUpdate();\n          await primaryAction.click();\n\n          expect(actionEvent).to.be.calledOnce;\n        });\n\n        it('does set the Terminals attributes correctly', async () => {\n          inputs[0].value = 'ERS';\n          inputs[1].value = 'QC9';\n\n          await element.requestUpdate();\n          await primaryAction.click();\n\n          const action = <Create>actionEvent.args[0][0].detail.action;\n          const terminal = (<Element>action.new.element).querySelector(\n            'Terminal'\n          )!;\n          expect(terminal).to.have.attribute('substationName', 'AA1');\n          expect(terminal).to.have.attribute('voltageLevelName', 'E1');\n          expect(terminal).to.have.attribute('bayName', 'COUPLING_BAY');\n          expect(terminal).to.have.attribute(\n            'connectivityNode',\n            'AA1/E1/COUPLING_BAY/grounded'\n          );\n        });\n      });\n\n      describe('with missing ground cNode in the same VoltageLevel', () => {\n        beforeEach(async () => {\n          parent = doc.querySelector('VoltageLevel[name=\"J1\"] > Bay')!;\n\n          element = await fixture(\n            html`<oscd-wizards .host=${document}></oscd-wizards>`\n          );\n          const wizard = createConductingEquipmentWizard(parent);\n          element.workflow.push(() => wizard);\n          await element.requestUpdate();\n          inputs = Array.from(element.wizardUI.inputs);\n\n          primaryAction = <HTMLElement>(\n            element.wizardUI.dialog?.querySelector(\n              'mwc-button[slot=\"primaryAction\"]'\n            )\n          );\n        });\n\n        it('does create a new ConnectivityNode', async () => {\n          inputs[0].value = 'ERS';\n          inputs[1].value = 'QC9';\n\n          await element.requestUpdate();\n          await primaryAction.click();\n\n          expect(actionEvent).to.be.calledTwice;\n          expect(actionEvent.args[0][0].detail.action).to.satisfy(isCreate);\n\n          const action = <Create>actionEvent.args[1][0].detail.action;\n          expect((<Element>action.new.element).tagName).to.equal(\n            'ConnectivityNode'\n          );\n        });\n\n        it('does set the pathName of ConnectivityNode correctly', async () => {\n          inputs[0].value = 'ERS';\n          inputs[1].value = 'QC9';\n\n          await element.requestUpdate();\n          await primaryAction.click();\n\n          const action = <Create>actionEvent.args[1][0].detail.action;\n          expect(<Element>action.new.element).to.have.attribute(\n            'pathName',\n            'AA1/J1/Bay1/grounded'\n          );\n          expect(<Element>action.new.element).to.have.attribute(\n            'name',\n            'grounded'\n          );\n        });\n\n        it('does set the Terminals attributes correctly', async () => {\n          inputs[0].value = 'ERS';\n          inputs[1].value = 'QC9';\n\n          await element.requestUpdate();\n          await primaryAction.click();\n\n          const action = <Create>actionEvent.args[0][0].detail.action;\n          const terminal = (<Element>action.new.element).querySelector(\n            'Terminal'\n          )!;\n          expect(terminal).to.have.attribute('substationName', 'AA1');\n          expect(terminal).to.have.attribute('voltageLevelName', 'J1');\n          expect(terminal).to.have.attribute('bayName', 'Bay1');\n          expect(terminal).to.have.attribute(\n            'connectivityNode',\n            'AA1/J1/Bay1/grounded'\n          );\n        });\n      });\n    });\n  });\n});\n"]}