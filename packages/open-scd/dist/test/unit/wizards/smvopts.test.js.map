{"version":3,"file":"smvopts.test.js","sourceRoot":"","sources":["../../../../test/unit/wizards/smvopts.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../../src/addons/Wizards.js';\nimport { Wizards } from '../../../src/addons/Wizards.js';\n\nimport { WizardCheckbox } from '../../../src/wizard-checkbox.js';\nimport { isReplace, Replace } from '../../../src/foundation.js';\nimport { editSmvOptsWizard } from '../../../src/wizards/smvopts.js';\n\ndescribe('Wizards for SCL SmvOpts element', () => {\n  let element: Wizards;\n  let smvOpts: Element;\n  let inputs: WizardCheckbox[];\n\n  let primaryAction: HTMLElement;\n\n  let actionEvent: SinonSpy;\n\n  beforeEach(async () => {\n    element = await fixture(\n      html`<oscd-wizards .host=${document}></oscd-wizards>`\n    );\n    smvOpts = <Element>(\n      new DOMParser().parseFromString(\n        `<SmvOpts refreshTime=\"true\" dataSet=\"true\"></SmvOpts>`,\n        'application/xml'\n      ).documentElement\n    );\n\n    actionEvent = spy();\n    window.addEventListener('editor-action', actionEvent);\n  });\n\n  describe('define an edit wizard that', () => {\n    beforeEach(async () => {\n      const wizard = editSmvOptsWizard(smvOpts);\n      element.workflow.push(() => wizard);\n      await element.requestUpdate();\n\n      inputs = <WizardCheckbox[]>(<unknown>Array.from(element.wizardUI.inputs));\n      await element.requestUpdate();\n\n      primaryAction = <HTMLElement>(\n        element.wizardUI.dialog?.querySelector(\n          'mwc-button[slot=\"primaryAction\"]'\n        )\n      );\n    });\n\n    it('looks like the latest snapshot', async () => {\n      await expect(element.wizardUI.dialog).dom.to.equalSnapshot();\n    }).timeout(5000);\n\n    it('does not update a SmvOpts element with no changed attributes', async () => {\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent.notCalled).to.be.true;\n    });\n\n    it('update the SmvOpts element with changed dataSet attribute', async () => {\n      const input = inputs[2];\n      input.maybeValue = 'false';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.be.calledOnce;\n\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n\n      const updateAction = <Replace>action;\n      expect(updateAction.old.element).to.have.attribute('dataSet', 'true');\n      expect(updateAction.new.element).to.have.attribute('dataSet', 'false');\n    });\n\n    it('removes the SmvOpts attribute dataSet with nulled select', async () => {\n      const input = inputs[2];\n      input.nullSwitch?.click();\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.be.calledOnce;\n\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n\n      const updateAction = <Replace>action;\n      expect(updateAction.old.element).to.have.attribute('dataSet', 'true');\n      expect(updateAction.new.element).to.not.have.attribute('dataSet');\n    });\n\n    it('updates the SmvOpts element with changed refreshTime attribute', async () => {\n      const input = inputs[0];\n      input.maybeValue = 'false';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.be.calledOnce;\n\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n\n      const updateAction = <Replace>action;\n      expect(updateAction.old.element).to.have.attribute('refreshTime', 'true');\n      expect(updateAction.new.element).to.have.attribute(\n        'refreshTime',\n        'false'\n      );\n    });\n\n    it('updates the SmvOpts element with changed sampleRate attribute', async () => {\n      const input = inputs[1];\n      input.nullSwitch?.click();\n      input.maybeValue = 'true';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.be.calledOnce;\n\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n\n      const updateAction = <Replace>action;\n      expect(updateAction.old.element).to.not.have.attribute('sampleRate');\n      expect(updateAction.new.element).to.have.attribute('sampleRate', 'true');\n    });\n\n    it('updates the SmvOpts element with changed security attribute', async () => {\n      const input = inputs[3];\n      input.nullSwitch?.click();\n      input.maybeValue = 'true';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.be.calledOnce;\n\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n\n      const updateAction = <Replace>action;\n      expect(updateAction.old.element).to.not.have.attribute('security');\n      expect(updateAction.new.element).to.have.attribute('security', 'true');\n    });\n\n    it('updates the SmvOpts element with changed synchSourceId attribute', async () => {\n      const input = inputs[4];\n      input.nullSwitch?.click();\n      input.maybeValue = 'true';\n      await input.requestUpdate();\n\n      primaryAction.click();\n      await element.requestUpdate();\n      expect(actionEvent).to.be.calledOnce;\n\n      const action = actionEvent.args[0][0].detail.action;\n      expect(action).to.satisfy(isReplace);\n\n      const updateAction = <Replace>action;\n      expect(updateAction.old.element).to.not.have.attribute('synchSourceId');\n      expect(updateAction.new.element).to.have.attribute(\n        'synchSourceId',\n        'true'\n      );\n    });\n  });\n});\n"]}