{"version":3,"file":"scl.test.js","sourceRoot":"","sources":["../../../../test/unit/foundation/scl.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '@open-wc/testing';\n\nimport { existFcdaReference } from '../../../src/foundation/scl.js';\n\ndescribe('Global SCL related functions including', () => {\n  let ied: Element;\n  let fcda1: Element;\n  let fcda2: Element;\n\n  beforeEach(async () => {\n    const doc = await fetch('/test/testfiles/foundation/sclbasics.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n    ied = doc.querySelector('IED')!;\n\n    fcda1 = doc.createElementNS(doc.documentElement.namespaceURI, 'FCDA');\n    fcda1.setAttribute('ldInst', 'ldInst1');\n    fcda1.setAttribute('prefix', 'my');\n    fcda1.setAttribute('lnClass', 'MMXU');\n    fcda1.setAttribute('lnInst', '1');\n    fcda1.setAttribute('doName', 'A.phsA');\n    fcda1.setAttribute('daName', 'cVal.mag.i');\n    fcda1.setAttribute('fc', 'MX');\n\n    fcda2 = doc.createElementNS(doc.documentElement.namespaceURI, 'FCDA');\n    fcda2.setAttribute('ldInst', 'ldInst1');\n    fcda2.setAttribute('prefix', '');\n    fcda2.setAttribute('lnClass', 'LLN0');\n    fcda2.setAttribute('lnInst', '');\n    fcda2.setAttribute('doName', 'Beh');\n    fcda2.setAttribute('daName', 'stVal');\n    fcda2.setAttribute('fc', 'ST');\n  });\n\n  describe('a function that checks FCDA reference validity in IED that', () => {\n    it('return false for invalid LDevice instance', () => {\n      fcda1.setAttribute('ldInst', 'ldInst');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('returns false for invalid LN prefix', () => {\n      fcda1.setAttribute('prefix', 'mys');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('equally treats missing and empty LN prefix', () => {\n      fcda2.removeAttribute('prefix');\n      expect(existFcdaReference(fcda2, ied)).to.be.true;\n    });\n\n    it('returns false for invalid LN lnClass', () => {\n      fcda1.setAttribute('lnClass', 'LLN0');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('returns false for invalid LN inst', () => {\n      fcda1.setAttribute('prefix', '2');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('equally treats missing and empty LN prefix', () => {\n      fcda2.removeAttribute('lnInst');\n      expect(existFcdaReference(fcda2, ied)).to.be.true;\n    });\n\n    it('returns false for invalid DO name', () => {\n      fcda2.setAttribute('doName', 'beh');\n      expect(existFcdaReference(fcda2, ied)).to.be.false;\n    });\n\n    it('returns false for invalid SDO name', () => {\n      fcda1.setAttribute('doName', 'A.PhsA');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('returns false for invalid DA name', () => {\n      fcda2.setAttribute('daName', 'StVal');\n      expect(existFcdaReference(fcda2, ied)).to.be.false;\n    });\n\n    it('returns false for invalid BDA name', () => {\n      fcda1.setAttribute('daName', 'cVal.maG.i');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('returns false for missing FC in FCD type data reference', () => {\n      fcda1.removeAttribute('daName');\n      fcda1.setAttribute('fc', 'CO');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n    });\n\n    it('returns true for FCD type data reference', () => {\n      fcda1.removeAttribute('daName');\n      expect(existFcdaReference(fcda1, ied)).to.be.true;\n    });\n\n    it('returns false for invalid FC definition', () => {\n      fcda1.setAttribute('fc', 'ST');\n      expect(existFcdaReference(fcda1, ied)).to.be.false;\n\n      fcda2.setAttribute('fc', 'MX');\n      expect(existFcdaReference(fcda2, ied)).to.be.false;\n    });\n\n    it('returns true for existing MMXU data reference', () =>\n      expect(existFcdaReference(fcda1, ied)).to.be.true);\n\n    it('returns true for existing LLN0 data reference', () =>\n      expect(existFcdaReference(fcda2, ied)).to.be.true);\n  });\n});\n"]}