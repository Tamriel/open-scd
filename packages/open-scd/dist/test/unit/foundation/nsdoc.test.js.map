{"version":3,"file":"nsdoc.test.js","sourceRoot":"","sources":["../../../../test/unit/foundation/nsdoc.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from \"@open-wc/testing\";\nimport { initializeNsdoc, Nsdoc } from \"../../../src/foundation/nsdoc.js\";\n\ndescribe('nsdoc', () => {\n  let nsdoc74!: string;\n  let nsdoc73!: string;\n  let nsdoc81!: string;\n\n  describe('has an initializeNsdoc function', () => {\n    beforeEach(async () => {\n      localStorage.clear();\n\n      nsdoc74 = await fetch('/test/testfiles/foundation/testFile74.nsdoc')\n        .then(response => response.text());\n      nsdoc73 = await fetch('/test/testfiles/foundation/testFile73.nsdoc')\n        .then(response => response.text());\n      nsdoc81 = await fetch('/test/testfiles/foundation/testFile81.nsdoc')\n        .then(response => response.text());\n    });\n\n    it('that\\'s initially loaded correct', async function () {\n      const nsdocsObject = await initializeNsdoc();\n\n      expect(nsdocsObject.nsdoc73).to.be.undefined;\n      expect(nsdocsObject.nsdoc74).to.be.undefined;\n      expect(nsdocsObject.nsdoc81).to.be.undefined;\n      expect(nsdocsObject.getDataDescription).to.exist;\n    });\n\n    it('that has an nsdoc object after loading a correct .nsdoc file into localStorage', async function () {\n      localStorage.setItem('IEC 61850-7-4', nsdoc74!)\n      const nsdocsObject = await initializeNsdoc();\n\n      expect(nsdocsObject.nsdoc74).to.not.be.undefined;\n      expect(nsdocsObject.nsdoc74?.querySelector('NSDoc')?.getAttribute('id')).to.eql('IEC 61850-7-4');\n    });\n\n    describe('has an getDataDescription function', () => {\n      let validSCL: XMLDocument;\n      let nsdocsObject!: Nsdoc\n\n      beforeEach(async () => {\n        localStorage.clear();\n        localStorage.setItem('IEC 61850-8-1', nsdoc81!)\n        localStorage.setItem('IEC 61850-7-4', nsdoc74!)\n        localStorage.setItem('IEC 61850-7-3', nsdoc73!)\n\n        nsdocsObject = await initializeNsdoc();\n\n        validSCL = await fetch('/test/testfiles/valid2007B4withIEDModifications.scd')\n          .then(response => response.text())\n          .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n      });\n\n      describe('which for LN elements', () => {\n        it('returns the title', async function () {\n          const ln = validSCL.querySelector(\n            'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN0[lnClass=\"LLN0\"]')\n\n            expect(nsdocsObject.getDataDescription(ln!).label).to.eql('Some LN title (LLN0)');\n        });\n\n        it('returns the lnClass in case no title can be found', async function () {\n          const ln = validSCL.querySelector(\n            'IED[name=\"IED1\"] > AccessPoint[name=\"P1\"] > Server > LDevice[inst=\"CircuitBreaker_CB1\"] > LN[lnClass=\"XCBR\"]');\n\n            expect(nsdocsObject.getDataDescription(ln!).label).to.eql('XCBR');\n        });\n      });\n\n      describe('which for DO elements', () => {\n        it('returns the description', async function () {\n          const dataObject = validSCL.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Beh\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('Some DO description');\n        });\n\n        it('returns the description where the DO is part of a parent class', async function () {\n          const dataObject = validSCL.querySelector('LNodeType[id=\"Dummy.XCBR1\"] > DO[name=\"Beh\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('Some DomainLN Description');\n        });\n\n        it('returns the name in case no description can be found', async function () {\n          const dataObject = validSCL.querySelector('LNodeType[id=\"Dummy.LLN0\"] > DO[name=\"Health\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('Health');\n        });\n      });\n\n      describe('which for DA elements', () => {\n        it('returns the description defined in IEC 61850-7-3', async function () {\n          const dataObject = validSCL.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"q\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('Some DA description');\n        });\n\n        it('returns the name in case no description can be found in IEC 61850-7-3', async function () {\n          const dataObject = validSCL.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"t\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('t');\n        });\n\n        it('returns the description defined in IEC 61850-8-1', async function () {\n          const dataObject = validSCL.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"SBOw\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('Some SBOw title');\n        });\n\n        it('which returns the name in case no description can be found in IEC 61850-8-1', async function () {\n          const dataObject = validSCL.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"SBO\"]');\n\n          expect(nsdocsObject.getDataDescription(dataObject!).label).to.eql('SBO');\n        });\n      });\n\n      describe('which for BDA elements', () => {\n        it('returns the description defined in IEC 61850-7-3', async function () {\n          const bdaElement = validSCL.querySelector('DAType[id=\"AnalogueValue_i\"] > BDA[name=\"i\"]');\n          const bdaElementParent = validSCL.querySelector('DOType[id=\"DummySAV\"] > DA[name=\"instMag\"]');\n\n          expect(nsdocsObject.getDataDescription(bdaElement!, [bdaElementParent!]).label).to.eql('Some i description');\n        });\n\n        it('returns the name in case no description can be found in IEC 61850-7-3', async function () {\n          const bdaElement = validSCL.querySelector('DAType[id=\"AnalogueValue_i\"] > BDA[name=\"x\"]');\n          const bdaElementParent = validSCL.querySelector('DOType[id=\"DummySAV\"] > DA[name=\"instMag\"]');\n\n          expect(nsdocsObject.getDataDescription(bdaElement!, [bdaElementParent!]).label).to.eql('x');\n        });\n\n        it('returns the description defined in IEC 61850-8-1', async function () {\n          const bdaElement = validSCL.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"] > BDA[name=\"ctlNum\"]');\n          const bdaElementParent = validSCL.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"SBOw\"]');\n\n          expect(nsdocsObject.getDataDescription(bdaElement!, [bdaElementParent!]).label).to.eql('Some ctlNum description');\n        });\n\n        it('returns the name in case no description can be found in IEC 61850-8-1', async function () {\n          const bdaElement = validSCL.querySelector('DAType[id=\"Dummy.LLN0.Mod.SBOw\"] > BDA[name=\"T\"]');\n          const bdaElementParent = validSCL.querySelector('DOType[id=\"Dummy.LLN0.Mod\"] > DA[name=\"SBOw\"]');\n\n          expect(nsdocsObject.getDataDescription(bdaElement!, [bdaElementParent!]).label).to.eql('T');\n        });\n      });\n    });\n  });\n});\n"]}