{"version":3,"file":"ValidateTemplates.test.js","sourceRoot":"","sources":["../../../../test/unit/validators/ValidateTemplates.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect, fixture, html } from '@open-wc/testing';\nimport { SinonSpy, spy } from 'sinon';\n\nimport '../../mock-open-scd.js';\nimport { MockOpenSCD } from '../../mock-open-scd.js';\n\nimport ValidateTemplates from '../../../src/validators/ValidateTemplates.js';\n\ndescribe('ValidateTemplates', () => {\n  if (customElements.get('validate-templates') === undefined)\n    customElements.define('validate-templates', ValidateTemplates);\n\n  let logEvent: SinonSpy;\n  let issueEvent: SinonSpy;\n\n  beforeEach(async () => {\n    logEvent = spy();\n    issueEvent = spy();\n\n    window.addEventListener('log', logEvent);\n    window.addEventListener('issue', issueEvent);\n  });\n\n  describe('dispatch', () => {\n    let element: ValidateTemplates;\n\n    beforeEach(async () => {\n      const doc = await fetch('/test/testfiles/validators/zeroissues.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      const parent: MockOpenSCD = await fixture(html`\n        <mock-open-scd\n          ><validate-templates\n            .doc=${doc}\n            .pluginId=\"${'/src/validators/ValidateTemplates.js'}\"\n          ></validate-templates\n        ></mock-open-scd>\n      `);\n\n      element = parent.getActivePlugin();\n\n      await parent.updateComplete;\n    });\n\n    it('triggers as newIssuesEvent for detail not containing kind', () => {\n      const detail = {\n        title: 'title',\n        message: 'message',\n      };\n      element.dispatch(detail);\n      expect(issueEvent).to.have.been.called;\n      expect(logEvent).to.not.have.been.called;\n      expect(issueEvent.args[0][0].type).to.equal('issue');\n      expect(issueEvent.args[0][0].detail.validatorId).to.equal(\n        '/src/validators/ValidateTemplates.js'\n      );\n      expect(issueEvent.args[0][0].detail.message).to.equal('message');\n      expect(issueEvent.args[0][0].detail.title).to.equal('title');\n    });\n\n    it('triggers as newLogEvent for detail containing kind info', () => {\n      const detail = {\n        kind: 'info',\n        title: 'title',\n        message: 'message',\n      };\n      element.dispatch(detail);\n      expect(logEvent).to.have.been.called;\n      expect(issueEvent).to.not.have.been.called;\n      expect(logEvent.args[0][0].type).to.equal('log');\n      expect(logEvent.args[0][0].detail.kind).to.equal('info');\n      expect(logEvent.args[0][0].detail.message).to.equal('message');\n      expect(logEvent.args[0][0].detail.title).to.equal('title');\n    });\n\n    it('triggers as newLogEvent for detail containing kind warning', () => {\n      const detail = {\n        kind: 'warning',\n        title: 'title',\n        message: 'message',\n      };\n      element.dispatch(detail);\n      expect(logEvent).to.have.been.called;\n      expect(issueEvent).to.not.have.been.called;\n      expect(logEvent.args[0][0].type).to.equal('log');\n      expect(logEvent.args[0][0].detail.kind).to.equal('warning');\n    });\n\n    it('triggers as newLogEvent for detail containing kind error', () => {\n      const detail = {\n        kind: 'error',\n        title: 'title',\n        message: 'message',\n      };\n      element.dispatch(detail);\n      expect(logEvent).to.have.been.called;\n      expect(issueEvent).to.not.have.been.called;\n      expect(logEvent.args[0][0].type).to.equal('log');\n      expect(logEvent.args[0][0].detail.kind).to.equal('error');\n    });\n  });\n\n  describe('validate', () => {\n    let element: ValidateTemplates;\n    beforeEach(async () => {\n      const doc = await fetch('/test/testfiles/validators/zeroissues.scd')\n        .then(response => response.text())\n        .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n\n      const parent: MockOpenSCD = await fixture(html`\n        <mock-open-scd\n          ><validate-templates .doc=${doc}></validate-templates\n        ></mock-open-scd>\n      `);\n\n      element = parent.getActivePlugin();\n\n      await parent.updateComplete;\n    });\n\n    it('pushes only diag.zeroissues issue to diagnostics when no issues found', async () => {\n      await element.validate();\n      expect(issueEvent).to.have.been.calledOnce;\n      expect(issueEvent.args[0][0].detail.title).to.contain(\n        'No errors found in the project'\n      );\n    });\n\n    it('pushes only diag.missingnsd issue to diagnostics pane for SCL version < 2007B3', async () => {\n      element.doc.querySelector('SCL')?.setAttribute('version', '2003');\n      await element.validate();\n      expect(issueEvent).to.have.been.calledOnce;\n      expect(issueEvent.args[0][0].detail.title).to.contain(\n        'Cannot validate DataTypeTemplates. The version of the project must be higher than or equal to 2007B3'\n      );\n    });\n\n    it('pushes only diag.missingnsd issue to diagnostics pane for SCL not having version information', async () => {\n      element.doc.querySelector('SCL')?.removeAttribute('version');\n      element.doc.querySelector('SCL')?.removeAttribute('revision');\n      await element.validate();\n      expect(issueEvent).to.have.been.calledOnce;\n      expect(issueEvent.args[0][0].detail.title).to.contain(\n        'Cannot validate DataTypeTemplates. The version of the project must be higher than or equal to 2007B3'\n      );\n    });\n\n    it('does not trigger anything for SCL missing DataTypeTemplates', async () => {\n      const data = element.doc.querySelector('DataTypeTemplates')!;\n      element.doc.querySelector('SCL')?.removeChild(data);\n      await element.validate();\n      expect(issueEvent).to.not.have.been.calledOnce;\n    });\n  });\n});\n"]}