{"version":3,"file":"doorsdo.test.js","sourceRoot":"","sources":["../../../../../test/unit/validators/templates/doorsdo.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { expect } from '@open-wc/testing';\n\nimport { dOValidator } from '../../../../src/validators/templates/dosdo.js';\n\ndescribe('do or sdo validator', () => {\n  let doc: XMLDocument;\n\n  beforeEach(async () => {\n    doc = await fetch('/test/testfiles/validators/doandsdotestfile.scd')\n      .then(response => response.text())\n      .then(str => new DOMParser().parseFromString(str, 'application/xml'));\n  });\n\n  it('return Issues when DO type attribute is missing', async () => {\n    const typelessDo = doc.querySelector('LNodeType[id=\"typelessDo\"] > DO')!;\n    const errors = await dOValidator(typelessDo);\n    expect(errors.length).to.equal(1);\n    expect(errors[0].title).to.contain('missingAttribute');\n  });\n\n  it('return Issues when DO type reference is missing', async () => {\n    const referencelessDo = doc.querySelector('LNodeType[id=\"relessDo\"] > DO')!;\n    const errors = await dOValidator(referencelessDo);\n    expect(errors.length).to.equal(1);\n    expect(errors[0].title).to.contain('missingReference');\n  });\n\n  it('return Issues when SDO type attribute is missing', async () => {\n    const typelessSDo = doc.querySelector('LNodeType[id=\"typelessSDo\"] > SDO')!;\n    const errors = await dOValidator(typelessSDo);\n    expect(errors.length).to.equal(1);\n    expect(errors[0].title).to.contain('missingAttribute');\n  });\n\n  it('return Issues when SDO type reference is missing', async () => {\n    const reflessSDo = doc.querySelector('LNodeType[id=\"relessSDo\"] > SDO')!;\n    const errors = await dOValidator(reflessSDo);\n    expect(errors.length).to.equal(1);\n    expect(errors[0].title).to.contain('missingReference');\n  });\n\n  it('return empty array for valid DO or SDO', async () => {\n    const correctDo = doc.querySelector('LNodeType[id=\"correctDo\"] > DO')!;\n    const errors = await dOValidator(correctDo);\n    expect(errors.length).to.equal(0);\n  });\n});\n"]}