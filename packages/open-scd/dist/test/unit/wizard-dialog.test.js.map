{"version":3,"file":"wizard-dialog.test.js","sourceRoot":"","sources":["../../../test/unit/wizard-dialog.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AACzD,OAAO,EAAE,IAAI,IAAI,OAAO,EAAE,MAAM,KAAK,CAAC;AAEtC,OAAO,kBAAkB,CAAC;AAI1B,OAAO,+BAA+B,CAAC;AACvC,OAAO,4BAA4B,CAAC;AAOpC,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;IAC7B,IAAI,OAAqB,CAAC;IAC1B,UAAU,CAAC,KAAK,IAAI,EAAE;QACpB,OAAO,GAAG,MAAM,OAAO,CAAC,IAAI,CAAA,iCAAiC,CAAC,CAAC;IACjE,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,oCAAoC,EAAE,GAAG,EAAE;QAClD,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,OAAO,CAAC,MAAM,GAAG;gBACf;oBACE,KAAK,EAAE,QAAQ;oBACf,WAAW,EAAE;wBACX;4BACE,IAAI,EAAE,QAAQ;4BACd,KAAK,EAAE,QAAQ;4BACf,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE;yBACjB;wBACD;4BACE,IAAI,EAAE,QAAQ;4BACd,KAAK,EAAE,QAAQ;4BACf,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE;yBACjB;qBACF;iBACF;aACF,CAAC;YACF,MAAM,OAAO,CAAC,cAAc,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE,CACvC,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+BAA+B,EAAE,GAAG,EAAE;QAC7C,EAAE,CAAC,iBAAiB,EAAE,GAAG,EAAE,CACzB,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QAEnD,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAE5E,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,iCAAiC,EAAE,GAAG,EAAE;QAC/C,UAAU,CAAC,KAAK,IAAI,EAAE;YACpB,OAAO,CAAC,MAAM,GAAG;gBACf;oBACE,KAAK,EAAE,QAAQ;oBACf,OAAO,EAAE;wBACP,OAAO,CAAA;;iCAEc;qBACtB;oBACD,SAAS,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,gBAAgB,EAAE;iBACtE;gBACD;oBACE,KAAK,EAAE,QAAQ;oBACf,OAAO,EAAE;wBACP,OAAO,CAAA;;;iCAGc;qBACtB;iBACF;gBACD;oBACE,KAAK,EAAE,QAAQ;oBACf,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,KAAK,EAAE,cAAc,EAAE;iBACrE;aACF,CAAC;YACF,MAAM,OAAO,CAAC,cAAc,CAAC;QAC/B,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;YAChC,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YAClE,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,kDAAkD,EAAE,KAAK,IAAI,EAAE;YAClD,CACZ,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,iCAAiC,CAAC,CACpE,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB;YAC1E,MAAM,OAAO,CAAC,cAAc,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE,KAAK,IAAI,EAAE;YAC9D,OAAO,CAAC,IAAI,EAAE,CAAC;YACf,MAAM,OAAO,CAAC,cAAc,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC/C,CACZ,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,iCAAiC,CAAC,CACpE,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB;YAC1E,MAAM,OAAO,CAAC,cAAc,CAAC;YAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;YACnC,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,aAAa,CAC9B,kBAAkB,CAClB,CAAC,KAAK,GAAG,OAAO,CAAC;gBACnB,MAAM,OAAO,CAAC,cAAc,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE,CAC/B,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE/C,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE,CACxC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC;YAE3D,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;gBAC/D,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;gBACrD,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;gBACtB,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,kCAAkC,EAAE,KAAK,IAAI,EAAE;gBAChD,OAAO,CAAC,GAAG,EAAE,CAAC;gBACd,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;YACjC,EAAE,CAAC,qBAAqB,EAAE,GAAG,EAAE,CAC7B,MAAM,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAE9C,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE,CAC9B,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5D,EAAE,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;gBACrD,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;gBAClE,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;gBACvD,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,OAAO,CAAC,IAAI,EAAE,CAAC;gBACf,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;gBAC7D,MAAM,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;YACpE,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE;gBACvC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;gBACtB,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;YAC/D,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,wEAAwE,EAAE,KAAK,IAAI,EAAE;YACtF,OAAO,CAAC,MAAM,GAAG;gBACf;oBACE,KAAK,EAAE,QAAQ;oBACf,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,GAAmB,EAAE;4BAC3B,OAAO;gCACL;oCACE,GAAG,EAAE;wCACH,MAAM,EAAE,OAAO;wCACf,OAAO,EAAE,OAAO;wCAChB,SAAS,EAAE,IAAI;qCAChB;iCACF;6BACF,CAAC;wBACJ,CAAC;wBACD,KAAK,EAAE,cAAc;qBACtB;iBACF;aACF,CAAC;YACF,MAAM,OAAO,CAAC,cAAc,CAAC;YACf,CACZ,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,kCAAkC,CAAC,CACrE,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC;QACjD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,0EAA0E,EAAE,KAAK,IAAI,EAAE;YACxF,OAAO,CAAC,MAAM,GAAG;gBACf;oBACE,KAAK,EAAE,QAAQ;oBACf,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE;wBACP,IAAI,EAAE,QAAQ;wBACd,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE;wBAChB,KAAK,EAAE,cAAc;qBACtB;iBACF;aACF,CAAC;YACF,MAAM,OAAO,CAAC,cAAc,CAAC;YACf,CACZ,OAAO,CAAC,UAAW,CAAC,aAAa,CAAC,kCAAkC,CAAC,CACrE,CAAC,KAAK,EAAE,CAAC;YACX,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,aAAa,EAAE,GAAG,EAAE;YAC3B,IAAI,IAAa,CAAC;YAElB,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,GAAG,MAAM,OAAO,CACrB,IAAI,CAAA,4DAA4D,CACjE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,aAAa,CAAe,eAAe,CAAE,CAAC,CAAC;gBACjE,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;gBACpC,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,IAAI,GAAG,IAAI,SAAS,EAAE,CAAC,eAAe,CACpC,2BAA2B,EAC3B,iBAAiB,CAClB,CAAC,eAAe,CAAC;gBAClB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE,IAAI,CAAC,iBAAkB;wBAChC,OAAO,EAAE,EAAE;wBACX,OAAO,EAAE;4BACP,IAAI,EAAE,QAAQ;4BACd,MAAM,EAAE,GAAG,EAAE,CAAC,EAAE;4BAChB,KAAK,EAAE,cAAc;yBACtB;qBACF;iBACF,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yBAAyB,EAAE,KAAK,IAAI,EAAE,CACvC,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;YAE5C,EAAE,CAAC,0DAA0D,EAAE,KAAK,IAAI,EAAE;gBACxE,OAAO,CAAC,MAAO,CAAC,aAAa,CAAC,wBAAwB,CAAE,CAAC,EAAE,GAAG,IAAI,CAAC;gBACnE,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,OAAO,CAAC,cAAc,CAAC;gBAC7B,MAAM,OAAO,CAAC,MAAM,EAAE,cAAc,CAAC;gBACrC,MAAM,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;YAC3C,CAAC,CAAC,CAAC;YAEH,QAAQ,CAAC,qBAAqB,EAAE,GAAG,EAAE;gBACnC,UAAU,CAAC,KAAK,IAAI,EAAE;oBACpB,OAAO,CAAC,MAAO,CAAC,aAAa,CAAC,wBAAwB,CAAE,CAAC,EAAE,GAAG,IAAI,CAAC;oBACnE,OAAO,CAAC,aAAa,EAAE,CAAC;oBACxB,MAAM,OAAO,CAAC,cAAc,CAAC;oBAC7B,MAAM,OAAO,CAAC,MAAM,EAAE,cAAc,CAAC;gBACvC,CAAC,CAAC,CAAC;gBAEH,EAAE,CAAC,iDAAiD,EAAE,KAAK,IAAI,EAAE;oBAC/D,OAAO,CAAC,MAAM;wBACZ,EAAE,aAAa,CAAC,YAAY,CAAC;wBAC7B,EAAE,YAAY,CAAC,OAAO,EAAE,qBAAqB,CAAC,CAAC;oBACjD,MAAM,OAAO,CAAC,cAAc,CAAC;oBAC7B,OAAO,CAAC,MAAM;wBACZ,EAAE,aAAa,CAAS,kCAAkC,CAAE;yBAC3D,KAAK,EAAE,CAAC;oBACX,MAAM,OAAO,CAAC,cAAc,CAAC;oBAC7B,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;gBACxE,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,QAAQ,CAAC,+CAA+C,EAAE,GAAG,EAAE;QAC7D,QAAQ,CAAC,iDAAiD,EAAE,GAAG,EAAE;YAC/D,IAAI,QAAwB,CAAC;YAC7B,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,UAAU;gCAChB,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,MAAM;gCAClB,QAAQ,EAAE,IAAI;gCACd,OAAO,EAAE,IAAI;6BACd;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,QAAQ;oBACN,OAAO,CAAC,UAAW,CAAC,aAAa,CAAiB,iBAAiB,CAAE,CAAC;gBACxE,MAAM,QAAQ,CAAC,aAAa,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE,CACtD,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;YAEjD,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE,CACnE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAE9C,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE,CACpE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAExC,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE,CAC3D,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAEjD,EAAE,CAAC,wDAAwD,EAAE,GAAG,EAAE,CAChE,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,+CAA+C,EAAE,GAAG,EAAE;YAC7D,IAAI,QAAwB,CAAC;YAC7B,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,UAAU;gCAChB,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,IAAI;gCAChB,QAAQ,EAAE,IAAI;gCACd,OAAO,EAAE,KAAK;6BACf;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,QAAQ;oBACN,OAAO,CAAC,UAAW,CAAC,aAAa,CAAiB,iBAAiB,CAAE,CAAC;gBACxE,MAAM,QAAQ,CAAC,aAAa,EAAE,CAAC;YACjC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE,CACtD,MAAM,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;YAEjD,EAAE,CAAC,2DAA2D,EAAE,GAAG,EAAE,CACnE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE/C,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE,CACpE,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAExC,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE,CAC3D,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAEjD,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE;gBACtE,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,kBAAkB;gBAC1E,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YACzC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,+CAA+C,EAAE,GAAG,EAAE;YAC7D,IAAI,MAAoB,CAAC;YACzB,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,SAAS;gCAChB,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;gCAC5B,UAAU,EAAE,QAAQ;6BACrB;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,MAAM;oBACJ,OAAO,CAAC,UAAW,CAAC,aAAa,CAAe,eAAe,CAAE,CAAC;gBACpE,MAAM,MAAM,CAAC,aAAa,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE,CACtD,MAAM,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;YAE/C,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE,CACjE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAE/C,EAAE,CAAC,0DAA0D,EAAE,GAAG,EAAE,CAClE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAEvC,EAAE,CAAC,iEAAiE,EAAE,GAAG,EAAE,CACzE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAE1C,EAAE,CAAC,iDAAiD,EAAE,GAAG,EAAE,CACzD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAE/C,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE,CACpE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,4CAA4C,EAAE,GAAG,EAAE;YAC1D,IAAI,MAAoB,CAAC;YACzB,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,QAAQ;gCACd,KAAK,EAAE,SAAS;gCAChB,MAAM,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC;gCAC5B,UAAU,EAAE,IAAI;gCAChB,QAAQ,EAAE,IAAI;gCACd,OAAO,EAAE,QAAQ;6BAClB;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,MAAM;oBACJ,OAAO,CAAC,UAAW,CAAC,aAAa,CAAe,eAAe,CAAE,CAAC;gBACpE,MAAM,MAAM,CAAC,aAAa,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yDAAyD,EAAE,GAAG,EAAE,CACjE,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC;YAErD,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE,CACpE,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAEtC,EAAE,CAAC,mDAAmD,EAAE,GAAG,EAAE,CAC3D,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAE/C,EAAE,CAAC,wDAAwD,EAAE,KAAK,IAAI,EAAE,CACtE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,kDAAkD,EAAE,GAAG,EAAE;YAChE,IAAI,SAA0B,CAAC;YAC/B,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,WAAW;gCACjB,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,IAAI;gCAChB,QAAQ,EAAE,IAAI;6BACf;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,SAAS;oBACP,OAAO,CAAC,UAAW,CAAC,aAAa,CAC/B,kBAAkB,CAClB,CAAC;gBACL,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,wCAAwC,EAAE,KAAK,IAAI,EAAE,CACtD,MAAM,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC;YAElD,EAAE,CAAC,4DAA4D,EAAE,GAAG,EAAE,CACpE,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;YAElD,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE,CACrE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAEzC,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE,CAC5D,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAElD,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE,CACvE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;YAE3C,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE,CAC5E,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAEjD,EAAE,CAAC,8DAA8D,EAAE,KAAK,IAAI,EAAE,CAC5E,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,uDAAuD,EAAE,GAAG,EAAE;YACrE,IAAI,SAA0B,CAAC;YAC/B,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,WAAW;gCACjB,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,OAAO;gCACnB,IAAI,EAAE,GAAG;gCACT,WAAW,EAAE,CAAC,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC;gCACjC,UAAU,EAAE,GAAG;6BAChB;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,SAAS;oBACP,OAAO,CAAC,UAAW,CAAC,aAAa,CAC/B,kBAAkB,CAClB,CAAC;gBACL,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,6DAA6D,EAAE,GAAG,EAAE,CACrE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAE7C,EAAE,CAAC,oDAAoD,EAAE,GAAG,EAAE,CAC5D,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAElD,EAAE,CAAC,yDAAyD,EAAE,KAAK,IAAI,EAAE,CACvE,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;YAElD,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE,CACpE,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE7C,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE,CACpE,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;YAE/C,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE,CACnD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,uDAAuD,EAAE,GAAG,EAAE;YACrE,IAAI,SAA0B,CAAC;YAC/B,MAAM,GAAG,GAAG,EAAE,CAAC;YACf,MAAM,GAAG,GAAG,GAAG,CAAC;YAEhB,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,WAAW;gCACjB,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,KAAK;gCACjB,MAAM,EAAE,GAAG;gCACX,QAAQ,EAAE,IAAI;gCACd,IAAI,EAAE,QAAQ;gCACd,GAAG;gCACH,GAAG;6BACJ;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,SAAS;oBACP,OAAO,CAAC,UAAW,CAAC,aAAa,CAC/B,kBAAkB,CAClB,CAAC;gBACL,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,yCAAyC,EAAE,KAAK,IAAI,EAAE;gBACvD,SAAS,CAAC,KAAK,GAAG,YAAY,CAAC;gBAC/B,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;gBAC9C,SAAS,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;gBAC/B,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBAE9C,SAAS,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;gBAC3B,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;gBAC9C,SAAS,CAAC,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC;gBAC/B,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;gBAE9C,SAAS,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;gBAC3B,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,qCAAqC,EAAE,KAAK,IAAI,EAAE,CACnD,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,QAAQ,CAAC,8DAA8D,EAAE,GAAG,EAAE;YAC5E,IAAI,SAA0B,CAAC;YAC/B,MAAM,OAAO,GAAG,sBAAsB,CAAC;YAEvC,UAAU,CAAC,KAAK,IAAI,EAAE;gBACpB,OAAO,CAAC,MAAM,GAAG;oBACf;wBACE,KAAK,EAAE,QAAQ;wBACf,OAAO,EAAE;4BACP;gCACE,IAAI,EAAE,WAAW;gCACjB,KAAK,EAAE,SAAS;gCAChB,UAAU,EAAE,QAAQ;gCACpB,OAAO;gCACP,SAAS,EAAE,CAAC;gCACZ,SAAS,EAAE,CAAC;6BACb;yBACF;qBACF;iBACF,CAAC;gBACF,MAAM,OAAO,CAAC,cAAc,CAAC;gBAE7B,SAAS;oBACP,OAAO,CAAC,UAAW,CAAC,aAAa,CAC/B,kBAAkB,CAClB,CAAC;gBACL,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;gBACpE,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC;gBACzB,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC;YAChD,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sDAAsD,EAAE,KAAK,IAAI,EAAE;gBACpE,SAAS,CAAC,KAAK,GAAG,QAAQ,CAAC;gBAC3B,MAAM,SAAS,CAAC,aAAa,EAAE,CAAC;gBAChC,MAAM,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC;YAC/C,CAAC,CAAC,CAAC;YAEH,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE,CACpD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAE9C,EAAE,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE,CACpD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { html, fixture, expect } from '@open-wc/testing';\nimport { html as litHTML } from 'lit';\n\nimport './mock-editor.js';\n\nimport { Button } from '@material/mwc-button';\n\nimport '../../src/wizard-textfield.js';\nimport '../../src/wizard-dialog.js';\nimport { WizardDialog } from '../../src/wizard-dialog.js';\nimport { EditorAction, WizardInputElement } from '../../src/foundation.js';\nimport { WizardCheckbox } from '../../src/wizard-checkbox.js';\nimport { WizardSelect } from '../../src/wizard-select.js';\nimport { WizardTextField } from '../../src/wizard-textfield.js';\n\ndescribe('wizard-dialog', () => {\n  let element: WizardDialog;\n  beforeEach(async () => {\n    element = await fixture(html`<wizard-dialog></wizard-dialog>`);\n  });\n\n  describe('with user defined menu actions set', () => {\n    beforeEach(async () => {\n      element.wizard = [\n        {\n          title: 'Page 1',\n          menuActions: [\n            {\n              icon: 'delete',\n              label: 'remove',\n              action: () => [],\n            },\n            {\n              icon: 'delete',\n              label: 'remove',\n              action: () => [],\n            },\n          ],\n        },\n      ];\n      await element.updateComplete;\n    });\n\n    it('looks like its snapshot', async () =>\n      await expect(element).shadowDom.to.equalSnapshot());\n  });\n\n  describe('with an empty wizard property', () => {\n    it('shows no dialog', () =>\n      expect(element).property('dialog').to.not.exist);\n\n    it('is considered valid', () => expect(element.checkValidity()).to.be.true);\n\n    it('has no invalid pages', () =>\n      expect(element).to.have.property('firstInvalidPage', -1));\n  });\n\n  describe('with a nonempty wizard property', () => {\n    beforeEach(async () => {\n      element.wizard = [\n        {\n          title: 'Page 1',\n          content: [\n            litHTML`<wizard-textfield\n              label=\"Test textfield 1\"\n            ></wizard-textfield>`,\n          ],\n          secondary: { icon: 'add', action: () => [], label: 'Test secondary' },\n        },\n        {\n          title: 'Page 2',\n          content: [\n            litHTML`<wizard-textfield\n              type=\"email\"\n              label=\"Test textfield 2\"\n            ></wizard-textfield>`,\n          ],\n        },\n        {\n          title: 'Page 3',\n          content: [],\n          primary: { icon: 'anchor', action: () => [], label: 'Test primary' },\n        },\n      ];\n      await element.updateComplete;\n    });\n\n    it('shows the first dialog', () => {\n      expect(element).property('dialog').to.have.property('open', true);\n      expect(element.dialog).to.have.property('heading', 'Page 1');\n    });\n\n    it('advances to the second page on next button click', async () => {\n      (<HTMLElement>(\n        element.shadowRoot!.querySelector('mwc-button[dialogaction=\"next\"]')\n      )).click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      await element.updateComplete;\n      expect(element.dialog).to.have.property('heading', 'Page 2');\n    });\n\n    it('returns to the first page on prev button click', async () => {\n      element.next();\n      await element.updateComplete;\n      expect(element.dialog).to.have.property('heading', 'Page 2');\n      (<HTMLElement>(\n        element.shadowRoot!.querySelector('mwc-button[dialogaction=\"prev\"]')\n      )).click();\n      await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n      await element.updateComplete;\n      expect(element.dialog).to.have.property('heading', 'Page 1');\n    });\n\n    describe('with invalid inputs', () => {\n      beforeEach(async () => {\n        element.dialogs[1].querySelector<WizardInputElement>(\n          'wizard-textfield'\n        )!.value = 'Peter';\n        await element.updateComplete;\n      });\n\n      it('is considered invalid', () =>\n        expect(element.checkValidity()).to.be.false);\n\n      it('detects the first invalid page', () =>\n        expect(element).to.have.property('firstInvalidPage', 1));\n\n      it('does not allow to advance past the invalid page', async () => {\n        element.next();\n        element.next();\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 2');\n      });\n\n      it('jumps to first invalid page on action', async () => {\n        element.act(() => []);\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 2');\n      });\n\n      it('does nothing on undefined action', async () => {\n        element.act();\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 1');\n      });\n    });\n\n    describe('with valid inputs', () => {\n      it('is considered valid', () =>\n        expect(element.checkValidity()).to.be.true);\n\n      it('has no invalid pages', () =>\n        expect(element).to.have.property('firstInvalidPage', -1));\n\n      it('advances to the next dialog on next()', async () => {\n        element.next();\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 2');\n        expect(element).property('dialog').to.have.property('open', true);\n        element.next();\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 3');\n        expect(element).property('dialog').to.have.property('open', true);\n      });\n\n      it('returns to the previos dialog on prev()', async () => {\n        element.next();\n        element.prev();\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 1');\n        expect(element).property('dialog').to.have.property('open', true);\n      });\n\n      it('does not jump on action', async () => {\n        element.act(() => []);\n        await element.updateComplete;\n        expect(element.dialog).to.have.property('heading', 'Page 1');\n      });\n    });\n\n    it('removes primary action to prevent multiple trigger during wizard close', async () => {\n      element.wizard = [\n        {\n          title: 'Page 1',\n          content: [],\n          primary: {\n            icon: 'anchor',\n            action: (): EditorAction[] => {\n              return [\n                {\n                  new: {\n                    parent: element,\n                    element: element,\n                    reference: null,\n                  },\n                },\n              ];\n            },\n            label: 'Test primary',\n          },\n        },\n      ];\n      await element.updateComplete;\n      (<HTMLElement>(\n        element.shadowRoot!.querySelector('mwc-button[slot=\"primaryAction\"]')\n      )).click();\n      expect(element.wizard[0].primary).to.not.exist;\n    });\n\n    it('does not remove primary action as long as no editor action is dispatched', async () => {\n      element.wizard = [\n        {\n          title: 'Page 1',\n          content: [],\n          primary: {\n            icon: 'anchor',\n            action: () => [],\n            label: 'Test primary',\n          },\n        },\n      ];\n      await element.updateComplete;\n      (<HTMLElement>(\n        element.shadowRoot!.querySelector('mwc-button[slot=\"primaryAction\"]')\n      )).click();\n      expect(element.wizard[0].primary).to.exist;\n    });\n\n    describe('in pro mode', () => {\n      let host: Element;\n\n      beforeEach(async () => {\n        element = await fixture(\n          html`<mock-editor><wizard-dialog></wizard-dialog></mock-editor>`\n        ).then(elm => elm.querySelector<WizardDialog>('wizard-dialog')!);\n        localStorage.setItem('mode', 'pro');\n        element.requestUpdate();\n        await element.updateComplete;\n        host = new DOMParser().parseFromString(\n          '<host><test></test><host>',\n          'application/xml'\n        ).documentElement;\n        element.wizard = [\n          {\n            title: 'Page 1',\n            element: host.firstElementChild!,\n            content: [],\n            primary: {\n              icon: 'anchor',\n              action: () => [],\n              label: 'Test primary',\n            },\n          },\n        ];\n      });\n\n      it('looks like its snapshot', async () =>\n        await expect(element).to.equalSnapshot());\n\n      it('switches to code editor view on code toggle button click', async () => {\n        element.dialog!.querySelector('mwc-icon-button-toggle')!.on = true;\n        element.requestUpdate();\n        await element.updateComplete;\n        await element.dialog?.updateComplete;\n        await expect(element).to.equalSnapshot();\n      });\n\n      describe('in code editor mode', () => {\n        beforeEach(async () => {\n          element.dialog!.querySelector('mwc-icon-button-toggle')!.on = true;\n          element.requestUpdate();\n          await element.updateComplete;\n          await element.dialog?.updateComplete;\n        });\n\n        it('commits the code action on primary button click', async () => {\n          element.dialog\n            ?.querySelector('ace-editor')\n            ?.setAttribute('value', '<success></success>');\n          await element.updateComplete;\n          element.dialog\n            ?.querySelector<Button>('mwc-button[slot=\"primaryAction\"]')!\n            .click();\n          await element.updateComplete;\n          expect(host.firstElementChild).to.have.property('tagName', 'success');\n        });\n      });\n\n      after(() => localStorage.removeItem('mode'));\n    });\n  });\n\n  describe('with content definition throught WizardInputs', () => {\n    describe('for a specific WizardInput of the kind Checkbox', () => {\n      let checkbox: WizardCheckbox;\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'Checkbox',\n                label: 'myLabel',\n                maybeValue: 'true',\n                nullable: true,\n                default: true,\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        checkbox =\n          element.shadowRoot!.querySelector<WizardCheckbox>('wizard-checkbox')!;\n        await checkbox.requestUpdate();\n      });\n\n      it('the dom looks like the latest snapshot', async () =>\n        await expect(checkbox).dom.to.equalSnapshot());\n\n      it('makes sure that wizard-checkbox has correct default value', () =>\n        expect(checkbox.defaultChecked).to.be.true);\n\n      it('makes sure that wizard-checkbox has correct nullable value', () =>\n        expect(checkbox.nullable).to.be.true);\n\n      it('makes sure that wizard-checkbox has correct label', () =>\n        expect(checkbox.label).to.be.equal('myLabel'));\n\n      it('makes sure that wizard-checkbox has correct maybeValue', () =>\n        expect(checkbox.maybeValue).to.be.equal('true'));\n    });\n\n    describe('for another WizardInputs of the kind Checkbox', () => {\n      let checkbox: WizardCheckbox;\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'Checkbox',\n                label: 'myLabel',\n                maybeValue: null,\n                nullable: true,\n                default: false,\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        checkbox =\n          element.shadowRoot!.querySelector<WizardCheckbox>('wizard-checkbox')!;\n        await checkbox.requestUpdate();\n      });\n\n      it('the dom looks like the latest snapshot', async () =>\n        await expect(checkbox).dom.to.equalSnapshot());\n\n      it('makes sure that wizard-checkbox has correct default value', () =>\n        expect(checkbox.defaultChecked).to.be.false);\n\n      it('makes sure that wizard-checkbox has correct nullable value', () =>\n        expect(checkbox.nullable).to.be.true);\n\n      it('makes sure that wizard-checkbox has correct label', () =>\n        expect(checkbox.label).to.be.equal('myLabel'));\n\n      it('makes sure that wizard-checkbox has correct maybeValue', async () => {\n        await new Promise(resolve => setTimeout(resolve, 100)); // await animation\n        expect(checkbox.maybeValue).to.be.null;\n      });\n    });\n\n    describe('for a specific WizardInput of the kind Select', () => {\n      let select: WizardSelect;\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'Select',\n                label: 'myLabel',\n                values: ['multi1', 'multi2'],\n                maybeValue: 'multi1',\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        select =\n          element.shadowRoot!.querySelector<WizardSelect>('wizard-select')!;\n        await select.requestUpdate();\n      });\n\n      it('the dom looks like the latest snapshot', async () =>\n        await expect(select).dom.to.equalSnapshot());\n\n      it('makes sure that wizard-select has correct default value', () =>\n        expect(select.defaultValue).to.be.equal(''));\n\n      it('makes sure that wizard-select has correct nullable value', () =>\n        expect(select.nullable).to.be.false);\n\n      it('makes sure to not render nullSwitch with missing/false nullable', () =>\n        expect(select.nullSwitch).to.not.exist);\n\n      it('makes sure that wizard-select has correct label', () =>\n        expect(select.label).to.be.equal('myLabel'));\n\n      it('makes sure that wizard-select has correct maybeValue', async () =>\n        expect(select.maybeValue).to.equal('multi1'));\n    });\n\n    describe('for another WizardInput of the kind Select', () => {\n      let select: WizardSelect;\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'Select',\n                label: 'myLabel',\n                values: ['multi1', 'multi2'],\n                maybeValue: null,\n                nullable: true,\n                default: 'multi2',\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        select =\n          element.shadowRoot!.querySelector<WizardSelect>('wizard-select')!;\n        await select.requestUpdate();\n      });\n\n      it('makes sure that wizard-select has correct default value', () =>\n        expect(select.defaultValue).to.be.equal('multi2'));\n\n      it('makes sure that wizard-checkbox has correct nullable value', () =>\n        expect(select.nullable).to.be.true);\n\n      it('makes sure that wizard-checkbox has correct label', () =>\n        expect(select.label).to.be.equal('myLabel'));\n\n      it('makes sure that wizard-checkbox has correct maybeValue', async () =>\n        expect(select.maybeValue).to.be.null);\n    });\n\n    describe('for a specific WizardInput of the kind TextField', () => {\n      let textField: WizardTextField;\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'TextField',\n                label: 'myLabel',\n                maybeValue: null,\n                nullable: true,\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        textField =\n          element.shadowRoot!.querySelector<WizardTextField>(\n            'wizard-textfield'\n          )!;\n        await textField.requestUpdate();\n      });\n\n      it('the dom looks like the latest snapshot', async () =>\n        await expect(textField).dom.to.equalSnapshot());\n\n      it('makes sure that wizard-textfield has correct default value', () =>\n        expect(textField.defaultValue).to.be.equal(''));\n\n      it('makes sure that wizard-textfield has correct nullable value', () =>\n        expect(textField.nullSwitch).to.exist);\n\n      it('makes sure that wizard-textfield has correct label', () =>\n        expect(textField.label).to.be.equal('myLabel'));\n\n      it('makes sure that wizard-textfield has correct maybeValue', async () =>\n        expect(textField.maybeValue).to.be.null);\n\n      it('does not render multiplier selction with defined multipliers', async () =>\n        expect(textField.multiplierMenu).to.not.exist);\n\n      it('does not render multiplier selction with defined multipliers', async () =>\n        expect(textField.multiplierButton).to.not.exist);\n    });\n\n    describe('for a specific TextField WizardInput with multipliers', () => {\n      let textField: WizardTextField;\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'TextField',\n                label: 'myLabel',\n                maybeValue: 'value',\n                unit: 'V',\n                multipliers: ['', null, 'k', 'M'],\n                multiplier: 'k',\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        textField =\n          element.shadowRoot!.querySelector<WizardTextField>(\n            'wizard-textfield'\n          )!;\n        await textField.requestUpdate();\n      });\n\n      it('makes sure that wizard-textfield has correct nullable value', () =>\n        expect(textField.nullSwitch).to.not.exist);\n\n      it('makes sure that wizard-textfield has correct label', () =>\n        expect(textField.label).to.be.equal('myLabel'));\n\n      it('makes sure that wizard-textfield has correct maybeValue', async () =>\n        expect(textField.maybeValue).to.equal('value'));\n\n      it('renders multiplier selction with defined multipliers', async () =>\n        expect(textField.multiplierMenu).to.exist);\n\n      it('renders multiplier selction with defined multipliers', async () =>\n        expect(textField.multiplierButton).to.exist);\n\n      it('shows multiplier and unit as suffix', async () =>\n        expect(textField.suffix).to.equal('kV'));\n    });\n\n    describe('for a specific TextField WizardInput with type number', () => {\n      let textField: WizardTextField;\n      const min = 89;\n      const max = 101;\n\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'TextField',\n                label: 'myLabel',\n                maybeValue: '100',\n                suffix: '#',\n                required: true,\n                type: 'number',\n                min,\n                max,\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        textField =\n          element.shadowRoot!.querySelector<WizardTextField>(\n            'wizard-textfield'\n          )!;\n        await textField.requestUpdate();\n      });\n\n      it('does not allow chars other than numbers', async () => {\n        textField.value = 'someString';\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.false;\n      });\n\n      it('properly set the min attribute', async () => {\n        textField.value = `${min - 1}`;\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.false;\n\n        textField.value = `${min}`;\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.true;\n      });\n\n      it('properly set the max attribute', async () => {\n        textField.value = `${max + 1}`;\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.false;\n\n        textField.value = `${max}`;\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.true;\n      });\n\n      it('shows multiplier and unit as suffix', async () =>\n        expect(textField.suffix).to.equal('#'));\n    });\n\n    describe('for a specific TextField WizardInput with pattern definition', () => {\n      let textField: WizardTextField;\n      const pattern = '[a-zA-Z][a-zA-Z0-9]*';\n\n      beforeEach(async () => {\n        element.wizard = [\n          {\n            title: 'Page 1',\n            content: [\n              {\n                kind: 'TextField',\n                label: 'myLabel',\n                maybeValue: 'oldIED',\n                pattern,\n                minLength: 3,\n                maxLength: 7,\n              },\n            ],\n          },\n        ];\n        await element.updateComplete;\n\n        textField =\n          element.shadowRoot!.querySelector<WizardTextField>(\n            'wizard-textfield'\n          )!;\n        await textField.requestUpdate();\n      });\n\n      it('does not allow values outside the pattern definition', async () => {\n        textField.value = '0IED';\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.false;\n      });\n\n      it('does not allow values outside the pattern definition', async () => {\n        textField.value = 'valIED';\n        await textField.requestUpdate();\n        expect(textField.checkValidity()).to.be.true;\n      });\n\n      it('properly set the minLength attribute', async () =>\n        expect(textField.minLength).to.be.equal(3));\n\n      it('properly set the maxLength attribute', async () =>\n        expect(textField.maxLength).to.equal(7));\n    });\n  });\n});\n"]}