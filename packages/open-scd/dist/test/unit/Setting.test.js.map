{"version":3,"file":"Setting.test.js","sourceRoot":"","sources":["../../../test/unit/Setting.test.ts"],"names":[],"mappings":"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","sourcesContent":["import { registerTranslateConfig, use } from 'lit-translate';\n\nimport { html, fixture, expect } from '@open-wc/testing';\n\nimport '../../src/addons/Settings.js';\nimport { OscdSettings, defaults } from '../../src/addons/Settings.js';\n\nimport { Button } from '@material/mwc-button';\n\ndescribe('OSCD-Settings', () => {\n  let element: OscdSettings;\n  beforeEach(async () => {\n    localStorage.clear();\n\n    element = <OscdSettings>(\n      await fixture(html`<oscd-settings .host=${this}></oscd-settings>`)\n    );\n  });\n\n  it('initially has default settings', () =>\n    expect(element).to.have.deep.property('settings', defaults));\n\n  it('stores settings to localStorage', () => {\n    element.setSetting('theme', 'dark');\n    expect(localStorage.getItem('theme')).to.equal('dark');\n  });\n\n  it('retrieves settings from localStorage', () => {\n    localStorage.setItem('language', 'de');\n    expect(element.settings).to.have.property('language', 'de');\n  });\n\n  it('saves chosen settings on save button click', async () => {\n    element.settingsUI.show();\n    element.darkThemeUI.selected = true;\n    await element.darkThemeUI.updateComplete;\n    await (<Button>(\n      element.settingsUI.querySelector('mwc-button[dialogAction=\"save\"]')\n    )).click();\n    expect(element.settings).to.have.property('theme', 'dark');\n  });\n\n  it('resets settings to default on reset button click', async () => {\n    element.settingsUI.show();\n    await element.settingsUI.updateComplete;\n    element.setSetting('language', 'de');\n    expect(element).to.not.have.deep.property('settings', defaults);\n    (<Button>(\n      element.settingsUI.querySelector('mwc-button[dialogAction=\"reset\"]')\n    )).click();\n    expect(element).to.have.deep.property('settings', defaults);\n  });\n\n  it('saves chosen .nsdoc file and looks like latest snapshot', async () => {\n    element.settingsUI.show();\n    await element.settingsUI.updateComplete;\n\n    const nsdocFile = await fetch(\n      '/test/testfiles/nsdoc/IEC_61850-7-2.nsdoc'\n    ).then(response => response.text());\n\n    element.setSetting('IEC 61850-7-2', nsdocFile);\n\n    await element.requestUpdate();\n    await element.updateComplete;\n\n    expect(localStorage.getItem('IEC 61850-7-2')).to.eql(nsdocFile);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n\n  it('deletes a chosen .nsdoc file and looks like latest snapshot', async () => {\n    element.settingsUI.show();\n    await element.settingsUI.updateComplete;\n\n    const nsdocFile = await fetch(\n      '/test/testfiles/nsdoc/IEC_61850-7-2.nsdoc'\n    ).then(response => response.text());\n\n    element.setSetting('IEC 61850-7-2', nsdocFile);\n\n    await element.requestUpdate();\n    await element.updateComplete;\n\n    (<Button>(\n      element.settingsUI.querySelector('mwc-icon[id=\"deleteNsdocItem\"]')\n    )).click();\n\n    await element.requestUpdate();\n    await element.updateComplete;\n\n    expect(localStorage.getItem('IEC 61850-7-2')).to.equal(null);\n    await expect(element).shadowDom.to.equalSnapshot();\n  });\n}).afterAll(() => {\n  registerTranslateConfig({ empty: key => `[${key}]` });\n  // dirty hack to let other tests pass which rely on untranslated text\n  use('test');\n});\n"]}